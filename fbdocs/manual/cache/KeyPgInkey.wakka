{{fbdoc item="title" value="INKEY"}}----
Renvoie une cha&icirc;ne repr&eacute;sentant la premi&egrave;re touche en attente dans la m&eacute;moire tampon du clavier

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Inkey** ( ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Inkey**[$]
##
{{fbdoc item="section" value="Valeur retourn&eacute;e
	Le premier caract&egrave;re trouv&eacute; dans le tampon de clavier ou une cha&icirc;ne vide (##"####"##) si rien n'est trouv&eacute;.

{{fbdoc item="desc"}}
	V&eacute;rifie rapidement dans la m&eacute;moire tampon du clavier et retourne une repr&eacute;sentation ##[[KeyPgString String]]## du premier caract&egrave;re, s'il y en a un de trouv&eacute;. La touche est ensuite retir&eacute;e de la m&eacute;moire tampon et n'est pas envoy&eacute;e &agrave; l'&eacute;cran. Si la m&eacute;moire tampon du clavier est vide, une cha&icirc;ne vide (##"####"##) est retourn&eacute;e imm&eacute;diatement, sans attendre d'autres touches.

	Si la valeur est dans le jeu de caract&egrave;res ASCII, une ##[[KeyPgString String]]## d'un seul caract&egrave;re correspondant &agrave; cette valeur est retourn&eacute;e. Si la touche est une touche "&eacute;tendue" (pav&eacute; num&eacute;rique, curseur, fonctions) une ##[[KeyPgString String]]## de deux caract&egrave;res est retourn&eacute;e, dans laquelle le premier repr&eacute;sente le caract&egrave;re &eacute;tendu (//Voir ci-dessous diff&eacute;rences de dialecte//)

	Les touches Shift, Ctrl, Alt et AltGr ne peut pas &ecirc;tre lues ind&eacute;pendamment par cette fonction car elles n'entrent jamais dans la m&eacute;moire tampon du clavier (bien que, de toute &eacute;vidence, Shift-A sera signal&eacute; par ##**Inkey**## diff&eacute;remment de Control-A et ainsi de suite; Alt-A est une touche &eacute;tendue comme ci-dessus).
	
	Voir aussi ##[[KeyPgInputnum Input()]]## ou ##[[KeyPgGetkey GetKey]]##, ou ##[[KeyPgSleep Sleep]]## pour attendre une touche si la m&eacute;moire tampon du clavier est vide.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/input/inkey.bas"}}%%(freebasic)
print "press q to quit"
do
	sleep 1, 1
loop until inkey = "q"
%%
{{fbdoc item="filename" value="examples/manual/input/inkeyext.bas"}}%%(freebasic)
#if __FB_LANG__ = "qb"
#define EXTCHAR Chr$(0)
#else
#define EXTCHAR Chr(255)
#endif

Dim k As String

Print "Press a key, or Escape to end"
Do

	k = Inkey$

	Select Case k

	    Case "A" To "Z", "a" To "z": Print "Letter: " & k
	    Case "1" To "9":             Print "Number: " & k

	    Case Chr$(32): Print "Space"

	    Case Chr$(27): Print "Escape"

	    Case Chr$(32) To Chr$(127)

	    Print "Printable character: " & k

	    Case EXTCHAR & "G": Print "Up Left / Home"
	        Case EXTCHAR & "H": Print "Up"

	    Case EXTCHAR & "I": Print "Up Right / PgUp"
	    Case EXTCHAR & "K": Print "Left"
	    Case EXTCHAR & "L": Print "Center"

	    Case EXTCHAR & "M": Print "Right"
	    Case EXTCHAR & "O": Print "Down Left / End"
	    Case EXTCHAR & "P": Print "Down"

	    Case EXTCHAR & "Q": Print "Down Right / PgDn"
	    Case EXTCHAR & Chr$(59) To EXTCHAR & Chr$(68)
	    Print "Function key: F" & Asc(k, 2) - 58

	    Case EXTCHAR & Chr$(133) To EXTCHAR & Chr$(134)
	    Print "Function key: F" & Asc(k, 2) - 122


	    Case Else

	    If Len(k) = 2 Then
	        Print Using "Extended character: chr$(###, ###)"; Asc(k, 1); Asc(k, 2)

	    ElseIf Len(k) = 1 Then
	        Print Using "Character chr$(###)"; Asc(k)

	    End If
	        End Select
	            If k = Chr$(27) Then Exit Do
	        Sleep 1, 1
	            Loop
	        %%

	{{fbdoc item="lang"}}

	- Le caract&egrave;re &eacute;tendu est ##[[KeyPgChr Chr]](255)## dans les dialectes //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang fblite]]//.

	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, le caract&egrave;re &eacute;tendu d&eacute;pend de la fa&ccedil;on dont le mot-cl&eacute; est &eacute;crit. Si la forme ##**Inkey$**## est utilis&eacute;e, le caract&egrave;re &eacute;tendu est ##[[KeyPgChr Chr]](0)##.  Si elle est r&eacute;f&eacute;renc&eacute;e comme ##**__Inkey**##, le char est &eacute;tendu ##[[KeyPgChr Chr]](255)##.

- Dans tous les autres dialectes, le caract&egrave;re &eacute;tendu est toujours ##[[KeyPgChr Chr]](255)##.
- Le suffixe de type cha&icirc;ne ##$## est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//, mais n&eacute;cessaire en dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Aucune dans le dialecte //[[CompilerOptlang -lang qb]]//.
		- QBasic retourne un ##[[KeyPgChr Chr]](0)## comme premier caract&egrave;re pour une touche &eacute;tendue, mais FreeBASIC retourne ##[[KeyPgChr Chr]](255)## comme premier caract&egrave;re dans les dialectes //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang fblite]]//.
		{{fbdoc item="see"}}
	- ##[[KeyPgSleep Sleep]]##

- ##[[KeyPgGetkey GetKey]]##
	- ##[[KeyPgInputnum Input()]]##
	- ##[[KeyPgMultikey MultiKey]]##

{{fbdoc item="see"}}
	- ##[[KeyPgSleep Sleep]]##
	- ##[[KeyPgGetkey Getkey]]##
	- ##[[KeyPgInputnum Input()]]##
	- ##[[KeyPgMultikey Multikey]]##

{{fbdoc item="back" value="CatPgInput|User Input"}}