{{fbdoc item="title" value="Op&eacute;rateur Next (It&eacute;ration)"}}----
Détermine si une boucle ##[[KeyPgFornext For...Next]]## est terminée

{{fbdoc item="syntax"}}##
	{ [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] } //typename//
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Next** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //cond// [[KeyPgAs as]] //typename// ) [[KeyPgAs as]] [[KeyPgInteger Integer]]
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Next** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //cond// [[KeyPgAs as]] //typename//, [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //stp// [[KeyPgAs as]] //typename// ) [[KeyPgAs as]] [[KeyPgInteger Integer]]
		//...//
	End { [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] }
##
{{fbdoc item="usage"}}##
	[[KeyPgFornext For]] //iterator// [ As //typename// ] = //start_value// To //end_value// [ [[KeyPgFornext Step]] //step_value// ]
		[// ...statements... //]
	[[KeyPgFornext Next]]
##
{{fbdoc item="param"}}
	##//typename//##
		nom du ##[[KeyPgType Type]]##, de la ##[[KeyPgClass Class]]## ou de l'##[[KeyPgUnion Union]]##
	##//cond//##, ##//end_value//##
		un objet ##//typename//## utilisé comme valeur de fin de boucle
	##//stp//##, ##//step_value//##
		un objet ##//typename//## utilisé comme valeur d'incrémentation
	##//iterator//##
		un objet ##//typename//## utilisé comme itérateur
	##//start_value//##
		un objet ##//typename//## utilisé pour copie de construction ou à assigner à l'itérateur initialement

{{fbdoc item="desc"}}
	##[[KeyPgOpFor Opérateur For]]##, ##**Operator Next**## et ##[[KeyPgOpStep Operator Step]]## peuvent être surchargés dans un type défini par l'utilisateur pour permettre à des définitions d'objets de ce type d'être utilisés comme itérateurs et valeurs d'incrémentation dans des boucles ##[[KeyPgFornext For...Next]]##.

	L'##**Operator Next**## est appelé chaque fois que l'itérateur doit être vérifié par rapport à la valeur de fin. Ceci se passe immédiatement après l'appel à son ##[[KeyPgOpFor Operator For]]## et immédiatement après les appels à son ##[[KeyPgOpStep Operator Step]]##. ##**Operator Next**## retournera zéro (0) si la boucle doit se terminer ou non-zéro si la boucle doit continuer l'itération. La première fois que l'##**Operator Next**## est appelé, aucune déclaration du corps de ##[[KeyPgFornext For...Next]]##, si elles existent, ne sont encore exécutées.

	La première version de ##**Operator Next**## est utilisée si aucune valeur d'incrémentation n'a été donnée dans la déclaration de ##[[KeyPgFornext For...Next]]##. Si une valeur d'incrémentation est donnée, la seconde version est utilisée et la valeur d'incrémentation est passée.

{{fbdoc item="ex"}}
	Voir les exemples de [[KeyPgOpStep Operator Step]].

{{fbdoc item="lang"}}
	- Disponible seulement dans le dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="see"}}
	- ##[[KeyPgOpFor Operator For]]##
	- ##[[KeyPgOpStep Operator Step]]##
	- ##[[KeyPgFornext For...Next]]##

{{fbdoc item="back" value="CatPgOpIterating|Iterating Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}

