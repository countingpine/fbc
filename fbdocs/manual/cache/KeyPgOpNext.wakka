{{fbdoc item="title" value="Operator Next (Iteration)"}}----
D&eacute;termine si une boucle ##[[KeyPgFornext For...Next]]## est termin&eacute;e

{{fbdoc item="syntax"}}##
	{ [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] } //typename//
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Next** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //cond// [[KeyPgAs as]] //typename// ) [[KeyPgAs as]] [[KeyPgInteger Integer]]
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Next** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //cond// [[KeyPgAs as]] //typename//, [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //stp// [[KeyPgAs as]] //typename// ) [[KeyPgAs as]] [[KeyPgInteger Integer]]
		//...//
	End { [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] }
##
{{fbdoc item="usage"}}##
	[[KeyPgFornext For]] //iterator// [ As //typename// ] = //start_value// To //end_value// [ [[KeyPgFornext Step]] //step_value// ]
		[// ...statements... //]
	[[KeyPgFornext Next]]
##
{{fbdoc item="param"}}
	##//typename//##
		nom du ##[[KeyPgType Type]]##, de la ##[[KeyPgClass Class]]## ou de l'##[[KeyPgUnion Union]]##
	##//cond//##, ##//end_value//##
		un objet ##//typename//## utilis&eacute; comme valeur de fin de boucle
	##//stp//##, ##//step_value//##
		un objet ##//typename//## utilis&eacute; comme valeur d'incr&eacute;mentation
	##//iterator//##
		un objet ##//typename//## utilis&eacute; comme it&eacute;rateur
	##//start_value//##
		un objet ##//typename//## utilis&eacute; pour copie de construction ou &agrave; assigner &agrave; l'it&eacute;rateur initialement

{{fbdoc item="desc"}}
	##[[KeyPgOpFor Op&eacute;rateur For]]##, ##**Op&eacute;rateur Next**## et ##[[KeyPgOpStep Op&eacute;rateur Step]]## peuvent &ecirc;tre surcharg&eacute;s dans un type d&eacute;fini par l'utilisateur pour permettre &agrave; des d&eacute;finitions d'objets de ce type d'&ecirc;tre utilis&eacute;s comme it&eacute;rateurs et valeurs d'incr&eacute;mentation dans des boucles ##[[KeyPgFornext For...Next]]##.

	L'##**Op&eacute;rateur Next**## est appel&eacute; chaque fois que l'it&eacute;rateur doit &ecirc;tre v&eacute;rifi&eacute; par rapport &agrave; la valeur de fin. Ceci se passe imm&eacute;diatement apr&egrave;s l'appel &agrave; son ##[[KeyPgOpFor Op&eacute;rateur For]]## et imm&eacute;diatement apr&egrave;s les appels &agrave; son ##[[KeyPgOpStep Op&eacute;rateur Step]]##. ##**Op&eacute;rateur Next**## retournera z&eacute;ro (0) si la boucle doit se terminer ou non-z&eacute;ro si la boucle doit continuer l'it&eacute;ration. La premi&egrave;re fois que l'##**Op&eacute;rateur Next**## est appel&eacute;, aucune d&eacute;claration du corps de ##[[KeyPgFornext For...Next]]##, si elles existent, ne sont encore ex&eacute;cut&eacute;es.

	La premi&egrave;re version de ##**Op&eacute;rateur Next**## est utilis&eacute;e si aucune valeur d'incr&eacute;mentation n'a &eacute;t&eacute; donn&eacute;e dans la d&eacute;claration de ##[[KeyPgFornext For...Next]]##. Si une valeur d'incr&eacute;mentation est donn&eacute;e, la seconde version est utilis&eacute;e et la valeur d'incr&eacute;mentation est pass&eacute;e.

{{fbdoc item="ex"}}
	Voir les exemples de [[KeyPgOpStep Op&eacute;rateur Step]].

{{fbdoc item="lang"}}
	- Disponible seulement dans le dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="see"}}
	- ##[[KeyPgOpFor Op&eacute;rateur For]]##
	- ##[[KeyPgOpStep Op&eacute;rateur Step]]##
	- ##[[KeyPgFornext For...Next]]##

{{fbdoc item="back" value="CatPgOpIterating|Iterating Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}