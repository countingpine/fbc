{{fbdoc item="title" value="CHAIN"}}----
Transfère temporairement le contrôle à un programme externe

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Chain** ( [[KeyPgByref byref]] //program// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Chain**( //program// )
##
{{fbdoc item="param"}}
	##//program//##
		Le nom de fichier (y compris le chemin du fichier) du programme (exécutable) à qui on donne le contrôle.

{{fbdoc item="ret"}}
	    Retourne le code de sortie du programme externe si exécuté avec succès, autrement un nombre négatif (-1) .

{{fbdoc item="desc"}}
	Transfère le contrôle à un programme externe. Lorsque le programme se termine, l'exécution reprend immédiatement après l'appel à ##**Chain**##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/system/chain.bas"}}%%(freebasic)
#ifdef FB__LINUX
#define CHAIN2    "chain2"
#else
#define CHAIN2    "chain2.exe"
#endif

	print "chain1 begins"

	chain CHAIN2

	print "chain1 ends"

	sleep
%%
{{fbdoc item="target"}}
	- Linux nécessite que la casse du nom du ##//program//## corresponde au nom réel du fichier. Windows et DOS ne sont pas sensible à la casse. Le programme chaîné doit être sensible à la casse pour les paramètres de sa ligne de commande.
	- Les séparateurs de chemin sous Linux sont des barres obliques / . Windows utilise des barres obliques arrière  \ mais il permet les barres obliques .  DOS utilise des barres obliques arrière  \ .
	- Le code de sortie est limité à 8 bits sous DOS.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgExec Exec]]##
	- ##[[KeyPgRun Run]]##
	- ##[[KeyPgCommand Command]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}