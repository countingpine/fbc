{{fbdoc item="title" value="CHAIN"}}----
Transf&egrave;re temporairement le contr&ocirc;le &agrave; un programme externe

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Chain** ( [[KeyPgByref byref]] //program// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Chain**( //program// )
##
{{fbdoc item="param"}}
	##//program//##
		Le nom de fichier (y compris le chemin du fichier) du programme (ex&eacute;cutable) &agrave; qui on donne le contr&ocirc;le.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	    Retourne le code de sortie du programme externe si ex&eacute;cut&eacute; avec succ&egrave;s, autrement un nombre n&eacute;gatif (-1) .

{{fbdoc item="desc"}}
	Transf&egrave;re le contr&ocirc;le &agrave; un programme externe. Lorsque le programme se termine, l'ex&eacute;cution reprend imm&eacute;diatement apr&egrave;s l'appel &agrave; ##**Chain**##.

{{fbdoc item="ex"}}
	%%(freebasic)
#ifdef FB__LINUX
	#define CHAIN2    "chain2"
#else
	#define CHAIN2    "chain2.exe"
#endif

Print "chain1 begins"
Chain CHAIN2
	Print "chain1 ends"
Sleep
%%

{{fbdoc item="target"}}
	- Linux n&eacute;cessite que la casse du nom du ##//program//## corresponde au nom r&eacute;el du fichier. Windows et DOS ne sont pas sensible &agrave; la casse. Le programme cha&icirc;n&eacute; doit &ecirc;tre sensible &agrave; la casse pour les param&egrave;tres de sa ligne de commande.
	- Les s&eacute;parateurs de chemin sous Linux sont des barres obliques / . Windows utilise des barres obliques arri&egrave;re  \ mais il permet les barres obliques .  DOS utilise des barres obliques arri&egrave;re  \ .
	- Le code de sortie est limit&eacute; &agrave; 8 bits sous DOS.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgExec Exec]]##
	- ##[[KeyPgRun Run]]##
	- ##[[KeyPgCommand Command]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}