{{fbdoc item="title" value="Operator XOR= (Exclusive Disjunction and Assign)"}}----
Effectue une manipulation de bits XOR (disjonction exclusive) et attribue le r&eacute;sultat &agrave; une variable

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Xor=** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] //T1//, [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] //T2// )
##
{{fbdoc item="usage"}}##
	//lhs// **Xor=** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		La variable &agrave; assigner.
	##//T1//##
		Tout type num&eacute;rique.
	##//rhs//##
		La valeur qui sert &agrave; effectuer un XOR (disjonction exclusive) avec ##//lhs//##.
	##//T2//##
		Tout type num&eacute;rique.

{{fbdoc item="desc"}}
	Cet op&eacute;rateur effectue un XOR et attribue le r&eacute;sultat &agrave; une variable. Il est fonctionnellement &eacute;quivalent &agrave;:
##
		//lhs// = //lhs// [[KeyPgOpXor xor]] //rhs//
##
	##**Xor=**## compare chaque bit de ses op&eacute;randes, ##//lhs//## et ##//rhs//##, et si les deux bits sont les m&ecirc;mes (les deux &agrave; 1 ou les deux &agrave; both 0), alors le bit correspondant dans le premier op&eacute;rande, ##//lhs//##, est mis &agrave; 1, sinon il est mis &agrave; 0.

	Cet op&eacute;rateur peut &ecirc;tre surcharg&eacute; pour des types d&eacute;finis par l'utilisateur.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/xor-assign.bas"}}%%(freebasic)
dim as ubyte a = &b00110011
dim as ubyte b = &b01010101
a xor= b
'' Result    a = &b01100110
print bin(a)
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, cet op&eacute;rateur ne peut pas &ecirc;tre surcharg&eacute;.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgOpXor Xor]]##

{{fbdoc item="back" value="CatPgOpAssignment|Assignment Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}