{{fbdoc item="title" value="EXTERN"}}----
Déclare une variable, un tableau ou un objet ayant une liaison externe

{{fbdoc item="syntax"}}##
	**Extern** [ [[KeyPgImport Import]] ] //symbolname//[ (//subscripts//) ] [ [[KeyPgAlias Alias]] "//aliasname//" ] [[KeyPgAs as]] //[[DataType DataType]]// [, ...]
##
{{fbdoc item="param"}}
	##//symbolname//##
		Le nom de la variable, du tableau ou de l'objet.
	##//aliasname//##
		Un autre nom externe pour la variable, le tableau ou l'objet.

{{fbdoc item="desc"}}
	Déclare ##//symbolname//## comme un nom externe, ce qui signifie qu'il est global pour des modules externes. ##**Extern**## déclare seulement des variables, tableaux et objets, et ne les définira pas (différent de ##[[KeyPgCommon Common]]## ou ##[[KeyPgDim Dim]]##). Cela a aussi pour effet de faire de ##//symbolname//## un nom //shared//, ce qui signifie visible dans les procédures (voir ##[[KeyPgShared Shared]]##).

	Si ##[[KeyPgAlias Alias]]## est utilisé, ##//aliasname//## sera utilisé comme le nom externe plutôt que ##//symbolname//## et sa casse sera préservée.
	
	Si ##[[KeyPgImport Import]]## est utilisé, le nom sera ajouté à la liste des bibliothèques dynamiques d'importation de sorte que son adresse ne peut être fixée lors de l'exécution.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/module/extern1.bas"}}%%(freebasic)
'' extern1.bas

Extern Foo Alias "foo" As Integer

Sub SetFoo
	foo = 1234
End Sub
%%

{{fbdoc item="filename" value="examples/manual/module/extern2.bas"}}%%(freebasic)
'' extern2.bas

Declare Sub SetFoo

Extern Foo Alias "foo" As Integer

Dim foo As Integer = 0

SetFoo

Print Foo
%%
Output:
%%
 1234
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgExternBlock Extern...End Extern]]##
	- ##[[KeyPgCommon Common]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgShared Shared]]##

{{fbdoc item="back" value="CatPgModularizing|Modularizing"}}