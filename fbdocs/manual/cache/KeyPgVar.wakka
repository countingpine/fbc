{{fbdoc item="title" value="VAR"}}----
Déclare une variable dont le type est implicite dans l'expression d'initialisation

{{fbdoc item="syntax"}}##
	**Var** [[[KeyPgShared shared]]] //symbolname// = //expression//[, //symbolname// = //expression//]
##
{{fbdoc item="desc"}}
	##**Var**## déclare une variable dont le type est implicite dans l'expression d'initialisation. Il est illégal de spécifier un type explicite dans une déclaration ##**Var**##. L'expression d'initialisation n'a pas à être une constante, elle peut être n'importe quelle variable de n'importe quel type.

	Note: ##[[KeyPgWstring WString]]## n'est pas supporté avec ##**Var**##, dû au fait qu'il n'y a pas de ##[[KeyPgWstring WString]]## de type  ##//var-len//##. Ce n'est pas susceptible de changer, en raison de la complexité de la gestion Unicode.

	Puisque le type de la variable est déduit de ce que vous lui attribuez, il est utile de savoir comment les littéraux de travaillent. Tout nombre littéral sans point décimal sera par défaut un ##[[KeyPgInteger Integer = entier]]##. Un nombre littéral //avec// un point décimal sera par défaut un ##[[KeyPgDouble Double]]##.

	Toutes les expressions ##[[KeyPgZstring ZString]]##, y compris les littéraux de chaîne et les pointeurs ##[[KeyPgPtr Ptr]]## ##[[KeyPgZstring ZString]]## déréférencés, auront le type de variable ##[[KeyPgString String]]## variable type.

	Des suffixes explicites peuvent être utilisés sur des variables littérales, pour changer/clarifier leur type. Voir [[ProPgLiterals Les littéraux]] et [[TblVarTypes Les types de variables]] pour plus d'information sur les suffixes utilisables sur les littéraux.

	Note: Les suffixes doivent figurer sur l'initialisation, et non sur la variable. Essayer d'utiliser ##**Var**## avec une variable qui a un suffixe produira une erreur de compilation.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/variable/var.bas"}}%%(freebasic)
var a  = cast(byte, 0)
var b  = cast(short, 0)
var c  = cast(integer, 0)
var d  = cast(longint, 0)
var au = cast(ubyte, 0)   
var bu = cast(ushort, 0)  
var cu = cast(uinteger, 0)
var du = cast(ulongint, 0)
var e  = cast(single, 0.0)
var f  = cast(double, 0.0)
var g  = @c      '' integer ptr
var h  = @a      '' byte ptr
var s2 = "hello" '' var-len string

var ii = 6728   '' implicit integer
var id = 6728.0 '' implicit double

print "Byte: ";len(a)
print "Short: ";len(b)
print "Integer: ";len(c)
print "Longint: ";len(d)
print "UByte: ";len(au)
print "UShort: ";len(bu)
print "UInteger: ";len(cu)
print "ULongint: ";len(du)
print "Single: ";len(e)
print "Double: ";len(f)
print "Integer Pointer: ";len(g)
print "Byte Pointer: ";len(h)
print "Variable String: ";len(s2)
print
print "Integer: ";len(ii)
print "Double: ";len(id)

sleep
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC"" 0.17

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**__Var**##.

{{fbdoc item="see"}}
	- ##[[KeyPgCommon Common]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgErase Erase]]##
	- ##[[KeyPgExtern Extern]]##
	- ##[[KeyPgLbound LBound]]##
	- ##[[KeyPgRedim ReDim]]##
	- ##[[KeyPgPreserve Preserve]]##
	- ##[[KeyPgShared Shared]]##
	- ##[[KeyPgStatic Static]]##
	- ##[[KeyPgUbound UBound]]##

{{fbdoc item="back" value="CatPgVariables|Variable Declarations"}}
