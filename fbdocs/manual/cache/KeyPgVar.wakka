{{fbdoc item="title" value="VAR"}}----
D&eacute;clare une variable dont le type est implicite dans l'expression d'initialisation

{{fbdoc item="syntax"}}##
	**Var** [[[KeyPgShared shared]]] //symbolname// = //expression//[, //symbolname// = //expression//]
##
{{fbdoc item="desc"}}
	##**Var**## d&eacute;clare une variable dont le type est implicite dans l'expression d'initialisation. Il est ill&eacute;gal de sp&eacute;cifier un type explicite dans une d&eacute;claration ##**Var**##. L'expression d'initialisation n'a pas &agrave; &ecirc;tre une constante, elle peut &ecirc;tre n'importe quelle variable de n'importe quel type.

	Note: ##[[KeyPgWstring WString]]## n'est pas support&eacute; avec ##**Var**##, d&ucirc; au fait qu'il n'y a pas de ##[[KeyPgWstring WString]]## de type  ##//var-len//##. Ce n'est pas susceptible de changer, en raison de la complexit&eacute; de la gestion Unicode.

	Puisque le type de la variable est d&eacute;duit de ce que vous lui attribuez, il est utile de savoir comment les litt&eacute;raux de travaillent. Tout nombre litt&eacute;ral sans point d&eacute;cimal sera par d&eacute;faut un ##[[KeyPgInteger Integer = entier]]##. Un nombre litt&eacute;ral //avec// un point d&eacute;cimal sera par d&eacute;faut un ##[[KeyPgDouble Double]]##.

	Toutes les expressions ##[[KeyPgZstring ZString]]##, y compris les litt&eacute;raux de cha&icirc;ne et les pointeurs ##[[KeyPgPtr Ptr]]## ##[[KeyPgZstring ZString]]## d&eacute;r&eacute;f&eacute;renc&eacute;s, auront le type de variable ##[[KeyPgString String]]## variable type.

	Des suffixes explicites peuvent &ecirc;tre utilis&eacute;s sur des variables litt&eacute;rales, pour changer/clarifier leur type. Voir [[ProPgLiterals Les litt&eacute;raux]] et [[TblVarTypes Les types de variables]] pour plus d'information sur les suffixes utilisables sur les litt&eacute;raux.

Note: Les suffixes doivent figurer sur l'initialisation, et non sur la variable. Essayer d'utiliser ##**Var**## avec une variable qui a un suffixe produira une erreur de compilation.
{{fbdoc item="ex"}}
var a  = cast(byte, 0)
Var a  = Cast(Byte, 0)
Var b  = Cast(Short, 0)
Var c  = Cast(Integer, 0)
Var d  = Cast(LongInt, 0)
Var au = Cast(UByte, 0)   
Var bu = Cast(UShort, 0)  
Var cu = Cast(UInteger, 0)
Var du = Cast(ULongInt, 0)
Var e  = Cast(Single, 0.0)
Var f  = Cast(Double, 0.0)
Var g  = @c      '' integer ptr
Var h  = @a      '' byte ptr

Var s2 = "hello" '' var-len string
Var ii = 6728   '' implicit integer

Var id = 6728.0 '' implicit double
Print "Byte: ";Len(a)
Print "Short: ";Len(b)
Print "Integer: ";Len(c)
Print "Longint: ";Len(d)
Print "UByte: ";Len(au)
Print "UShort: ";Len(bu)
Print "UInteger: ";Len(cu)
Print "ULongint: ";Len(du)
Print "Single: ";Len(e)
Print "Double: ";Len(f)
Print "Integer Pointer: ";Len(g)
Print "Byte Pointer: ";Len(h)
Print "Variable String: ";Len(s2)
Print
Print "Integer: ";Len(ii)

Print "Double: ";Len(id)
Sleep

%%
	{{fbdoc item="diff"}}

- Nouveau pour FreeBASIC 0.17
	{{fbdoc item="lang"}}

- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Var**##.
	{{fbdoc item="see"}}
	- ##[[KeyPgCommon Common]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgErase Erase]]##
	- ##[[KeyPgExtern Extern]]##
	- ##[[KeyPgLbound LBound]]##
	- ##[[KeyPgRedim ReDim]]##
	- ##[[KeyPgPreserve Preserve]]##
	- ##[[KeyPgShared Shared]]##
	- ##[[KeyPgStatic Static]]##

- ##[[KeyPgUbound UBound]]##