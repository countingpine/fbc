{{fbdoc item="title" value="Interfacing with C"}}----
REMARQUE! Faites quelques v&eacute;rifications orthographique, de v&eacute;rification du texte, du code et des noms de fichiers.

<div class="fb_header">Avant-propos
Ceci est un mini tutoriel de base sur la fa&ccedil;on d'&eacute;crire une simple biblioth&egrave;que en C et ensuite de l'utiliser dans FreeBASIC. Il devrait &ecirc;tre possible de suivre le tutoriel sans pour autant avoir de grandes connaissances du C ou du FreeBASIC. Apr&egrave;s avoir essay&eacute; ce tutoriel, vous devriez &ecirc;tre en mesure de compiler une biblioth&egrave;que C statique ou dynamique. Traduire les fichiers d'ent&ecirc;te n&eacute;cessaires pour les fichiers d'ent&ecirc;te FreeBASIC et de comprendre comment utiliser les biblioth&egrave;ques dans un projet FreeBASIC.


<div class="fb_header">Qu'est-ce qu'une biblioth&egrave;que

<div class="fb_header">Condition pr&eacute;alable
Ce tutoriel a &eacute;t&eacute; &eacute;crit et test&eacute; avec FreeBASIC 0.16b et la derni&egrave;re version actuelle de MinGW32 (&agrave; l'&eacute;poque). Comme une note Dev-cpp utilise MinGW32 que c'est la cha&icirc;ne d'outils du compilateur. Vous pouvez &eacute;galement obtenir Code::Blocks avec un paquet MinGW32.


<div class="fb_header">Description formelle de la t&acirc;che &agrave; accomplir
Pour d&eacute;montrer l'utilisation d'une biblioth&egrave;que C en FreeBASIC nous avons besoin pour cr&eacute;er la biblioth&egrave;que la plus simple possible avec peu de fonctions. Un fichier de test en C pour d&eacute;montrer que notre biblioth&egrave;que fonctionne comme pr&eacute;vu. Ensuite, nous devons traduire le fichier en-t&ecirc;te biblioth&egrave;que vers un fichier d'en-t&ecirc;te FreeBASIC (*.bi) et enfin de cr&eacute;er un projet de test dans FreeBASIC utilisant la biblioth&egrave;que..

<div class="fb_header">Cr&eacute;ation des fichiers
Donc, notre liste de fichiers devrait ressembler &agrave; ceci:
myClib.c: Fichier C mise en &oelig;uvre de notre biblioth&egrave;que.
myClib.h: Fichier d'ent&ecirc;te C d&eacute;crivant l'interface des biblioth&egrave;ques.
myClibCTest.c: Mise en oeuvre notre fichier C programme d'essai de C.
myClib.bi: Fichier d'en-t&ecirc;te FreeBASIC. Une traduction de myClib.h.
myClibFBTest.bas:  Test FreeBASIC
make.cmd: Un script shell pour compiler la biblioth&egrave;que et les fichiers de test.


**Le fichier C pour fabriquer la biblioth&egrave;que statique. myClib.c **
%%(C)
/* A function adding two integers and returning the result */
#include "myClib.h"
int SampleAddInt(int i1, int i2)
{
	return i1 + i2;
}

/* A function doing nothing ;) */
void SampleFunction1()
{
	/* insert code here */

}

/* A function always returning zero */
int SampleFunction2()
{
	/* insert code here */

	return 10;
}
%%**Le fichier en-t&ecirc;te myClib.h**
%%(C)
int  SampleAddInt(int i1, int i2);
void SampleFunction1();
int  SampleFunction2();
%%
**Projet de test C pour v&eacute;rifier que la lib statique est compatible C. myClibCTest.c:**

%%(C)
#include <stdio.h>
#include <stdlib.h>
#include "myClib.h"
int main(int argc, char *argv[])
{
printf("SampleAddInt(5, 5):=%d\n", SampleAddInt(5, 5));
  system("PAUSE");
  return 0;
  }
%%
**Traduire le fichier d'en-t&ecirc;te C dans un fichier en-t&ecirc;te FreeBASIC**


myClib.bi: Pour interfacer la biblioth&egrave;que statique et l'inclure automatiquement (# inclib "myClib") j'ai ce fichier.
myClib.bi: To interface the static library and automatically include it (#inclib "myClib" ) i have this file.
''include file for libmyClib.a
#ifndef __myClib_bi__
#define __myClib_bi__
#inclib "myClib"
Declare Function SampleAddInt cdecl Alias "SampleAddInt" (ByVal i1 As Integer, ByVal i2 As Integer) As Integer

Declare Sub SampleFunction1 cdecl Alias "SampleFunction1" ()
Declare Function SampleFunction2 cdecl Alias "SampleFunction2" () As Integer
#endif
%%
**Et enfin le fichier en utilisant la biblioth&egrave;que FreeBASIC**


myClibFBTest.bas:
myClibFBTest.bas:
''Testing functions in myClib.bi
#include "myClib.bi"
''
Print "SampleAddInt(10, 10):=", SampleAddInt(10, 10)
'' Just a dumy call
SampleFunction1()
''
Print "SampleFunction2():=", SampleFunction2()
%%
**Le fichier make: make.cmd**


J'ai cr&eacute;&eacute; un fichier "batch" pour compiler tous les fichiers. Y compris un &eacute;chantillon en C en utilisant la biblioth&egrave;que statique. Notez les lignes de configuration au d&eacute;but qui doit &ecirc;tre modifi&eacute; pour correspondre &agrave; votre configuration.
%%(cmd)
@REM TODO: Set PATH's for this session.
SET PATH=C:\mingw32\bin;c:\mingw32\mingw32\bin
SET MINGW_INCLUDE="C:/MinGW32/include"
SET MINGW_LIB="C:/MinGW32/lib"
@REM

@REM fbc testing SET fbc="C:\portableapps\FreeBASIC\fbc.exe"
SET fbc="C:\FreeBasic16b\fbc.exe"
@echo *** Verify pat's to compilers
@pause
@echo off
@REM

@REM Remove old files
DEL /F *.o  *.a myClibFBTest.exe
@REM

@REM Create static lib from c source
gcc.exe -c myClib.c -o myClib.o -I%MINGW_INCLUDE%
@REM

@REM ar: creating libstatictest.a
ar r libmyClib.a myClib.o
@REM

@REM No nead for ranlib anymore? ar is supposed to take care of it
ranlib libmyClib.a
@REM


@REM Create a test with a C file
gcc.exe -c myClibCTest.c -o myClibCTest.o -I%MINGW_INCLUDE%

gcc.exe myClibCTest.o -o "myClibCTest.exe" -L%MINGW_LIB% libmyClib.a
echo =====================================

echo RUnning C sample
echo =====================================
myClibCTest.exe
echo =====================================

echo Creating FreeBASIC sample
echo =====================================
REM I thought this explicit reference is unnecessary as I use #inclib
SET fbcop= -I myClib
SET fbcfl="myClibFBTest.bas"
%fbc% %fbcop% %fbcfl%
echo =====================================
echo RUnning FreeBASIC sample
echo =====================================
myClibFBTest.exe
@pause
%%
<div class="fb_header">Messages d'erreur rencontr&eacute;es et leurs solutions


**undefined reference to**
Essai de liaison &agrave; la biblioth&egrave;que statique C sans utiliser l'alias cdecl "functionname" dans le fichier en-t&ecirc;te FreeBASIC  r&eacute;sultat d'erreurs de ce genre.
%%(cmd)
C:\code>"C:\FreeBasic16b\fbc.exe"     "myClibFBTest.bas"
myClibFBTest.o:fake:(.text+0x3d): undefined reference to `SAMPLEADDINT@8'
myClibFBTest.o:fake:(.text+0x4a): undefined reference to `SAMPLEFUNCTION1@0'
myClibFBTest.o:fake:(.text+0x67): undefined reference to `SAMPLEFUNCTION2@0'
Press any key to continue . . .
%%
Pour r&eacute;soudre cela, vous devrez localiser les d&eacute;clarations de fonctions dans un fichier *.bi qui ressemble &agrave; ceci:

To resolve this you will have to locate function declarations in a *.bi file that look like this:
Declare Function SampleAddInt(ByVal i1 As Integer, ByVal i2 As Integer) As Integer
%%
Et le remplacer par ceci:
And change it to something like this:
Declare Function SampleAddInt cdecl Alias "SampleAddInt" (ByVal i1 As Integer, ByVal i2 As Integer) As Integer
%%
<div class="fb_header">Annexe A: liens


La base de ce tutoriel vient de plusieurs "threads" dans le forum.
Quand il &eacute;volue et peut &ecirc;tre autonome les liens vers les "threads" doivent &ecirc;tre supprim&eacute;s.
Quelques liens int&eacute;ressants contenant des informations sur l'interfa&ccedil;age des biblioth&egrave;ques cr&eacute;&eacute;es en FreeBASIC et utilis&eacute;es par d'autres langages ou vice-versa.
[[http://www.freebasic.net/forum/viewtopic.php?t=6515">Comment compiler un projet C comme une lib statique pour l'inclusion.]]

[[http://www.freebasic.net/forum/viewtopic.php?t=6515 How do I compile a C project as a static lib for inclusion..]]
