{{fbdoc item="title" value="Frequently Asked FreeBASIC Graphics Library Questions"}}----

{{anchor name="item0"}}

**Questions sur la bibliothèque graphique de FreeBASIC:**
	==- {{anchor name="item1|Comment puis-je lier/utiliser Gfxlib?"}}==
	==- {{anchor name="item2|Qu'en est-il du fichier d'en-tête ##fbgfx.bi##?"}}==
	==- {{anchor name="item3|Comment sont managés les tableaux GET/PUT?"}}==
	==- {{anchor name="item4|Pourquoi BSAVE/BLOAD se plantent-ils?"}}==
	==- {{anchor name="item5|Comment puis-je obtenir les  composantes rouge, vert, bleu ou alpha d'une couleur?"}}==
	==- {{anchor name="item6|Comment puis-je faire pour que le bouton "x" dans l'en-tête la fenêtre ferme mon application?"}}==
	==- {{anchor name="item7|Impossible d'exécuter des programmes en utilisant SCREEN 13 ou 14 en mode plein écran!"}}==

{{fbdoc item="back" value="DocToc|Table of Contents"}}

----

@@**Questions sur la bibliothèque graphique de FreeBASIC**@@

{{anchor name="item1"}}==Comment puis-je lier/utiliser Gfxlib?==
	Gfxlib est "intégrée" dans le langage, il n'est pas nécessaire d'inclure n'importe quel fichier .bi ou de lier n'importe quelle bibliothèque de façon explicite. FreeBASIC détecte que vous voulez utiliser Gfxlib quand il trouve l'instruction [[KeyPgScreengraphics SCREEN]] or [[KeyPgScreenres SCREENRES]]. Donc, pour utiliser Gfxlib, il suffit de commencer par un mode d'écran graphique et d'utiliser les commandes graphiques.

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item2"}}==Qu'en est-il du fichier d'en-tête ##fbgfx.bi##?==
	Le fichier en-tête ##fbgfx.bi## est disponible pour être inclus dans un programme et contient des définitions de constantes et de type qui peuvent être utiles pour le programmeur lors de l'utilisation Gfxlib. Cependant vous n'avez pas à inclure explicitement ce fichier pour utiliser Gfxlib; l'en-tête est uniquement disponible comme une aide. Le contenu inclut constantes indicateurs de mode de [[KeyPgScreengraphics SCREEN]] / [[KeyPgScreenres SCREENRES]], les définitions des [[GfxScancodes scancodes clavier]] et plus encore.

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item3"}}==Comment sont managés les tableaux GET/PUT?==
	Dans FreeBASIC, les images peuvent être utilisées comme des tableaux (comme dans QB) ou en tant que pointeurs. De toute façon, les données d'image sont contenues dans un seul bloc continu. La partie principale se compose d'une en-tête suivie par les données image. L'en-tête peut être de deux types (ancien style et nouveau style) et détermine le format des données d'image suivants, pour les détails voir [[GfxInternalFormats Formats graphiques internes]].

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item4"}}==Pourquoi BSAVE/BLOAD se plantent-ils?==
	BSAVE/BLOAD ne peuvent être utilisés que pour charger et enregistrer des écrans graphiques sous FreeBASIC. Ils ne peuvent pas être utilisés pour enregistrer un écran en mode texte. Pour charger et sauvegarder un tableau voyez cet [[FaqPgbloadworkaround extrait de fichier utilisant GET/PUT]] .

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item5"}}==Comment puis-je obtenir les  composantes rouge, vert, bleu ou alpha d'une couleur?==

	Chaque octet dans un attribut de couleur correspond aux  composantes rouge, vert, bleu et alpha.  L'exemple suivant montre comment extraire les valeurs des composantes à partir d'un attribut de couleur 16, 24 ou 32 bits.

{{fbdoc item="filename" value="examples/manual/faq/gfxlib2/RGB-component.bas"}}%%(freebasic)
#define rgb_a(x) ((x) Shr 24)
#define rgb_r(x) ((x) Shr 16 And 255)
#define rgb_g(x) ((x) Shr 8 And 255)
#define rgb_b(x) ((x) And 255)

dim as uinteger c
dim as integer x, y
dim as ubyte red, green, blue, alpha

'' Assume a 16, 24, or 32 bit screen mode has been set
c = Point(x, y)
red = rgb_r(c)
green = rgb_g(c)
blue = rgb_b(c)
Alpha = rgb_a(c)
%%

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item6"}}==Comment puis-je faire pour que le bouton "x" dans l'en-tête la fenêtre ferme mon application?==
	En mode graphique fenêtré, vous pouvez tester pour l'appui sur le bouton "X" (fermer) de la fenêtre avec ##[[KeyPgInkey Inkey]]##. Ceci s'applique à Win32 et Linux, sous DOS il n'y a pas de bouton "X".
	
	Voici un petit exemple:

{{fbdoc item="filename" value="examples/manual/faq/gfxlib2/check-for-close.bas"}}%%(freebasic)
'' "X" close button example , Win32 and Linux only
Dim as String key
Screen 13
Do
  Print "Click the 'x' to close this app."
  Sleep
  key = Inkey
Loop Until key = Chr(27) Or key = Chr(255, 107) 'escape or x-button
%%

	NOTE: Si vous utilisez une ancienne version de FreeBASIC, vous pouvez avoir à utiliser Chr(255)+"X"

{{anchor name="item0|Retour en haut de la page"}}

{{anchor name="item7"}}==Impossible d'exécuter des programmes en utilisant SCREEN 13 ou 14 en mode plein écran!==
	Il s'agit d'une limitation matérielle/pilote (Win32 et Linux seulement?). Les cartes vidéo, de nos jours, ne gèrent pas ces modes à faible résolution graphique. Si le mode plein écran est nécessaire vous devez réécrire en utilisant au moins SCREEN 17 ou 18, ou une résolution de 640x480 ou supérieure, pour être sÃ»r que du matériel moderne puisse la gérer.

{{anchor name="item0|Retour en haut de la page"}}

{{fbdoc item="see"}}
	- [[CompilerFAQ FAQ du compilateur]].
	- [[FaqPgrtlib FAQ de la bibliothèque d'exécution de FB]].
	- [[FaqPggfxlib2 FAQ de la bibliothèque graphique de FreeBASIC]]

{{fbdoc item="back" value="DocToc|Table of Contents"}}
   
