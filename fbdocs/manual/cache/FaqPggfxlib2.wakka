{{fbdoc item="title" value="Frequently Asked FreeBASIC Graphics Library Questions"}}----

<a name="item0"></a>

**Questions sur la biblioth&egrave;que graphique de FreeBASIC:**
	**- [[#item1">Comment puis-je lier/utiliser Gfxlib?]]**
	**- [[#item2">Qu'en est-il du fichier d'en-t&ecirc;te ##fbgfx.bi##?]]**
	**- [[#item3">Comment sont manag&eacute;s les tableaux GET/PUT?]]**
	**- [[#item4">Pourquoi BSAVE/BLOAD se plantent-ils?]]**
	**- [[#item5">Comment puis-je obtenir les  composantes rouge, vert, bleu ou alpha d'une couleur?]]**
	**- [[#item6">Comment puis-je faire pour que le bouton "x" dans l'en-t&ecirc;te la fen&ecirc;tre ferme mon application?]]**
	**- [[#item7">Impossible d'ex&eacute;cuter des programmes en utilisant SCREEN 13 ou 14 en mode plein &eacute;cran!]]**
	<div style="text-align: center;">**Questions sur la biblioth&egrave;que graphique de FreeBASIC**

<a name="item1"></a>**Comment puis-je lier/utiliser Gfxlib?**

Gfxlib est "int&eacute;gr&eacute;e" dans le langage, il n'est pas n&eacute;cessaire d'inclure n'importe quel fichier .bi ou de lier n'importe quelle biblioth&egrave;que de fa&ccedil;on explicite. FreeBASIC d&eacute;tecte que vous voulez utiliser Gfxlib quand il trouve l'instruction [[KeyPgScreengraphics Screen]] or [[KeyPgScreenres ScreenRes]]. Donc, pour utiliser Gfxlib, il suffit de commencer par un mode d'&eacute;cran graphique et d'utiliser les commandes graphiques.

[[#item0">Retour en haut de la page]]

<a name="item2"></a>**Qu'en est-il du fichier d'en-t&ecirc;te ##fbgfx.bi##?**
	Le fichier en-t&ecirc;te ##fbgfx.bi## est disponible pour &ecirc;tre inclus dans un programme et contient des d&eacute;finitions de constantes et de type qui peuvent &ecirc;tre utiles pour le programmeur lors de l'utilisation Gfxlib. Cependant vous n'avez pas &agrave; inclure explicitement ce fichier pour utiliser Gfxlib; l'en-t&ecirc;te est uniquement disponible comme une aide. Le contenu inclut constantes indicateurs de mode de [[KeyPgScreengraphics Screen]] / [[KeyPgScreenres ScreenRes]], les d&eacute;finitions des [[GfxScancodes scancodes clavier]] et plus encore.

[[#item0">Retour en haut de la page]]

<a name="item3"></a>**Comment sont manag&eacute;s les tableaux GET/PUT?**
	Dans FreeBasic, les images peuvent &ecirc;tre utilis&eacute;es comme des tableaux (comme dans QB) ou en tant que pointeurs. De toute fa&ccedil;on, les donn&eacute;es d'image sont contenues dans un seul bloc continu. La partie principale se compose d'une en-t&ecirc;te suivie par les donn&eacute;es image. L'en-t&ecirc;te peut &ecirc;tre de deux types (ancien style et nouveau style) et d&eacute;termine le format des donn&eacute;es d'image suivants, pour les d&eacute;tails voir [[GfxInternalFormats Formats graphiques internes]].

[[#item0">Retour en haut de la page]]

<a name="item4"></a>**Pourquoi BSAVE/BLOAD se plantent-ils?**
	BSAVE/BLOAD ne peuvent &ecirc;tre utilis&eacute;s que pour charger et enregistrer des &eacute;crans graphiques sous FreeBASIC. Ils ne peuvent pas &ecirc;tre utilis&eacute;s pour enregistrer un &eacute;cran en mode texte. Pour charger et sauvegarder un tableau voyez cet [[FaqPgbloadworkaround extrait de fichier utilisant GET/PUT]] .

[[#item0">Retour en haut de la page]]

<a name="item5"></a>**Comment puis-je obtenir les  composantes rouge, vert, bleu ou alpha d'une couleur?**
	Chaque octet dans un attribut de couleur correspond aux  composantes rouge, vert, bleu et alpha.  L'exemple suivant montre comment extraire les valeurs des composantes &agrave; partir d'un attribut de couleur 16, 24 ou 32 bits.

{{anchor name="item0|Back to top"}}

#define rgb_a(x) ((x) Shr 24)

	#define rgb_r(x) ((x) Shr 16 And 255)

#define rgb_g(x) ((x) Shr 8 And 255)
#define rgb_b(x) ((x) And 255)
Dim As UInteger c
Dim As Integer x, y
Dim As UByte red, green, blue, Alpha

'' Assume a 16, 24, or 32 bit screen mode has been set
c = Point(x, y)
red = rgb_r(c)

green = rgb_g(c)
blue = rgb_b(c)
Alpha = rgb_a(c)
%%
[[#item0">Retour en haut de la page]]
<a name="item6"></a>**Comment puis-je faire pour que le bouton "x" dans l'en-t&ecirc;te la fen&ecirc;tre ferme mon application?**
En mode graphique fen&ecirc;tr&eacute;, vous pouvez tester pour l'appui sur le bouton "X" (fermer) de la fen&ecirc;tre avec ##[[KeyPgInkey Inkey]]##. Ceci s'applique &agrave; Win32 et Linux, sous DOS il n'y a pas de bouton "X".

Voici un petit exemple:

{{anchor name="item6"}}==How can I make the 'x' button in the window header close my application?==
	'' "X" close button example , Win32 and Linux only
	
	Dim As String key

Screen 13
Do
Print "Click the 'x' to close this app."
Sleep
key = Inkey
  Loop Until key = Chr(27) Or key = Chr(255, 107) 'escape or x-button
  %%
  NOTE: Si vous utilisez une ancienne version de FreeBASIC, vous pouvez avoir &agrave; utiliser Chr(255)+"X"
[[#item0">Retour en haut de la page]]
<a name="item7"></a>**Impossible d'ex&eacute;cuter des programmes en utilisant SCREEN 13 ou 14 en mode plein &eacute;cran!**

	Il s'agit d'une limitation mat&eacute;rielle/pilote (Win32 et Linux seulement?). Les cartes vid&eacute;o, de nos jours, ne g&egrave;rent pas ces modes &agrave; faible r&eacute;solution graphique. Si le mode plein &eacute;cran est n&eacute;cessaire vous devez r&eacute;&eacute;crire en utilisant au moins SCREEN 17 ou 18, ou une r&eacute;solution de 640x480 ou sup&eacute;rieure, pour &ecirc;tre s&ucirc;r que du mat&eacute;riel moderne puisse la g&eacute;rer.

[[#item0">Retour en haut de la page]]

{{fbdoc item="see"}}
	- [[CompilerFAQ FAQ du compilateur]].

- [[FaqPgrtlib FAQ de la biblioth&egrave;que d'ex&eacute;cution de FB]].

- [[FaqPggfxlib2 FAQ de la biblioth&egrave;que graphique de FreeBASIC]]
	[[KeyPgImagecreate Imagecreate]] needs to create an image buffer that fits the current screen's pixel format, and it cannot do so if there is no screen mode setup yet, so it returns NULL, very likely resulting in a NULL pointer access later on that crashes the program.
	
	This is known to happen when Imagecreate is called //before// the graphics library was initialized with a call to [[KeyPgScreengraphics Screen]] or [[KeyPgScreenres Screenres]], as may happen when Imagecreate is called in a global constructor that is invoked before the Screen or Screenres call in the main part of the program. In such a case it is necessary to move the screen initialization into a constructor too, and have it execute before the image-creating constructors.

{{anchor name="item0|Back to top"}}

{{fbdoc item="see"}}
	- [[CompilerFAQ Compiler FAQ]]
	- [[FaqPgrtlib FB Runtime Library FAQ]]
	- [[FaqPggfxlib2 Frequently Asked FreeBASIC Graphics Library Questions]]

{{fbdoc item="back" value="DocToc|Table of Contents"}}