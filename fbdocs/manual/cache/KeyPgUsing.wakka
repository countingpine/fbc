{{fbdoc item="title" value="USING (Namespaces)"}}----
Déplace l'espace de noms dans la portée courante

{{fbdoc item="syntax"}}##
	**Using** //identifier// [, //identifier// [, ...] ]
##
{{fbdoc item="param"}}
	##//identifier//##: Le nom de l' ##[[KeyPgNamespace Namespace = Espace de noms]]## que vous voulez utiliser.

{{fbdoc item="desc"}}
	La commande ##**Using**## rend tous les symboles - d'un espace de noms donné - accessibles sans le préfixe nom de l'espace de noms. Contrairement à ""C++"", mais comme C#, le mot-clef ##[[KeyPgNamespace Namespace]]## n'est pas nécessaire après ##**Using**##, car les symboles individuels ne peuvent pas être hérités d'un espace de noms. Hériter un espace de noms entier permet de sauver le typage, mais cependant un certain sens du code peut être perdu et des conflits avec d'autres symboles pourraient être créés.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/module/using.bas"}}%%(freebasic)
Namespace Sample
	Type T
		x As Integer
	End Type
End Namespace

'' Just using the name T would not find the symbol,
'' because it is inside a namespace.
Dim SomeVariable As Sample.T

'' Now the whole namespace has been inherited into
'' the global namespace.
Using Sample

'' This statement is valid now, since T exists
'' without the "Sample." prefix.
Dim OtherVariable As T 
%%

{{fbdoc item="diff"}}
	- QB avait le mot-clé ##**Using**##, mais dans d'autres buts. Les espaces de noms n'existaient pas dans QB.

{{fbdoc item="see"}}
	- ##[[KeyPgPrintusing Print Using]]##
	- ##[[KeyPgPalette Palette Using]]##
	- ##[[KeyPgNamespace Namespace]]##

{{fbdoc item="back" value="CatPgModularizing|Modularizing"}}