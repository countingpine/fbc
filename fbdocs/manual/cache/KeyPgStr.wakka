{{fbdoc item="title" value="STR"}}----
Retourne une chaîne représentation d'un nombre ou d'une chaîne de caractères Unicode

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** [[KeyPgOverload overload]] ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgByte byte]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgUbyte ubyte]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgShort short]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgUshort ushort]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgUinteger uinteger]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgUlongint ulongint]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgSingle single]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //n// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Str** ( [[KeyPgByval byval]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]] [[KeyPgPtr ptr]] ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Str**[$]( //number// )
		//ou//
	//result// = **Str**( //string// )
##
{{fbdoc item="param"}}
	##//number//##
		Expression numérique à transformer en chaîne.
	##//string//##
		Chaîne expression à convertir en chaîne.

{{fbdoc item="desc"}}
	##**Str**## convertit des variables numériques en leur représentation sous forme de chaîne. Utiliser ce moyen est l'équivalent ##[[KeyPgString String]]## à ##[[KeyPgWstr Wstr]]## appliqué à des variables numériques, et l'opposé de la fonction ##[[KeyPgVal Val]]##, qui convertit une chaîne en nombre.

	##**Str**## convertit aussi les chaînes de caractères Unicode en chaînes de caractères ASCII. Utilisé de cette façon c'est l'opposé de ##[[KeyPgWstr Wstr]]##. Si une chaîne de caractères ASCIIIf est donnée, elle sera retournée non-modifiée.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/str.bas"}}%%(freebasic)
dim a as integer
dim b as string
a = 8421
b = str(a)
print a, b
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, ##**Str**## complètera à gauche un nombre positif avec des espaces.
	- Le suffixe de type chaîne ##"$"## est obligatoire dans le dialecte //[[CompilerOptlang -lang qb]]//.
	- Le suffixe de type chaîne ##"$"## est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="target"}}
	- DOS version/cible de ""FreeBASIC"" ne supporte pas la version larges caractères de ##**Str**##.

{{fbdoc item="diff"}}
	- QB ne supporte pas la version larges caractères de ##**Str**##.

{{fbdoc item="see"}}
	- ##[[KeyPgVal Val]]##
	- ##[[KeyPgChr Chr]]##
	- ##[[KeyPgAsc Asc]]##

{{fbdoc item="back" value="CatPgCasting|Converting Data Types"}}{{fbdoc item="back" value="CatPgString|String Functions"}}

