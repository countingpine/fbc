{{fbdoc item="title" value="Frequently Asked Questions"}}----
<a name="item0"></a>

**Questions sur FreeBASIC:**

	**- [[#item1">Qu'est-ce que FreeBASIC?]]**
	**- [[#item2">Qui est responsable de FreeBASIC?]]**
	**- [[#item3">Pourquoi devrais-je utiliser FreeBasic plut&ocirc;t que QBasic?]]**
	**- [[#item4">Pourquoi devrais-je utiliser FreeBasic plut&ocirc;t que certains autres nouveaux BASIC?]]**
	**- [[#item5">FreeBASIC est-il rapide?]]**
	**- [[#item6">FreeBASIC est-il compatible avec QuickBasic?]]**
	**- [[#item7">FreeBASIC est-il compatible avec Windows? DOS? Linux?]]**
	**- [[#item8">La programmation orient&eacute;e objet est elle support&eacute;e par FreeBASIC?]]**
	**- [[#item9">Quels sont les plans futurs avec FB / ToDo list?]]**
	**- [[#item10">Puis-je programmer des applications GUI avec FB]]**
	**- [[#item11">FB est-il appropri&eacute; pour des applications grosses/complexes?]]**
	**- [[#item12">Puis-je utiliser un encodage (jeu de caract&egrave;res) non-latin dans mes applications FreeBASIC?]]**
	**- [[#item13">Puis-je utiliser les ports Serial/COM et Hardware/CPU dans FB?]]**

**Questions de d&eacute;butants sur FreeBASIC**
	
	**- [[#item20">O&ugrave; puis-je trouver plus d'informations sur FreeBASIC?]]**
	**- [[#item21">Pourquoi le GUI de QB ne s'ouvre-t-il pas quand je lance FreeBASIC?]]**
	**- [[#item22">Puis-je avoir une version hors ligne de la documentation?]]**
	**- [[#item23">Quelle est l'id&eacute;e derri&egrave;re les dialectes FB?]]**
	**- [[#item24">Pourquoi mon programme se plante-t-il quand je d&eacute;finis un tableau plus grand que xx?]]**

**FreeBasic avanc&eacute;**

	**- [[#item31">Comment puis-je lier &agrave; des biblioth&egrave;ques C?]]**
	**- [[#item32">Puis-je utiliser un d&eacute;bogueur?]]**
	**- [[#item33">Quel est le but des fichiers AR.EXE, AS.EXE et LD.EXE fournis avec FB?]]**
	**- [[#item34">Y a-t-il une limitation l'ampleur de mes fichiers source?]]**
	**- [[#item35">Puis-je &eacute;crire un OS avec FreeBasic?]]**
	**- [[#item36">Je d&eacute;veloppe un syst&egrave;me d'exploitation, FreeBASIC peut-il &ecirc;tre port&eacute; sur mon OS?]]**
	**- [[#item37">FreeBasic permet-il le retour de r&eacute;f&eacute;rences &agrave; partir de fonctions, comme en C++?]]**

[[#item999">See also]]

<div style="text-align: center;">**Questions sur FreeBASIC**

<a name="item1"></a>**Qu'est-ce que FreeBASIC?**

FreeBASIC est un compilateur BASIC 32-bit libre et gratuit, pour Windows (32-bit), DOS 32 bits en mode prot&eacute;g&eacute; (ex&eacute;cutables COFF, comme DJGPP), et Linux (x86). Il a commenc&eacute; comme une tentative de cr&eacute;er un code compatible, une alternative libre et gratuite &agrave; Microsoft QuickBASIC, mais cela s'est rapidement transform&eacute; en un puissant outil de d&eacute;veloppement, incluant d&eacute;j&agrave; le support de biblioth&egrave;ques, comme Allegro, SDL, OpenGL et beaucoup d'autres dans son installation par d&eacute;faut.

En plus d'avoir une syntaxe compatible la plupart du temps avec QuickBASIC, FreeBasic introduit plusieurs nouvelles fonctionnalit&eacute;s &agrave; ce langage vieillissant, y compris des pointeurs vers les variables et fonctions et les types de donn&eacute;es non sign&eacute;es.
	Le compilateur FreeBasic est "auto-h&eacute;bergement" - &eacute;crit en FreeBasic, les biblioth&egrave;ques sont cependant &eacute;crites en C.

	[[#item0">Retour en haut de la page]]

	<a name="item2"></a>**Qui est responsable de FreeBASIC?**

Les premi&egrave;res versions de FreeBASIC ont &eacute;t&eacute; d&eacute;velopp&eacute;es exclusivement par V1ctor. Les versions ult&eacute;rieures ont vu les contributions de nombreuses personnes, dont Lillo, qui a d&eacute;velopp&eacute; le portage Linux et la biblioth&egrave;que graphique, et DRV, qui a d&eacute;velopp&eacute; le portage DOS.br \>

Voir la page [[CompilerCredits FreeBASIC Credits]].
	[[#item0">Retour en haut de la page]]

	<a name="item3"></a>**Pourquoi devrais-je utiliser FreeBasic plut&ocirc;t que QBasic?**

FreeBASIC a des avantages innombrables par rapport &agrave; QBasic, QuickBASIC, PDS et Visual Basic pour DOS. 

- Il supporte les processeurs 32-bit, alors que QBasic est con&ccedil;u pour les CPU 16-bit.
	- Il supporte les OS modernes. Il est dot&eacute; de portages pour Windows, Linux et DOS 32 bits.
		- Il supporte les API modernes telles que SDL, DirectX, Win32 et OpenGL.
		- Il est distribu&eacute; sous licence GPL, ce qui signifie qu'il est gratuit et l&eacute;gal de l'utiliser librement, contrairement &agrave; la plupart des copies de QuickBASIC et autres BASIC.
		-La biblioth&egrave;que est distribu&eacute;e sous licence LGPL avec une exception suppl&eacute;mentaire, ce qui signifie que vous pouvez faire ce que vous voulez avec vos programmes compil&eacute;s, y compris les vendre (note: probl&egrave;me possible avec biblioth&egrave;que graphique).
		- FreeBASIC est, la plupart du temps, beaucoup plus rapide que QuickBASIC et autres BASIC.
		- FreeBASIC supporte de nombreuses fonctionnalit&eacute;s, telles que les pointeurs et l'assemblage en ligne (in line), qui ne sont pas disponibles dans QuickBASIC et autres BASIC.
		- QuickBASIC ne supporte que le DOS. Le support de Windows pour l'&eacute;mulation DOS (et donc QuickBASIC) est de plus en plus fine avec chaque nouvelle version. Vista ne prend pas en charge les graphiques ou le texte en plein &eacute;cran pour les applications DOS.
		[[#item0">Retour en haut de la page]]
		<a name="item4"></a>**Pourquoi devrais-je utiliser FreeBasic plut&ocirc;t que certains autres nouveaux BASIC?**

FreeBASIC a de nombreux traits qui le rendent pr&eacute;f&eacute;rable &agrave; la plupart des autres impl&eacute;mentations du langage BASIC:

- FreeBASIC adh&egrave;re &eacute;troitement &agrave; la syntaxe BASIC standard, ce qui rend plus facile &agrave; utiliser.
	- FreeBASIC est compil&eacute; en programmes r&eacute;els (ex&eacute;cutables), et non du "bytecode".
		- FreeBASIC a une importante communaut&eacute; d&eacute;di&eacute;e qui a activement particip&eacute; &agrave; l'&eacute;laboration de FreeBASIC.
		- FreeBASIC utilise des m&eacute;thodes standard d'acc&egrave;s aux biblioth&egrave;ques communes du langage C. SDL, par exemple, est standard C SDL, et non pas un nouvel ensemble de commandes intrins&egrave;que
		- FreeBASIC a des portages vers Windows, Linux et DOS 32-bit. Il conserve une syntaxe coh&eacute;rente entre les trois portages.
		[[#item0">Retour en haut de la page]]
		<a name="item5"></a>**FreeBASIC est-il rapide?**

La plupart des tests effectu&eacute;s par la communaut&eacute; ont montr&eacute; que FreeBASIC est significativement plus rapide que QuickBasic, plus rapide que la plupart des autres BASIC commerciaux et souvent proche de CCG en termes de vitesse.

[[http://shootout.alioth.debian.org/gp4/benchmark.php?test=all&lang=all">Computer Languages Benchmark Game]], une &eacute;quipe de test ind&eacute;pendante, donne FreeBASIC pour Linux une vitesse 1,8 fois plus lent que GNU g++. Les tests portent sur les calculs, la m&eacute;moire et la vitesse du disque dans les programmes de la console, aucune capacit&eacute; graphique n'a &eacute;t&eacute; test&eacute;e. Ce n'est pas un mauvais r&eacute;sultat compte tenu que FreeBASIC n'est pas encore un compilateur optimisant.
	Un domaine o&ugrave; il y a une carence notable est la vitesse dans les modes console 32-bit. Bien que FreeBASIC soit constamment sur un pied d'&eacute;galit&eacute; avec les autres-applications 32 bits en mode console, les op&eacute;rations sur 32 bits en mode console sont nettement plus lentes que les op&eacute;rations en console 16-bit, comme dans QuickBasic. Dans la version DOS, certaines op&eacute;rations d'Entr&eacute;e/Sortie peuvent devenir plus lentes apr&egrave;s le portage depuis un BASIC 16-bit vers FB - l'optimisation du code r&eacute;cup&egrave;re de la vitesse.
	[[#item0">Retour en haut de la page]]
	<a name="item6"></a>**FreeBASIC est-il compatible avec QuickBasic?**

La biblioth&egrave;que graphique de FreeBASIC &eacute;mule les modes graphiques les plus utilis&eacute;s de QB (modes 7,12,13) et impl&eacute;mente toutes les primitives de dessin propos&eacute;es dans QB. 

La plupart des probl&egrave;mes de compatibilit&eacute; r&eacute;sultent de l'utilisation des techniques bas niveau sp&eacute;cifiques au mat&eacute;riel-8086-DOS dans les aciens programmes de QB. Programmation du port VGA, interruptions DOS, commutation des segments de m&eacute;moire, &eacute;criture dans la m&eacute;moire d'&eacute;cran ou jouer de la musique en utilisant le haut-parleur PC ne sont pas directement pris en charge, m&ecirc;me si cela peut &ecirc;tre support&eacute;/&eacute;mul&eacute; par des biblioth&egrave;ques externes.
	D'autres probl&egrave;mes dans le portage d'anciens programmes QB, comme les noms de variables en conflit avec des mots nouveaux de FB, variables avec le nom d'un mot-cl&eacute; QB plus un suffixe de type, la taille par d&eacute;faut des entiers &eacute;tant de 32 bits dans FB, sont trait&eacute;es en ex&eacute;cutant FreeBASIC avec sur la ligne de commande l'option ##-lang qb## .
	Voir [[LangQB Diff&eacute;rences entre FreeBASIC et QuickBasic]].
	[[#item0">Retour en haut de la page]]

	<a name="item7"></a>**FreeBASIC est-il compatible avec Windows? DOS? Linux? **

FreeBASIC est totalement compatible avec Windows, MS-DOS, Free-DOS et Linux. Lors de la planification pour cr&eacute;er un programme pour les trois plates-formes, cependant, gardez &agrave; l'esprit la disponibilit&eacute; d'API -- le code utilisant OpenGL fonctionne sous Windows et Linux, par exemple, mais pas sous DOS, car OpenGL n'est pas disponible pour MS-DOS.

[[#item0">Retour en haut de la page]]
	<a name="item8"></a>**La programmation orient&eacute;e objet est elle support&eacute;e par FreeBASIC?**

Certaines fonctionnalit&eacute;s POO sont &agrave; la disposition des utilisateurs de FB depuis la version 0.17. La fonctionnalit&eacute; POO compl&egrave;te est attendue pour le futur. A l'heure actuelle (version 0.22) il existe des m&eacute;thodes &agrave; l'int&eacute;rieur des types d&eacute;finis par l'utilisateur et la surcharge d'op&eacute;rateur, mais l'h&eacute;ritage et le polymorphisme ne sont pas encore mis en oeuvre. Pour plus d' information voir: [[http://www.freebasic.net/wiki/wikka.php?wakka=TutBeginnersGuideToTypesAsObjects">Un guide pour d&eacute;butants sur les Types comme Objets]].

[[#item0">Retour en haut de la page]]
	<a name="item9"></a>**Quels sont les plans futurs avec FB / ToDo list?**

Vous pouvez d&eacute;couvrir ce qui est pr&eacute;vu pour les versions futures en consultant directement [[http://fbc.svn.sourceforge.net/svnroot/fbc/trunk/FreeBASIC/src/compiler/TODO.txt?view=markup">le fichier TODO]] pour le compilateur, qui est actuellement dans le SVN.

[[#item0">Retour en haut de la page]]

	<a name="item10"></a>**Puis-je programmer des applications GUI avec FB**

Oui, vous le pouvez. Les fichier en-t&ecirc;tes qui vous permettent d'appeler l'API graphique de Windows ou Linux sont fournies avec les versions respectives, mais les programmes fabriqu&eacute;s de cette fa&ccedil;on ne sont pas portables.

Il y a quelques protocoles API et applications RAD exp&eacute;rimentales qui cr&eacute;ent du code non portable GUI pour Windows.
	Pour une programmation portable une biblioth&egrave;que GUI telle que GTK ou "wx-Widgets" doit &ecirc;tre utilis&eacute;e. Les fichier en-t&ecirc;tes GTK sont fournis avec FB, mais la fonctionnalit&eacute; POO actuellement disponible en FB emp&ecirc;che l'utilisation de wx-Widgets. Les programmes cr&eacute;&eacute;s avec ces biblioth&egrave;ques peuvent obliger l'utilisateur &agrave; installer les biblioth&egrave;ques encapsulatrices (wrapper) dans leurs syst&egrave;mes.
	Pour les jeux et les petites applications graphiques il y a quelques biblioth&egrave;ques sp&eacute;cifiques-FB qui dessinent et g&eacute;rent des commandes simples comme des boutons et des bo&icirc;tes &agrave; l'int&eacute;rieur de l'&eacute;cran graphique, les programmes r&eacute;alis&eacute;s avec ces biblioth&egrave;ques sont enti&egrave;rement portables
	[[#item0">Retour en haut de la page]]
	<a name="item11"></a>**FB est-il appropri&eacute; pour des applications grosses/complexes?**

Le compilateur FB est "auto-h&eacute;bergement", il est lui-m&ecirc;me programm&eacute; dans FB. Cela signifie plus de 120 000 lignes de code pour le moment, une application assez complexe.

[[#item0">Retour en haut de la page]]
	<a name="item12"></a>**Puis-je utiliser un encodage (jeu de caract&egrave;res) non-latin dans mes applications FreeBASIC?**

FreeBASIC supporte Unicode qui est fourni par la biblioth&egrave;que d'ex&eacute;cution C pour la plate-forme donn&eacute;e. Cela signifie que FB DOS ne sera pas g&ecirc;n&eacute; par Unicode. Sur d'autres plateformes, vous pouvez utiliser [[KeyPgWstring Wstrings]] pour supporter tout jeu de caract&egrave;res dont vous avez besoin. Le mot-cl&eacute; OPEN a un param&egrave;tre additionnel [[KeyPgEncoding Encoding]] permettant diff&eacute;rents encodages. Comme FreeBasic est lui-m&ecirc;me cod&eacute; dans FB, cela signifie que vous pouvez coder votre source dans un &eacute;diteur Unicode donc les commentaires et les cha&icirc;nes litt&eacute;rales peuvent &ecirc;tre dans n'importe quel jeu de caract&egrave;res (mots-cl&eacute;s, &eacute;tiquettes, noms de variables et de proc&eacute;dures doivent &ecirc;tre conserv&eacute;s &agrave; l'int&eacute;rieur du jeu ASCII..).

Pour la sortie &agrave; l'&eacute;cran le support est diff&eacute;rent de la console aux graphiques. En mode console l'affichage de "wstring" en caract&egrave;res non latins est support&eacute; si la police de caract&egrave;res de la console le permet. Le mode graphique utilise une police avec un jeu de caract&egrave;res interne CP437 (l'ancien jeu de caract&egrave;res du DOS) donc les affichages non latins une police personnalis&eacute;e et l'utilisation du mot-clef [[KeyPgDrawString Draw String]] keyword. Des outils tiers existent pour introduire une police externe et la convertir au format DRAW STRING.

	[[#item0">Retour en haut de la page]]
	<a name="item13"></a>**Puis-je utiliser les ports Serial/COM et Hardware/CPU dans FB?**

Oui, FB a des fonctions int&eacute;gr&eacute;es pour acc&eacute;der aux ports serial/COM port et hardware/CPU sans avoir besoin de biblioth&egrave;ques externes. Voir [[#item999">FAQ des sp&eacute;cificit&eacute;s des OS]] pour des d&eacute;tails pour votre OS ainsi que [[KeyPgOpenCom Open Com]], [[KeyPgInp Inp]] et [[KeyPgOut Out]] .

[[#item0">Retour en haut de la page]]
	 <div style="text-align: center;">**Questions de d&eacute;butants sur FreeBASIC**

<a name="item20"></a>**O&ugrave; puis-je trouver plus d'informations sur FreeBASIC?**
Le [[http://www.freebasic.net/wiki/">Wiki FreeBASIC]] est le manuel le-plus-&agrave;-jour pour l'utilisation de FreeBASIC.

Des forums actifs sur FreeBASIC, outre le [[http://www.freebasic.net/forum">forum officiel]], peuvent &ecirc;tre trouv&eacute;s &agrave; [[http://www.qbasicnews.com/">qbasicnews]], [[http://www.petesqbsite.com/forum/">Pete's QB Site]] , [[http://games.freebasic.net/forum/index.php">the FB Games directory]]  ou  [[http://www.freebasic-portal.de">freebasic-portal.de (en allemand)]]. 

Des magazines actifs qui ont r&eacute;guli&egrave;rement des articles li&eacute;s FreeBasic [[http://www.petesqbsite.com/sections/express/express.shtml">QB Express]] and [[http://www.qbxl.net/">QBXL Magazine]]. Ces magazines sont toujours &agrave; la recherche de nouveaux articles, donc si vous pensez que vous avez une bonne id&eacute;e pour un article sur FreeBasic, soumettez-le!
	[[#item0">Retour en haut de la page]]

	<a name="item21"></a>**Pourquoi le GUI de QB ne s'ouvre-t-il pas quand je lance FreeBASIC?**

	QB avait un Environnement de D&eacute;veloppement Int&eacute;gr&eacute; ou en anglais: Integrated Development Environment (IDE).  FreeBASIC n'en a pas.

FreeBASIC est seulement un compilateur, non pas un "clone" complet de QuickBASIC. Il s'agit d'une application en mode console. Il acceptera un fichier BAS sur la ligne de commande et renverra un fichier EXE.

Vous pouvez cr&eacute;er le fichier BAS avec l'&eacute;diteur simple, plein texte de votre OS (Notepad, EDIT, nano,...), puis lancez le compilateur. 
	Si vous ne pouvez vivre sans la coloration syntaxique, le soulignement d'erreur, la gestion de fichiers multiples, un d&eacute;bogueur int&eacute;gr&eacute;, l'aide contextuelle ou d'autres fonctionnalit&eacute;s, vous avez besoin d'un IDE. Voyez [[#item999">FAQ des sp&eacute;cificit&eacute;s des OS]] pour les IDE et &eacute;diteurs disponibles.
	[[#item0">Retour en haut de la page]]
	<a name="item22"></a>**Puis-je avoir une version hors ligne de la documentation?**
	La documentation officielle pour FB est ce Wiki, habituellement la version courante contient les derni&egrave;res am&eacute;liorations du SVN.
 
De temps en temps ce Wiki est converti en plusieurs formats lisibles hors-ligne. [[http://sourceforge.net/project/showfiles.php?group_id=122342&package_id=159165">CHM]] pour les utilisateurs de Windows, et [[http://www.execulink.com/~coder/freebasic/docs d'autres formats]].

[[#item0">Retour en haut de la page]]
	<a name="item23"></a>**Quelle est l'id&eacute;e derri&egrave;re les dialectes FB?**
	L'id&eacute;e est de permettre des am&eacute;liorations dans le langage tout en conservant une compatibilit&eacute; ascendante avec le code QB. Les bizarreries de la syntaxe QB ne sont pas compatibles avec le style plus rigide requis par la POO. Les nouveaux mots-cl&eacute;s FB sont souvent en conflit avec les noms de variables dans les anciens programmes de QB. QB permettait d'utiliser librement des points dans les noms de variables et n'&eacute;taient pas des proc&eacute;dures d'UDT.

Les trois dialectes (fb-lang, lang-qb,-lang fblite) permettent de combiner le meilleur de deux mondes. 

<li>##lang fb## fournit le cadre n&eacute;cessaire pour la programmation orient&eacute;e objet. Les autres dialectes ne donnent pas acc&egrave;s &agrave; la POO.
	<li>##lang qb## permettra aux d&eacute;veloppeurs de conserver la compatibilit&eacute; ascendante avec les programmes QB. Les nouveaux mots-cl&eacute;s dans FB peuvent &ecirc;tre utilis&eacute;s par les pr&eacute;c&eacute;dant avec deux caract&egrave;res de soulignement. Par exemple, ##Getmouse## peut &ecirc;tre appel&eacute; en utilisant ##_####_Getmouse##
	<li>##lang fblite## offre une compatibilit&eacute; linguistique FreeBASIC, avec un style de codage plus compatible QBASIC.
	Voir [[CompilerDialects Les dialectes du compilateurs]] pour plus de d&eacute;tails.
	[[#item0">Retour en haut de la page]]
	<a name="item24"></a>**Pourquoi mon programme se plante-t-il quand je d&eacute;finis un tableau plus grand que xx?**

	Cela arrive g&eacute;n&eacute;ralement parce que vous avez fait un tableau //[[ProPgStorageClasses automatic]]// de longueur fixe trop large et il y a eu un d&eacute;bordement de la pile du programme. Vous avez plusieurs options:

- si c'est possible, de r&eacute;duisez la taille du tableau //automatic//

- cr&eacute;ez un tableau de longueur variable, en

	- d&eacute;finissant le tableau avec  une liste vide d'indices (en utilisant ##[[KeyPgDim Dim]]##), ou

	- d&eacute;finissant le tableau avec des indices variables au lieu de litt&eacute;raux num&eacute;riques, [[KeyPgConst Constants]] ou [[KeyPgEnum Enums]] (en utilisant ##[[KeyPgDim Dim]]##), ou en
	- d&eacute;finissant le tableau avec  ##[[KeyPgRedim ReDim]]##
		- r&eacute;servez plus de m&eacute;moire pour la pile du programme en utilisant l'option ##-t## de la  [[CompilerCmdLine commande en ligne]] lors de la compilation. la valeur par d&eacute;faut est ##-t 1024## (kilo-octets). Note: c'est une mauvaise id&eacute;e d'utiliser, ici, de tr&egrave;s grandes valeurs.
		- cr&eacute;ez un tableau //static// en d&eacute;finissant le tableau avec ##[[KeyPgStatic Static]]## plut&ocirc;t que ##[[KeyPgDim Dim]]## (visible seulement localement, mais globalement pr&eacute;serv&eacute;)
		- d&eacute;finissez le tableau avec un acc&egrave;s ##[[KeyPgShared Shared]]## en utilisant ##[[KeyPgDim Dim]]## (ce qui rend le tableau parfaitement global)
	- utilisez des [[ProPgPointers Pointeurs]] et [[CatPgMemory des fonctions m&eacute;moire]] telles que ##[[KeyPgAllocate Allocate]]## et ##[[KeyPgDeallocate Deallocate]]## pour g&eacute;rer vous-m&ecirc;me la m&eacute;moire - c'est le moyen privil&eacute;gi&eacute; pour le stockage des grands tampons, mais pas pour les d&eacute;butants.
	Les tableaux //Static// et //variable-length// n'utilisent pas la pile du programme pour leurs &eacute;l&eacute;ments de donn&eacute;es, nous n'avons donc pas le probl&egrave;me associ&eacute; des tableaux //automatic// &agrave; longueur fixe. Voir les [[ProPgStorageClasses Classes de stockage]] pour plus d'informations. Notez que le stockage d'&eacute;normes tampons d&eacute;finis comme //static// ou l'augmentation de la taille de la pile au-dessus de la valeur par d&eacute;faut n'est pas une tr&egrave;s bonne id&eacute;e, car elle augmente la quantit&eacute; fixe de m&eacute;moire n&eacute;cessaire pour charger et d&eacute;marrer votre programme, m&ecirc;me si la plupart de celle-ci n'est pas utilis&eacute;e plus tard, et cela peut entra&icirc;ner une d&eacute;gradation des performances, ou m&ecirc;me de provoquer un refus de chargement votre programme.
	[[#item0">Retour en haut de la page]]
	<div style="text-align: center;">**FreeBasic avanc&eacute;**

	<a name="item31"></a>**Comment puis-je lier &agrave; des biblioth&egrave;ques C?**

Les biblioth&egrave;ques C sont mises en place de la m&ecirc;me mani&egrave;re dans FreeBASIC qu'elles le sont en C. Chaque biblioth&egrave;que fournie avec FreeBASIC a un fichier de base "include" nomm&eacute; "//nom-de-la-biblioth&egrave;que.bi//" qui utilise la m&eacute;tacommande [[KeyPgInclib #inclib]] pour inclure la biblioth&egrave;que et l'instruction [[KeyPgDeclare Declare]] to d&eacute;clarer les fonctions au sein de la biblioth&egrave;que. FreeBASIC inclut des centaines de fichiers BI, voir la [[ExtLibTOC liste compl&egrave;te des en-t&ecirc;tes de biblioth&egrave;que]].

[[#item0">Retour en haut de la page]]

<a name="item32"></a>**Puis-je utiliser un d&eacute;bogueur?**

FreeBASIC peut utiliser de pr&eacute;f&eacute;rence un d&eacute;bogueur compatible avec GNU GDB. 
	- Win32: Insight est un "wrapper" (conteneur) convivial pour GDB, voir la [[FaqPgWin32 FAQ Win32]]. 

- DOS: Soyez averti que DOS a &eacute;galement produit nomm&eacute; "Insight", mais c'est un d&eacute;bogueur en mode r&eacute;el qui n'est pas utilisable avec FreeBASIC, utilisez GDB ou au moins certains d&eacute;bogueur DPMI32.

- Linux: utilisez GDB.
	Voir la [[#item999">FAQ des sp&eacute;cificit&eacute;s des OS]] pour des d&eacute;tails sur votre OS.
		[[#item0">Retour en haut de la page]]
		<a name="item33"></a>**Quel est le but des fichiers AR.EXE, AS.EXE et LD.EXE fournis avec FB?**
		AS.EXE c'est GAS, l'"assembleur GNU". Il est toujours impliqu&eacute; dans la compilation. LD.EXE est le "linkeur GNU", impliqu&eacute; dans la cr&eacute;ation d'ex&eacute;cutables. AR.EXE est l'"archiveur GNU", en fait, un fabricant de biblioth&egrave;ques, crcr&eacute;ant des biblioth&egrave;ques ##.A##. 

	[[#item0">Retour en haut de la page]]

<a name="item34"></a>**Y a-t-il une limitation l'ampleur de mes fichiers source?**

Oui, comme FreeBASIC est un compilateur pleinement 32 bits, il peut fonctionner sur des fichiers source, th&eacute;oriquement, jusqu'&agrave; 4GB ou 4294967296 octets, toutefois, votre capacit&eacute; de m&eacute;moire vive (RAM) devra &ecirc;tre nettement sup&eacute;rieure &agrave; la taille de votre source, sinon la compilation ne se terminera pas ou, au moins, sera tr&egrave;s lente. 
	[[#item0">Retour en haut de la page]]

<a name="item35"></a>**Puis-je &eacute;crire un OS avec FreeBasic?**

OUI et NON. Si vous insistez pour &eacute;crire un OS et impliquer FB, la r&eacute;ponse est OUI. Si la question est de savoir si c'est une bonne id&eacute;e que vous, encore plus si vous &ecirc;tes un d&eacute;butant, devrait commencer &agrave; coder maintenant un OS en utilisant FB, la r&eacute;ponse est NON. Plusieurs &eacute;cueils sont applicables:
	- Le d&eacute;veloppement d'un OS est difficile, voir [[http://www.osdev.org/wiki/Getting_Started">Getting Started]].

- FB ne vous aidera pas &agrave; contourner la n&eacute;cessit&eacute; de s'occuper avec l'assembage, aussi C est peut &ecirc;tre presque impossible &agrave; &eacute;viter.

- Vous ne serez pas en mesure d'utiliser la plupart des fonctions &eacute;prouv&eacute;es de FB, comme les graphiques, fichiers E/S, flux, gestion de la m&eacute;moire, m&ecirc;me les E/S de la console ... contr&ocirc;le de d&eacute;bit, les math&eacute;matiques et la logique. Si vous avez besoin de ces biblioth&egrave;que de fonctions, vous aurez &agrave; les ** r&eacute;impl&eacute;menter **.

	FreeBASIC s'appuie sur GCC et des informations disponibles sur l'&eacute;laboration d'un OS en C s'appliquent aussi &agrave; FreeBASIC. FB ne vous aidera ni plus ni moins que GCC.
		[[#item0">Retour en haut de la page]]
		<a name="item36"></a>**Je d&eacute;veloppe un syst&egrave;me d'exploitation, FreeBASIC peut-il &ecirc;tre port&eacute; sur mon OS?**
		Cela d&eacute;pend. Si votre OS atteint au moins les fonctionnalit&eacute;s du DOS avec DPMI32 (console I/O (recherche, plusieurs fichiers ouverts, ...), E/S fichier, gestion de la m&eacute;moire) **et** dispose d'un portage de GCC, alors la r&eacute;ponse est OUI. Si vous avez au moins un autre compilateur C compatible **avec** des biblioth&egrave;ques, ce pourrait &ecirc;tre possible. Vous ne pouvez pas raisonnablement porter FB par exemple vers un OS permettant de charger ou enregistrer un fichier dans un seul bloc, ou un OS 16-bit.   
	[[#item0">Retour en haut de la page]]

<a name="item37"></a>**FreeBasic permet-il le retour de r&eacute;f&eacute;rences &agrave; partir de fonctions, comme en C++?**

Depuis la version 0.20.0b, non. Il y a quelques mots-cl&eacute;s, tels que ##[[KeyPgPeek Peek]]## et les [[CatPgOpIndexing op&eacute;rateurs d'indexation]], par exemple, qui se comportent comme s'ils &eacute;taient des proc&eacute;dures ##[[KeyPgFunction Function]]##qui retourne une r&eacute;f&eacute;rence, comme en C++. Autrement dit, ils &eacute;valuent &agrave; quelque chose qui peut &ecirc;tre utilis&eacute; &agrave; la place d'un objet, un peu comme des [[ProPgPassingArguments r&eacute;f&eacute;rences de param&egrave;tres]].

Par exemple, si  ##//mystring//## est de type ##[[KeyPgString String]]## de longueur non nulle, alors ##//mystring[0]//## correspond &agrave; une r&eacute;f&eacute;rence au premier caract&egrave;re (un ##[[KeyPgUbyte UByte]]##), qui peut &ecirc;tre assign&eacute;e et modifi&eacute;e, transmise &agrave; des proc&eacute;dures, etc.

##[[KeyPgPeek Peek]]## et les [[CatPgOpIndexing op&eacute;rateurs d'indexation]] sont document&eacute;s comme des proc&eacute;dures ##[[KeyPgFunction Function]]## ou des op&eacute;rateurs qui retourne une valeur, puisque FreeBASIC ne supporte pas encore le retour de r&eacute;f&eacute;rences. Lorsque le retour de r&eacute;f&eacute;rences sera pris en charge, la documentation sera chang&eacute;e pour refl&eacute;ter cela.

[[#item0">Retour en haut de la page]]

<a name="item999"></a>{{fbdoc item="see"}}

- [[FaqPgWin32 FAQ relative &agrave; Win32]]

- [[FaqDOS FAQ relative au DOS]]

- [[FaqPgLinux FAQ relative &agrave; Linux]]

et
	- [[FaqPgrtlib FAQ de la biblioth&egrave;que d'ex&eacute;cution de FB]]
	- [[FaqPggfxlib2 Questions Fr&eacute;quemment Pos&eacute;es sur la biblioth&egrave;que graphique de FreeBASIC]]
	- [[FaqPgLinux Linux related FAQ]]
and
	- [[FaqPgrtlib FB Runtime Library FAQ]]
	- [[FaqPggfxlib2 Frequently Asked FreeBASIC Graphics Library Questions]]

{{fbdoc item="back" value="DocToc|Table of Contents"}}
