{{fbdoc item="title" value="Op&eacute;rateur * (Multiplier)"}}----
Multiplie deux expressions numériques

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgByte byte]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgByte byte]] ) [[KeyPgAs as]] [[KeyPgByte byte]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUbyte ubyte]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUbyte ubyte]] ) [[KeyPgAs as]] [[KeyPgUbyte ubyte]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgShort short]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgShort short]] ) [[KeyPgAs as]] [[KeyPgShort short]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUshort ushort]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUshort ushort]] ) [[KeyPgAs as]] [[KeyPgUshort ushort]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUinteger uinteger]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUinteger uinteger]] ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgLongint longint]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgLongint longint]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUlongint ulongint]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUlongint ulongint]] ) [[KeyPgAs as]] [[KeyPgUlongint ulongint]]

	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgSingle single]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgSingle single]] ) [[KeyPgAs as]] [[KeyPgSingle single]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] ***** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgDouble double]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	//result// = //lhs// **##*##** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		Multiplicande, argument côté gauche.
	##//rhs//##
		Multiplicande, argument côté droit.

{{fbdoc item="ret"}}
	Renvoie le produit des deux multiplicandes.

{{fbdoc item="desc"}}
	**##Operator *## (Multiplier)** renvoie le produit des deux multiplicandes.

	Dans tous les cas, aucun opérande n'est modifié.

	Cet opérateur peut être surchargé pour accepter les types définis par l'utilisateur.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/multiply.bas"}}%%(freebasic)
DIM n AS DOUBLE
n = 4 * 5
PRINT n
SLEEP
%%
Affichage:
%%
20
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, cet opérateur ne peut pas être surchargé.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- [[CatPgMath Fonctions mathématiques]]

{{fbdoc item="back" value="CatPgOpArithmetic|Arithmetic Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}

