{{fbdoc item="title" value="SCREENPTR"}}----
Retourne un pointeur sur la page de travail courante du tampon image

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Screenptr** ( ) [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]]
##
{{fbdoc item="usage"}}##
	//result// = **Screenptr**
##
{{fbdoc item="section" value="Valeur retourn&eacute;e
	Un pointeur m&eacute;moire sur la page de travail courante du tampon image, ou NULL (0) si aucun mode graphique n'est valide.

{{fbdoc item="desc"}}
	##**ScreenPtr**## procure un m&eacute;thode pour lire/&eacute;crire directement sur la page de travail courante du tampon image. ##[[KeyPgScreenlock ScreenLock]]## doit &ecirc;tre utilis&eacute; avant toute tentative de lecture ou d'&eacute;criture. Le pointeur est valide jusqu'&agrave; l'appel suivant &agrave; ##[[KeyPgScreengraphics Screen]]## ou ##[[KeyPgScreenres ScreenRes]]##, qui l'invalidera.
	
	##**ScreenPtr**## peut &ecirc;tre utilis&eacute; pour v&eacute;rifier si un appel &agrave; ##[[KeyPgScreengraphics Screen]]## ou ##[[KeyPgScreenres ScreenRes]]## a r&eacute;ussi, r&eacute;ussite indiqu&eacute;e par une valeur retoun&eacute;e non-NULL (<> 0).

	Afin d'acc&eacute;der &agrave; un pixel dans le tampon &eacute;cran, vous devez conna&icirc;tre la largeur, la hauteur, le nombre de bits par pixel et d'octets par ligne (pitch) de l'&eacute;cran.  Ces informations sont donn&eacute;es par ##[[KeyPgScreeninfo ScreenInfo]]##.
	Chaque ligne du tampon image a ##//pitch//## octets de longueur.  Le tampon image est constitu&eacute; de ##//height//## lignes, stock&eacute;es dans l'ordre de leur position &agrave; l'&eacute;cran, en allant du haut vers le bas et de la gauche vers la droite.

	En raison de la conception de la biblioth&egrave;que de graphique FreeBasic, ##**ScreenPtr**## (si non-ZERO) pointe toujours vers le tampon et non vers la RAM vid&eacute;o r&eacute;elle.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/screenptr.bas"}}%%(freebasic)
Const SCREEN_WIDTH = 640, SCREEN_HEIGHT = 480
Dim As Integer w, h, bypp, pitch

'' Ecran 8-bit.
Screenres SCREEN_WIDTH, SCREEN_HEIGHT, 8

'' Recupere info ecran (w et h doivent correspondre aux constantes ci-dessus, bypp doit etre 1)
Screeninfo w, h, , bypp, pitch

'' Recupere adresse du tampon image. Un pointeur "Any Ptr" 
'' est utilise ici pour allouer un simple pointeur arithmetique
Dim buffer As Any Ptr = Screenptr()
If (buffer = 0) Then
	Print "Error: graphics screen not initialized."
	Sleep
	End -1
End If

'' Verrouille ecran pour acceder directement au tampon
Screenlock()
	
	'' Recupere addresse du pixel au centre ecran
	'' C'est un pixel 8-bit, donc utilisation pointeur UByte.
	Dim As Integer x = w \ 2, y = h \ 2
	Dim As Ubyte Ptr pixel = buffer + (y * pitch) + (x * bypp)
	
	
	'' Couleur pixel a 10 (vert clair).
	*pixel = 10

'' Deverrouille ecran.
Screenunlock()

'' Attend touche appuyee pour clore programme
Sleep
%%
{{fbdoc item="filename" value="examples/manual/gfx/screenptr2.bas"}}%%(freebasic)
Const SCREEN_WIDTH = 256, SCREEN_HEIGHT = 256
Dim As Integer w, h, bypp, pitch

'' Ecran 32-bit.
ScreenRes SCREEN_WIDTH, SCREEN_HEIGHT, 32

'' Recupere info ecran (w et h doivent correspondre aux constantes ci-dessus, bypp doit etre 4)
ScreenInfo w, h, , bypp, pitch

'' Recupere adresse du tampon image. Un pointeur "Any Ptr" 
'' est utilise ici pour allouer un simple pointeur arithmetique
Dim buffer As Any Ptr = Screenptr()
If (buffer = 0) Then
	Print "Error: graphics screen not initialized."
	Sleep
	End -1
End If

'' Verrouille ecran pour acceder directement au tampon
ScreenLock()
	
	'' Adresse ligne debut tampon
	Dim As Any Ptr row = buffer
	
	'' Boucle sur tous pixels ecran:
	
	For y As Integer = 0 To h - 1
	    
	    '' Adresse pixel sur ligne
	    '' c'est un pixel 32-bit, donc utilisation pointeur UInteger Ptr
	    Dim As UInteger Ptr pixel = row
	    
	    For x As Integer = 0 To w - 1
	        
	        '' Place valeur pixel
	        *pixel = Rgb(x, x Xor y, y) 
	        
	        '' Adresse pixel suivant 
	        '' (UInteger Ptr incrementera par 4 octets)
	        pixel += 1
	        
	    Next x
	    
	    '' Ligne suivante
	    row += pitch
	    
	Next y

'' Deverrouille ecran.
ScreenUnlock()

'' Attend appui sur touche avant fermer programme
Sleep
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Screenptr**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphics)]]##
	- ##[[KeyPgScreenres Screenres]]##
	- ##[[KeyPgScreeninfo ScreenInfo]]##
	- ##[[KeyPgScreenlock Screenlock]]##
	- ##[[KeyPgScreenunlock Screenunlock]]##

{{fbdoc item="back" value="CatPgGfxScreen|Screen Functions"}}