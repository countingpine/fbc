{{fbdoc item="title" value="SCREENCONTROL"}}----
D&eacute;finit ou obtient les param&egrave;tres internes de la biblioth&egrave;que graphique

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare Declare]] [[KeyPgSub Sub]] **ScreenControl** ( [[KeyPgByval ByVal]] what [[KeyPgAs As]] [[KeyPgInteger Integer]], [[KeyPgByref ByRef]] param1 [[KeyPgAs As]] [[KeyPgInteger Integer]] = 0, [[KeyPgByref ByRef]] param2 [[KeyPgAs As]] [[KeyPgInteger Integer]] = 0, [[KeyPgByref ByRef]] param3 [[KeyPgAs As]] [[KeyPgInteger Integer]] = 0, [[KeyPgByref ByRef]] param4 [[KeyPgAs As]] [[KeyPgInteger Integer]] = 0 )
	[[KeyPgDeclare Declare]] [[KeyPgSub Sub]] **ScreenControl** ( [[KeyPgByval ByVal]] what [[KeyPgAs As]] [[KeyPgInteger Integer]], [[KeyPgByref ByRef]] param [[KeyPgAs As]] [[KeyPgString String]] = ##"####"## )
##
{{fbdoc item="usage"}}##
	**ScreenControl**( //what// [, [ //param1// ][, [ //param2// ][, [ //param3// ][, [ //param4// ]]]]] )
		##ou,##
	**ScreenControl**( //what// [, //param// ] )
##
{{fbdoc item="param"}}
	##//what//##
		sp&eacute;cifie la fonction &agrave; ex&eacute;cuter
	##//param1//##
		premier param&egrave;tre entier optionnel, contient la valeur &agrave; valider en entr&eacute;e ou la valeur &agrave; obtenir en sortie
	##//param2//##
		second param&egrave;tre entier optionnel, contient la valeur &agrave; valider en entr&eacute;e ou la valeur &agrave; obtenir en sortie
	##//param3//##
		troisi&egrave;me param&egrave;tre entier optionnel, contient la valeur &agrave; valider en entr&eacute;e ou la valeur &agrave; obtenir en sortie
	##//param4//##
		quatri&egrave;me param&egrave;tre entier optionnel, contient la valeur &agrave; valider en entr&eacute;e ou la valeur &agrave; obtenir en sortie
	##//param//##
		param&egrave;tre cha&icirc;ne optionnel, contient le texte &agrave; valider en entr&eacute;e ou &agrave; obtenir en sortie

{{fbdoc item="desc"}}

	Cette fonction peut &ecirc;tre utilis&eacute;e pour d&eacute;finir ou obtenir des &eacute;tats internes de GfxLib. Le param&egrave;tre ##//what//## sp&eacute;cifie quelle op&eacute;ration ex&eacute;cuter. Pour les op&eacute;rations initialisant des &eacute;tats, les param&egrave;tres ##//param*//## doivent contenir les valeurs &agrave; initialiser. Pour les op&eacute;rations qui obtiennent des &eacute;tats, ##//param*//## contiendra les valeurs retourn&eacute;es par GfxLib quand la fonction retournera.
	The meaning of the ##//param*//## parameters depend on the ##//what//## parameter, whose possible values are defined as constants in ##fbgfx.bi##.  In //[[CompilerDialects lang fb]]//, they are set to be stored in the ##FB## ##[[KeyPgNamespace Namespace]]##.
	Voici une liste des constantes ##//what//## support&eacute;es - et leurs valeurs et leurs valeurs telles que d&eacute;finies au moment de la r&eacute;daction - ainsi que les param&egrave;tres qui leur sont associ&eacute;s.

	<u>Op&eacute;rations support&eacute;es</u>
		
		Note: * d&eacute;signe les op&eacute;rations qui sont autoris&eacute;es tant qu'un mode graphique n'a pas encore &eacute;t&eacute; fix&eacute; par [[KeyPgScreengraphics Screen (Graphics)]] or [[KeyPgScreenres ScreenRes]]. Toutes les autres op&eacute;rations, retournent la valeur z&eacute;ro(##0##) ou la cha&icirc;ne vide (##"####"##) et l'op&eacute;ration n'a aucun effet et l'op&eacute;ration n'a aucun effet si un mode graphique n'est pas disponible lors de l'appel.
		
		**Op&eacute;rations pour "obtenir" une valeur**
	- ##GET_WINDOW_POS## (##0##) Retourne la position courante de la fen&ecirc;tre, en coordonn&eacute;es du bureau.
		[OUT] ##//param1//## x
		[OUT] ##//param2//## y
	- * ##GET_WINDOW_TITLE## (##1##) Retourne le titre de la fen&ecirc;tre du programme.
		[OUT] ##//param//## titre
	- ##GET_WINDOW_HANDLE## (##2##) Retourne une accroche (handle) vers la fen&ecirc;tre du programme.
		[OUT] ##//param1//## handle; c'est un ##HWND## pour Windows, un "Window" XID pour X11
	- * ##GET_DESKTOP_SIZE## (##3##) Retourne la taille du bureau, en pixels.
		[OUT] ##//param1//## largeur
		[OUT] ##//param2//## hauteur
	- ##GET_SCREEN_SIZE## (##4##) Retourne la taille de l'&eacute;cran en pixels.
		[OUT] ##//param1//## largeur
		[OUT] ##//param2//## hauteur
	- ##GET_SCREEN_DEPTH## (##5##) Retourne la profondeur du mode graphique courant.
		[OUT] ##//param1//## bits par pixel
	- ##GET_SCREEN_BPP## (##6##) Retourne le mode graphique BPP courant.
		[OUT] ##//param1//## octets par pixel
	- ##GET_SCREEN_PITCH## (##7##) Retourne la longueur d'une ligne (pitch) du tampon image du mode graphique courant, en octets.
		[OUT] ##//param1//## pitch
	- ##GET_SCREEN_REFRESH## (##8##) Retourne la fr&eacute;quence de rafra&icirc;chissement du mode graphique, en hertz.
		[OUT] ##//param1//## fr&eacute;quence
	- ##GET_DRIVER_NAME## (##9##) Retourne le nom du driver du mode graphique courant.
		[OUT] ##//param//## nom
	- ##GET_TRANSPARENT_COLOR## (##10##) Retourne la valeur de la couleur de la transparence pour la profondeur du mode graphique courant.
		[OUT] ##//param1//## valeur
	- ##GET_VIEWPORT## (##11##) Retourne la vue courante (viewport) courante initialis&eacute;e par [[KeyPgViewgraphics View (Graphics)]], en coordonn&eacute;es &eacute;cran.
		[OUT] ##//param1//## x1
		[OUT] ##//param2//## y1
		[OUT] ##//param3//## x2
		[OUT] ##//param4//## y2
	- ##GET_PEN_POS## (##12##) Retourne la derni&egrave;re position du crayon graphique, en coordonn&eacute;es &eacute;cran. Cette position est utilis&eacute;e dans les fonctions graphiques supportant les coordonn&eacute;es relatives utilisant le mot-clef ##[[KeyPgStep Step]]##.
		[OUT] ##//param1//## x
		[OUT] ##//param2//## y
	- ##GET_COLOR## (##13##) Retourne la couleur courante du mode graphique.
		[OUT] ##//param1//## avant-plan
		[OUT] ##//param2//## arri&egrave;re-plan
	- ##GET_ALPHA_PRIMITIVES## (##14##) Retourne si les primitives du support graphique de dessin pour le canal alpha sont valid&eacute;es.
		[OUT] ##//param1//## ##TRUE## (##-1##) si les primitives alpha sont valides, ##FALSE## (##0##) autrement
	- ##GET_GL_EXTENSIONS## (##15##) Retourne une cha&icirc;ne contenant toutes les extensions GL support&eacute;es, ou une cha&icirc;ne vide si pas de mode OpenGL valide.
		[OUT] ##//param//## extensions GL support&eacute;es
	- ##GET_HIGH_PRIORITY## (##16##) Retourne  si ##GFX_HIGH_PRIORITY## a &eacute;t&eacute; sp&eacute;cifi&eacute; dans les drapeaux pass&eacute;s &agrave; ##[[KeyPgScreengraphics Screen]]## ou ##[[KeyPgScreenres ScreenRes]]##.
		[OUT] ##//param1//## priorit&eacute; de traitement graphique la plus haute valid&eacute;e

		**Op&eacute;rations pour initialiser une valeur**
	- ##SET_WINDOW_POS## (##100##) D&eacute;finit la position de la fen&ecirc;tre programme, en coordonn&eacute;es bureau.
		[IN] ##//param1//## x
		[IN] ##//param2//## y
	- * ##SET_WINDOW_TITLE## (##101##) D&eacute;finit le titre de la fen&ecirc;tre programme. Ceci est &eacute;quivalent &agrave; appeler ##[[KeyPgWindowtitle WindowTitle]]( //param// )##.
		[IN] ##//param//## titre
	- ##SET_PEN_POS## (##102##) D&eacute;finit la position courante du crayon graphique, en coordonn&eacute;es &eacute;cran. Cette position est utilis&eacute;e dans les fonctions graphiques supportant les coordonn&eacute;es relatives utilisant le mot-clef ##[[KeyPgStep Step]]##.
		[IN] ##//param1//## x
		[IN] ##//param2//## y
	- * ##SET_DRIVER_NAME## (##103##) D&eacute;finit le nom du driver graphique interne &agrave; utiliser dans les appels ult&eacute;rieurs &agrave; ##[[KeyPgScreengraphics Screen]]## ou ##[[KeyPgScreenres ScreenRes]]##.
		[IN] ##//param//## nom du driver
	- ##SET_ALPHA_PRIMITIVES## (##104##) D&eacute;finit si les primitives de dessin respecte le canal alpha.
		[IN] ##//param1//## valide
	- * ##SET_GL_COLOR_BITS## (##105##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s au tampon couleur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_COLOR_RED_BITS## (##106##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante rouge du tampon couleur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_COLOR_GREEN_BITS## (##107##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante vert du tampon couleur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_COLOR_BLUE_BITS## (##108##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante bleu du tampon couleur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_COLOR_ALPHA_BITS## (##109##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante alpha du tampon couleur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_DEPTH_BITS## (##110##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s au tampon profondeur OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_STENCIL_BITS## (##111##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s au tampon stencil OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_ACCUM_BITS## (##112##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s au tampon accumulation OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_ACCUM_RED_BITS## (##113##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante rouge du tampon accumulation OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_ACCUM_GREEN_BITS## (##114##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante vert du tampon accumulation OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_ACCUM_BLUE_BITS## (##115##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante bleu du tampon accumulation OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_ACCUM_ALPHA_BITS## (##116##) D&eacute;finit le nombre de bits d&eacute;di&eacute;s &agrave; la composante alpha du tampon accumulation OpenGL
		[IN] ##//param1//## bits
	- * ##SET_GL_NUM_SAMPLES## (##117##) D&eacute;finit le nombre de "samples" &agrave; utiliser pour OpenGL multisampling
		[IN] ##//param1//## samples

		**Autres op&eacute;rations**
	- ##POLL_EVENTS## (##200##)Oblige la biblioth&egrave;que &agrave; interroger tous les &eacute;v&eacute;nements, c'est &agrave; dire de v&eacute;rifier la file d'attente des &eacute;v&eacute;nements syst&egrave;me, utilis&eacute; sp&eacute;cifiquement pour d&eacute;terminer les &eacute;v&eacute;nements clavier ou souris.  Ceci est tr&egrave;s utile pour du code OpenGL ou ##[[KeyPgFlip Flip]]## n'est pas utilis&eacute;, car normalement ##[[KeyPgFlip Flip]]## provoque l'interrogation de ces &eacute;v&eacute;nements.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/screencontrol.bas"}}%%(freebasic)
'' include fbgfx.bi pour certaines definitions
#include "fbgfx.bi"

using fb

dim e as EVENT
dim as integer x, y, pressed, col
dim as any ptr img

screenres 384, 64, 32,, GFX_SHAPED_WINDOW

'' cree une forme fenetre fantaisie
img = imagecreate(48,8)
draw string img, (0, 0), "GfxLib"
for y = 0 to 63
	for x = 0 to 383
		col = point(x \ 8, y \ 8, img)
		if (col <> rgb(255, 0, 255)) then
			col = rgb((x + y) and &hFF, (x + y) and &hFF, (x + y) and &hFF)
		end if
		pset (x, y), col
	next x
next y

pressed = 0
do
	if (screenevent(@e)) then
		select case e.type
		case EVENT_MOUSE_BUTTON_PRESS
			pressed = -1
		case EVENT_MOUSE_BUTTON_RELEASE
			pressed = 0
		case EVENT_MOUSE_MOVE
			if (pressed) then
				screencontrol GET_WINDOW_POS, x, y
				screencontrol SET_WINDOW_POS, x + e.dx, y + e.dy
			end if
		end select
	end if
	sleep 5
loop while not multikey(1)
%%


{{fbdoc item="section" value="Differences de dialectes 
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Screencontrol**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphics)]]##
	- ##[[KeyPgScreenevent ScreenEvent]]##
	- ##[[KeyPgScreeninfo ScreenInfo]]##
	- ##[[KeyPgWindowtitle WindowTitle]]##
	- ##[[KeyPgViewgraphics View (Graphics)]]##

{{fbdoc item="back" value="CatPgGfxScreen|Screen Functions"}}