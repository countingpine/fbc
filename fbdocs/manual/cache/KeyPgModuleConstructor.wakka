{{fbdoc item="title" value="CONSTRUCTOR (Module)"}}----
Sp&eacute;cifie l'ex&eacute;cution d'une proc&eacute;dure avant le code niveau module

{{fbdoc item="syntax"}}##
	[[[KeyPgPublic Public]] | [[KeyPgPrivate Private]]] [[KeyPgSub Sub]] //procedure_name// [[[KeyPgAlias Alias]] "//external_identifier//"] [()] **Constructor** [//priority//] [[[KeyPgStatic Static]]]
		{ //procedure body// }
	[[KeyPgEndblock End]] [[KeyPgSub Sub]]
##
{{fbdoc item="desc"}}
	Le mot-cl&eacute; ##**Constructor**## est utilis&eacute; dans les d&eacute;finitions de ##[[KeyPgSub Sub]]## pour forcer l'ex&eacute;cution de la proc&eacute;dure avant celle du code au niveau module. Les proc&eacute;dures d&eacute;finies comme des constructeurs peuvent &ecirc;tre utilis&eacute;s de la m&ecirc;me mani&egrave;re que les proc&eacute;dures ordinaires, c'est &agrave; dire, qu'elles peuvent &ecirc;tre appel&eacute;es &agrave; partir du code au niveau du module, ainsi que d'autres proc&eacute;dures.

	La proc&eacute;dure doit avoir une liste de param&egrave;tres vide.  Une erreur de compilation sera g&eacute;n&eacute;r&eacute;e si le mot-clef ##**Constructor**## est utilis&eacute; dans une d&eacute;finition de ##[[KeyPgSub Sub]]## ayant un ou plusieurs param&egrave;tres. Dans un ensemble de proc&eacute;dures surcharg&eacute;es, un seul (1) constructeur peut &ecirc;tre d&eacute;fini en raison de l'ambigu&iuml;t&eacute; d'avoir plusieurs ##[[KeyPgSub Sub]]## qui n'ont aucun argument.

	Dans un seul module, les constructeurs sont normalement ex&eacute;cut&eacute;s dans l'ordre dans lequel ils ont &eacute;t&eacute; d&eacute;finis.

	L'attribut ##//priority//##, un entier compris entre 101 et 65535, peut &ecirc;tre utilis&eacute; pour forcer les constructeurs &agrave; &ecirc;tre ex&eacute;cut&eacute;s dans un certain ordre.  La valeur de ##//priority//## n'a pas de signification particuli&egrave;re, que la relation entre le num&eacute;ro et les priorit&eacute;s des autres constructeurs.  101 est la plus haute priorit&eacute; et est ex&eacute;cut&eacute; en premier.  Tous les constructeurs ayant un attribut de ##//priority//## sont ex&eacute;cut&eacute;s avant les constructeurs n'ayant pas cet attribut.  La valeur de priorit&eacute; de 65535 est &eacute;quivalente &agrave; "ne pas attribuer une valeur de priorit&eacute;".

	Un module peut d&eacute;finir des proc&eacute;dures constructeur multiples, et plusieurs modules peuvent d&eacute;finir des constructeurs suppl&eacute;mentaires &agrave; condition que deux constructeurs ##[[KeyPgPublic Public]]## ne partagent pas la m&ecirc;me //procedure_name//.
	
	Lors de l'&eacute;dition de liens avec des modules qui d&eacute;finissent &eacute;galement les constructeurs, l'ordre d'ex&eacute;cution n'est pas garanti au moment de la liaison sauf si l'attribut ##//priority//## est utilis&eacute;. Par cons&eacute;quent, une attention particuli&egrave;re doit &ecirc;tre prise lors de l'utilisation de constructeurs qui font appel &agrave; un module secondaire qui &eacute;galement d&eacute;finit un constructeur.  Dans un tel cas, il est conseill&eacute; d'utiliser un seul constructeur qui appelle explicitement les proc&eacute;dures d'initialisation dans ces modules.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/mod-ctor.bas"}}%%(freebasic)
'' ConDesExample.bas : An example program that defines two sets of
'' constructors and destructors. Demonstrates when and in what order
'' they are called when linking a single module.

sub Constructor1() constructor
	print "Constructor1() called"
end sub

sub Destructor1() destructor
	print "Destructor1() called"
end sub

sub Constructor2() constructor
	print "Constructor2() called"
end sub

sub Destructor2() destructor
	print "Destructor2() called"
end sub

	'' ----------------------
	print "module-level code"

	end 0
	'' ----------------------
%%
	**Affichage:**
%%
Constructor1() called
Constructor2() called
module-level code
Destructor1() called
Destructor2() called
%%

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- [[KeyPgConstructor Constructor (Classe)]]
	- [[KeyPgModuleDestructor Destructor (Module)]]
	- [[KeyPgSub Sub]]

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}