{{fbdoc item="title" value="Op&eacute;rateur + (Concat&eacute;nation de cha&icirc;nes)"}}----
Concatène deux chaînes

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **+** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgString string]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **+** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgZstring zstring]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgZstring zstring]] ) [[KeyPgAs as]] [[KeyPgZstring zstring]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **+** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgWstring wstring]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgWstring wstring]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
##
{{fbdoc item="usage"}}##
	//result// = //lhs// **+** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		La chaîne de gauche à concaténer.
	##//rhs//##
		La chaîne de droite à concaténer.

{{fbdoc item="desc"}}
	Cet opérateur concatène deux chaînes. Contrairement à [[KeyPgOpConcatConvert Opérateur & (Concaténation de chaînes avec conversion)]] les deux expressions //doivent// être des chaînes, et ne seront pas converties (en fait, toute tentative de concaténer une chaîne avec une non-chaîne ou deux non-chaînes se traduira par une erreur de type, sauf si la surcharge d'opérateur est utilisée dans un type défini par l'utilisateur).

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/concat_nocvt.bas"}}%%(freebasic)
Dim As String a = "Hello, ", b = "World!"
Dim As String c
c = a + b
Print c
%%
Affiche:
%%
Hello, World!
%%

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- [[KeyPgOpAdd Opérateur + (Add)]]
	- [[KeyPgOpConcatConvert Opérateur & (Concaténation de chaînes avec conversion)]]
	- ##[[KeyPgStr Str]]##

{{fbdoc item="back" value="CatPgOpString|String Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}

