{{fbdoc item="title" value="SCREEN (Console)"}}----
Renvoie le caract&egrave;re ou l&apos;attribut de couleur &agrave; la position donn&eacute;e

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Screen** ( [[KeyPgByval byval]] row [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] column [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] colorflag [[KeyPgAs as]] [[KeyPgInteger integer]] = 0 ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Screen**( //row//, //column// [, //colorflag// ] )
##
{{fbdoc item="param"}}
	##//row//##
		d&eacute;calage vertical depuis le coin en haut &agrave; gauche de la console (base = 1).
	##//column//##
		d&eacute;calage horizontal depuis le coin en haut &agrave; gauche de la console (base = 1).
	##//colorflag//##
		Si &eacute;gal &agrave; 0, le code [[CptAscii ASCII]] est renvoy&eacute;, uatrement c&apos;est l&apos;attribut de couleur qui est renvoy&eacute;.  S&apos;il est omis, sa valeur par d&eacute;faut est 0.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Le code [[CptAscii ASCII]] ou l&apos;attribut de couleur du caract&egrave;re.
	A ce moment (v0.18.5), si les coordonn&eacute;es sont hors de l&apos;&eacute;cran, aucun no d&apos;erreur n&apos;est attribu&eacute; et la valeur retourn&eacute;e n&apos;est pas fiable.

{{fbdoc item="desc"}}
	##**Screen**## rtourne le caract&egrave;re ou l&apos;attribut de couleur trouv&eacute; &agrave; la position donn&eacute;e d&apos;une sortie console. Fonctionne en mode console ou graphique.
	
	Le format de l&apos;attribut de couleur d&eacute;pend de la profondeur de la couleur :
	
	Si le type de couleur est une palette de 4 bits par pixel (comme la console Win32), alors l&apos;attribut de couleur est une valeur 8-bit, dans laquelle les 4 bits de poids fort correspondent &agrave; la couleur d&apos;arri&egrave;re-plan et les 4 bits de poids faible correspondent &agrave; la couleur de premier-plan (caract&egrave;re).
	
	Si le type de couleur est une palette de 8 bits par pixel, alors l&apos;attribut de couleur est une valeur 16-bit, dans laquelle l&apos;octet de poids fort correspond &agrave; la couleur d&apos;arri&egrave;re-plan et l&apos;octet de poids faible &agrave; la couleur de premier-plan.

	Si nous sommes en ##//pleine couleur//##, alors l&apos;attribut de couleur est un entier 32-bit, correspondant &agrave; une unique valeur de couleur.  Si ##//colorflag//## est &agrave; 1, alors c&apos;est la couleur d&apos;arri&egrave;re-plan qui est renvoy&eacute;e; si ##//colorflag//## est &agrave; 2, alors c&apos;est la couleur de premier-plan qui est renvoy&eacute;e.
	
	
	Les valeurs de couleur pour une palette standard de 16 couleurs sont :

		{{table columns="" cellpadding="2" cells="<table>Valeur;Couleur;Valeur;Couleur;0;Noir;8;Gris;1;Bleu;9;Bleu Clair;2;Vert;10;Vert Clair;3;Cyan;11;Cyan Clair;4;Rouge;12;Rouge Clair;5;Magenta;13;Rose;6;Marron;14;Jaune;7;Blanc;15;Blanc Brillant;</table>

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/console/screen-func.bas"}}%%(freebasic)
dim character_ascii_value as integer
dim attribute as integer
dim background as integer
dim cell_color as integer
dim row as integer, col as integer

character_ascii_value = Screen( row, col )
attribute = Screen( row, col, 1 )
background = attribute shr 4
cell_color = attribute and &hf
%%

{{fbdoc item="filename" value="examples/manual/gfx/screen-func1.bas"}}%%(freebasic)
&apos;&apos; ouvre un ecran graphique avec 4 bits par pixel
&apos;&apos; (alternativement, omettez cette ligne pour utiliser la console)
screenres 320, 200, 4

&apos;&apos; affiche un caractere
color 7, 1
print "A"

dim as uinteger char, col, fg, bg

&apos;&apos; obtient la valeur ASCII du caractere que nous&apos;avons affiche
char = screen(1, 1, 0)

&apos;&apos;obtient les attributs de couleur
col = screen(1, 1, 1)
fg = col and &HF
bg = (col shr 4) and &HF

print using "ASCII value: ### (""!"")"; char; chr(char)
print using "Foreground color: ##"; fg
print using "Background color: ##"; bg
sleep
%%

{{fbdoc item="filename" value="examples/manual/gfx/screen-func2.bas"}}%%(freebasic)
&apos;&apos; ouvre ecran graphique avec 8 bits par pixel
screenres 320, 200, 8

&apos;&apos; affiche un caractere
color 30, 16
print "Z"

dim as uinteger char, col, fg, bg

&apos;&apos; obtient la valeur ASCII du caractere que nous&apos;avons affiche
char = screen(1, 1, 0)

&apos;&apos;obtient les attributs de couleur
col = screen(1, 1, 1)
fg = col and &HFF
bg = (col shr 8) and &HFF

print using "ASCII value: ### (""!"")"; char; chr(char)
print using "Foreground color: ###"; fg
print using "Background color: ###"; bg
sleep
%%

{{fbdoc item="filename" value="examples/manual/gfx/screen-func3.bas"}}%%(freebasic)
&apos;&apos; ouvre ecran graphique pleine-couleur
screenres 320, 200, 32

&apos;&apos; affiche un caractere
Color RGB(255, 255, 0), RGB(0, 0, 255) &apos;jaune sur bleu
print "M"

dim as integer char, fg, bg

&apos;&apos; obtient la valeur ASCII du caractere que nous&apos;avons affiche
char = screen(1, 1, 0)

&apos;&apos;obtient les attributs de couleur
fg = screen(1, 1, 1)
bg = screen(1, 1, 2)

print using "ASCII value: ### (""!"")"; char; chr(char)
print using "Foreground color: &"; hex(fg, 8)
print using "Background color: &"; hex(bg, 8)
sleep
%%
{{fbdoc item="target"}}
	- Dans la version Linux, la valeur retourn&eacute;e peut diff&eacute;rer du caract&egrave;re affich&eacute; &agrave; l'&eacute;cran.  Par exemple, les codes de contr&ocirc;le non-imprimables - comme le caract&egrave;re ##LF## (##10##) qui appara&icirc; implicitement &agrave; la fin d'une ligne de texte affich&eacute; par ##[[KeyPgPrint Print]]## - peuvent &ecirc;tre utilis&eacute;s &agrave; la place du caract&egrave;re initial.

</br>
	{{fbdoc item="section" value="Diff&eacute;rences par rapport &agrave; QB

- Dans QB ##**Screen**## d&eacute;clanche une erreur si les coordonn&eacute;es sont hors de l&apos;&eacute;cran.
	</br>
	{{fbdoc item="see"}}

- ##[[KeyPgScreengraphics Screen (Graphics)]]##