{{fbdoc item="title" value="Operator Delete"}}----
Op&eacute;rateur pour d&eacute;truire des donn&eacute;es allou&eacute;es avec l'op&eacute;rateur ##[[KeyPgOpNew New]]##

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **delete** ( //buf//  [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]] )
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **delete[]** ( //buf//  [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]] )
##
{{fbdoc item="usage"}}##
	**Delete** //expression//
		//ou//
	**Delete[]** //expression//
##
{{fbdoc item="param"}}
	##//buf//## 
		Une adresse m&eacute;moire &agrave; lib&eacute;rer.
	##//expression//##
		Une adresse m&eacute;moire &agrave; lib&eacute;rer.

{{fbdoc item="desc"}}
	##**Delete**## est utilis&eacute; pour d&eacute;truire et lib&eacute;rer la m&eacute;moire d'un objet cr&eacute;&eacute; avec [[KeyPgOpNew New]]. Quand on ##**Delete**## un TYPE, son destructeur est appel&eacute;. ##**Delete**## doit &ecirc;tre utilis&eacute; uniquement avec des adresses retourn&eacute;es par ##[[KeyPgOpNew New]]##.

	La version ##**Delete**## pour les tableaux, ##**Delete[]**##, est utilis&eacute; pour d&eacute;truire un tableau d'objets cr&eacute;&eacute;s pr&eacute;c&eacute;demment avec [[KeyPgOpNew New]][]. Les destructeurs seront l&agrave; aussi appel&eacute;s.

	##**Delete**## doit &ecirc;tre utilis&eacute; avec des adresses retourn&eacute;es par [[KeyPgOpNew New]], et ##**Delete[]**## par [[KeyPgOpNew New]][]. Vous ne pouvez m&eacute;langer les diff&eacute;rentes versions de ces op&eacute;rateurs.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/delete.bas"}}%%(freebasic)
type Rational
	As Integer    numerator, denominator
end type

scope

	' Create and initialize a Rational, and store it's address.
	dim p as Rational ptr = new Rational(3, 4)

	print p->numerator & "/" & p->denominator

	' Destroy the rational and give its memory back to the system. 
	delete p

end scope

scope

	' Allocate memory for 100 integers, store the address of the first one.
	dim p as integer ptr = new integer[100]

	' Assign some values to the integers in the array.
	for i as integer = 0 to 99
		p[i] = i
	next

	' Free the entire integer array.
	delete[] p

end scope
%%
{{fbdoc item="lang"}}
	- Valable seulement dans le dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgOpNew New]]##

{{fbdoc item="back" value="CatPgOpMemory|Memory Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}