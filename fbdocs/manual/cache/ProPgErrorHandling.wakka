{{fbdoc item="title" value="Error Handling"}}----
Gestion des erreurs d'ex&eacute;cution.

	FreeBasic peut g&eacute;rer les erreurs de la mani&egrave;re suivante:
	- Par d&eacute;faut, le programme ne fait rien avec les erreurs - elles sont ignor&eacute;es et le code continue. Dans ce cas, le code devrait traiter les erreurs possibles dans la ligne suivante en utilisant la fonction ##[[KeyPgErr Err]]##.
	- S'il est compil&eacute; avec les options //[[CompilerOpte -e]]// ou //[[CompilerOptex -ex]]//, FreeBASIC utilise la gestion des erreurs comme dans QB.
	- Les **futures** versions POO de FreeBASIC auront un gestionnaire d'exception comme dans Java: TRY..CATCH...FINALLY.

	**NOTE:** Les informations suivantes sont valables sauf si l'erreur produit un: "OS General Protection Fault" = "syst&egrave;me d'exploitation erreur de protection g&eacute;n&eacute;rale"  (par exemple, si le programme &eacute;crit en dehors de la zone m&eacute;moire du processus). Dans ces cas, le syst&egrave;me d'exploitation va imm&eacute;diatement arr&ecirc;ter le programme et &eacute;mettre une erreur: rien ne peut l'&eacute;viter &agrave; l'int&eacute;rieur de FreeBASIC.

{{fbdoc item="section" value="La gestion des erreurs, par d&eacute;faut

	Le comportement par d&eacute;faut FreeBasic est de d&eacute;finir la variable ERR et de continuer. 

{{fbdoc item="filename" value="examples/manual/proguide/errors/err.bas"}}%%(freebasic)
Dim as integer e
Open "xzxwz.zwz" For Input As #1
e = Err
Print e
Sleep
%%

	(Le programme d'exemple suppose il n'y a pas de fichier ##xzxwz.zwz##). Le programme ne s'arr&ecirc;te pas; il d&eacute;finit la variable ERR et continue. L'erreur peut &ecirc;tre trait&eacute;e sur la ligne suivante.

	Certaines fonctions d'entr&eacute;e/sortie telles que ##[[KeyPgOpen Open]]## et ##[[KeyPgPutfileio Put #]]##... peuvent &ecirc;tre utilis&eacute;es sous forme de fonction qui retourne un num&eacute;ro d'erreur ou z&eacute;ro en cas de succ&egrave;s.

{{fbdoc item="filename" value="examples/manual/proguide/errors/result.bas"}}%%(freebasic)
Print Open ("xzxwz.zwz" For Input As #1)
Sleep
%%

{{fbdoc item="section" value="La gestion des erreurs comme dans QuickBasic

	Si l'option //[[CompilerOpte -e]]// ou //[[CompilerOptex -ex]]// est utilis&eacute;e lors de la compilation, le programme est suppos&eacute; avoir un gestionnaire d'erreurs comme dans QB. Si aucun gestionnaire ne g&egrave;re l'erreur, le programme s'arr&ecirc;te avec une erreur.

	Note: si une gestion des erreurs comme dans QB est utilis&eacute;e, le programmeur doit &ecirc;tre pr&eacute;par&eacute; &agrave; g&eacute;rer toutes les conditions d'erreur.

{{fbdoc item="filename" value="examples/manual/proguide/errors/on-error.bas"}}%%(freebasic)
'' Compile with QB (-lang qb) dialect

'$lang: "qb"

On Error Goto FAILED
Open "xzxwz.zwz" For Input As #1
On Error Goto 0
Sleep
End

FAILED:
Dim as integer e = Err
Print e
Sleep
End
%%

	##[[KeyPgOnerror On Error]]## d&eacute;finit une routine de gestion d'erreur dans laquelle le programme va sauter au moment o&ugrave; une erreur est trouv&eacute;e. ##[[KeyPgOnerror On Error]] [[KeyPgGoto Goto]] 0## d&eacute;sactive la gestion des erreurs.

	Si une routine de gestion d'erreur n'est pas d&eacute;finie quand une erreur survient, le programme s'arr&ecirc;te et envoie sur la console un message d'erreur.
%%
Aborting program due to runtime error 2 (file not found)
%%<div style="clear:both"> 
La routine de gestionnaire d'erreurs peut &ecirc;tre &agrave; la fin du programme, comme dans QB. L'instruction ##[[KeyPgLocal On Local Error]]## permet la cr&eacute;ation d'une routine de gestion locale de l'erreur &agrave; la fin de la m&ecirc;me ##[[KeyPgSub Sub]]## ou ##[[KeyPgFunction Function]]## dans laquelle l'erreur se produit.
	%%(freebasic)

'' Compile with -e
'' The -e command line option is needed to enable error handling.
Declare Sub foo

foo
  Sleep
Sub foo

Dim filename As String
	
	Dim errmsg As String
	filename = ""
	On Local Error Goto fail
	Open filename For Input Access Read As #1
  Print "No error"
	On Local Error Goto 0
	Exit Sub
	fail:
	
  errmsg = "Error " & Err & _
  " in function " & *Erfn & _
	       " on line " & Erl
	       Print errmsg
  End Sub
	
%%
Si l'option //[[CompilerOpte -e]]// est utilis&eacute;e, le gestionnaire d'erreurs doit terminer le programme. 

	Avec //[[CompilerOptex -ex]]// la routine d'erreur peut se terminer en utilisant ##[[KeyPgResume Resume]]## (r&eacute;essaie la d&eacute;claration qui a provoqu&eacute; l'erreur) ou ##[[KeyPgResumenext Resume Next]]## (se poursuit &agrave; l'instruction suivante) .
	{{fbdoc item="section" value="Les codes d'erreur

Voir [[TblRuntimeErrors Codes d'erreurs de fonctionnement]] pour une liste des num&eacute;ros d'erreur d'ex&eacute;cution et leur signification associ&eacute;e.

	Aucune gamme de code d'erreurs utilisateur n'est d&eacute;finie. Si ##[[KeyPgError Error]]## est utilis&eacute;e pour d&eacute;finir un code d'erreur, il est sage d'utiliser des valeurs &eacute;lev&eacute;es pour &eacute;viter les collisions avec la liste des codes d'erreurs int&eacute;gr&eacute;e. (Cette liste int&eacute;gr&eacute;e pouvant &ecirc;tre &eacute;tendue ult&eacute;rieurement.)

	{{fbdoc item="see"}}

- [[CatPgError Fonctions de gestion des erreurs]]
	- [[TblRuntimeErrors Codes d'erreurs de fonctionnement]]
	- [[TblRuntimeErrors Runtime Error Codes]]

{{fbdoc item="back" value="CatPgProgrammer|Programmer's Guide"}}{{fbdoc item="back" value="DocToc|Table of Contents"}}