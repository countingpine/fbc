{{fbdoc item="title" value="Custom (Param&egrave;tre Put graphique)"}}----
Paramètre de la déclaration graphique ##[[KeyPgPutgraphics Put]]## qui sélectionne une méthode définie par l'utilisateur

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Custom**, //custom_function_ptr// [, //parameter//]
##
{{fbdoc item="param"}}
	##**Custom**##
		Obligatoire.
	##//custom_function_ptr//##
		nom de la fonction définie par l'utilisateur.
	##//parameter//##
		optional ##[[KeyPgPointer Pointeur]]## facultatif à passer à la fonction; si omis, la valeur par défaut est zéro (##0##).

{{fbdoc item="desc"}}
	##**Custom**## sélectionne une fonction définie par l'utilisateur comme méthode utilisée pour modifier (blitting) un tampon image.

	La méthode ##Custom## utilise une fonction définie parl'utilisateur pour calculer la valeur finale des pixels à dessiner dansle tampon destination. Cette fonction sera appelée une fois pour chaquepixel de l'image source , et recevra les valeurs des pixels source etdestination, et un pointeur de données passé par la fonction ##[[KeyPgPutgraphics Put]]##. La valeur du pixel renvoyée sera la valeur utilisée pour le tracé dans le tampon destination. La fonction à la forme:

	##[[KeyPgDeclare declare]] [[KeyPgFunction function]] //identifier// ( _
		[[KeyPgByval byval]] //source_pixel// [[KeyPgAs as]] [[KeyPgUinteger uinteger]], _
		[[KeyPgByval byval]] //destination_pixel// [[KeyPgAs as]] [[KeyPgUinteger uinteger]], _
		[[KeyPgByval byval]] //parameter// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]] _
		) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]##

	##//identifier//## est le nom de la fonction.
	##//source_pixel//## est la valeur courante du pixel de l'image source.
	##//destination_pixel//## est la valeur courante du pixel de l'image destination.
	##//parameter//## est le paramètre qui est passé par la commande ##[[KeyPgPutgraphics Put]]##.  Si omis, sa valeur sera zéro.

{{fbdoc item="ex"}}
	{{fbdoc item="filename" value="examples/manual/gfx/custom.bas"}}%%(freebasic)
function dither ( byval source_pixel as uinteger, byval destination_pixel as uinteger, byval parameter as any ptr ) as uinteger
	
	''Retourne soit le pixel source soit le pixel destination, en fonction de la valeur du rnd
	
	dim threshold as single = 0.5
	if parameter <> 0 then threshold = *cptr(single ptr, parameter)
	
	if rnd() < threshold then
	    return source_pixel
	else
	    return destination_pixel
	end if
	
end function


dim img as any ptr, threshold as single

'' Valide un ecran
screenres 320, 200, 16, 2
screenset 0, 1

'' Cree une image
img = imagecreate(32, 32)
line img, ( 0,  0)-(15,  15), rgb(255,   0,   0), bf
line img, (16,  0)-(31,  15), rgb(  0,   0, 255), bf
line img, ( 0, 16)-(15,  31), rgb(  0, 255,   0), bf
line img, (16, 16)-(31,  31), rgb(255,   0, 255), bf

'' fonction dither image avec differents thresholds
do until len(inkey)
	
	cls
	
	threshold = 0.2
	put ( 80 - 16, 100 - 16), img, custom, @dither, @threshold
	
	'' default threshold = 0.5
	put (160 - 16, 100 - 16), img, custom, @dither
	
	threshold = 0.8
	put (240 - 16, 100 - 16), img, custom, @dither, @threshold
	
	screencopy
	sleep 25
	
loop

'' free the image memory
imagedestroy img
%%
{{image class="center" title="Put Custom example output" url="/images/custom.png"}}

{{fbdoc item="section" value="Differences de dialecte"}}
	- Non utilisable dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgPutgraphics Put (Graphique)]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}

