{{fbdoc item="title" value="FUNCTION (Member)"}}----
Déclare ou définit une procédure membre qui renvoie une valeur.

{{fbdoc item="syntax"}}##
	{ [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] } //typename//
		[[KeyPgDeclare declare]] [ [[KeyPgStaticMember static]] | [[KeyPgConstMember const]] ] **Function** //fieldname// [//calling convention specifier//] [ [[KeyPgAlias alias]] //external_name// ] ( [ //parameters// ] ) [[KeyPgAs as]] [[DataType datatype]] [ [[KeyPgStatic Static]] ]
	End { [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] }

	**Function** //typename//.//fieldname// ( [ //parameters// ] ) [[KeyPgAs as]] [[DataType datatype]]
		//statements//
	**End Function**
##
{{fbdoc item="param"}}
	##//typename//## 
		nom de ##[[KeyPgType Type]]##, ##[[KeyPgClass Class]]## ou ##[[KeyPgUnion Union]]##
	##//fieldname//## 
		nom de la procédure
	##//external_name//##
		nom de champ vu quand on établit des liens externes
	##//parameters//## 
		les paramètres à passer à la procédure
	##//calling convention specifier//##	
		peut être: ##[[KeyPgCdecl Cdecl]]##, ##[[KeyPgStdcall Stdcall]]## ou ##[[KeyPgPascal Pascal]]##

{{fbdoc item="desc"}}
	Les membres de ##**Function**## sont accessibles avec ##[[KeyPgOpMemberAccess Operator . (Accès de membre)]]## ou ##[[KeyPgOpPtrMemberAccess Operator -> (Pointeur vers Accès de membre)]]## pour appeler une procédure membre qui retourne une valeur.  La procédure peut éventuellement accepter des paramètres ##[[KeyPgByval byval]]## ou ##[[KeyPgByref byref]]##.  ##//typename//## peut être surchargé, sans utilisation explicite du mot-clé ##[[KeyPgOverload Overload]]##.

	##//typename//## est le nom du type avec lequel la ##**Function**## est déclarée et définie.  La résolution de noms pour ##//typename//## suit les mêmes règles que pour les procédures en cas d'utilisation dans un ##[[KeyPgNamespace Namespace = Espace de noms]]##.

	Un paramètre caché ##[[KeyPgThis this]]## ayant le même type que ##//typename//## est passé aux procédures membres non statiques.  ##[[KeyPgThis this]]## est utilisé pour accéder aux champs de ##[[KeyPgType Type]]##, ##[[KeyPgClass Class]]## ou ##[[KeyPgUnion Union]]##.

	Un ##[[KeyPgStaticMember Static (Membre)]]## peut être déclaré en utilisant le spécificateur ##**Static**##.  A ##[[KeyPgConstMember Const (Membre)]]## peut être déclaré en utilisant le spécificateur ##**Const**##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/function.bas"}}%%(freebasic)
#include "vbcompat.bi"

type Date

  value as double

  declare static function Today() as Date

  declare function year() as integer
  declare function month() as integer
  declare function day() as integer

end type

function Date.Today() as Date
  return type(now())
end function

function Date.Year() as integer
  return ..Year(value)
end function

function Date.Month() as integer
  return ..Month(value)
end function

function Date.Day() as integer
  return ..Day(value)
end function

dim d as Date = Date.Today

print "Year  = "; d.Year
print "Month = "; d.Month
print "Day   = "; d.Day

%%

{{fbdoc item="lang"}}
	- Disponible seulement dans le dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="see"}}
	- ##[[KeyPgClass Class]]##
	- ##[[KeyPgFunction Function]]##
	- ##[[KeyPgMemberSub Sub (Membre)]]##
	- ##[[KeyPgType Type]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}