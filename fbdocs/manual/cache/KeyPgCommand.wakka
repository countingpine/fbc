{{fbdoc item="title" value="COMMAND"}}----
Renvoie les paramètres de la ligne de commande utilisés pour appeler le programme

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Command** ( [[KeyPgByval byval]] //index// [[KeyPgAs as]] [[KeyPgInteger integer]] = -1 ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Command**[$]( [ //index// ] )
##
{{fbdoc item="param"}}
	##//index//##
		Indice (de base zéro) pour un argument particulier de la ligne de commande.

{{fbdoc item="ret"}}
	  Retourne le(s) arguments(s)de ligne de commande.

{{fbdoc item="desc"}}
	##**Command**## retourne le(s) arguments(s)de ligne de commande passés au programme lors de l'exécution.

	Si ##//index//## est inférieur à zéro (##< 0##), une liste de tous les arguments (séparés par des epaces) de la ligne de commande est retournée, autrement, un argument unique est retourné. Une valeur de zéro (##0##) retourne le nom de l'exécutable; et une valeur de un (##1##) et supérieure retourne chaque argument de la ligne de commande.
	
	Si ##//index//## est supérieur au nombre d'arguments passés au programme, la chaîne nulle ##"####"##) est retournée.

	Lorsque la ligne de commande est analysée pour les arguments, ce qui est entre guillemets dans la liste des paramètres sera considéré comme un seul paramètre, et est retourné avec les guillemets.

	Par défaut, le nom de fichier avec "globbing" (expansion des jokers pour les noms de fichiers) pour les arguments est utilisé sur tous les portages de ""FreeBASIC"" pour la compatibilité.  Les arguments sur la ligne de commande contenant des jokers ne sont généralement pas expansés si aucun fichier ne correspond ou n'est correctement déclaré.  Les autres caractères spéciaux pour la redirection ne sont généralement pas retournés sauf si correctement déclarés.  Consultez la documentation sur l'interpréteur de commandes (shell) utilisé pour plus d'informations sur la déclaration convenable des arguments de la ligne de commande.

~&//**AVERTISSEMENT**: Par la nature de la priorité de constructeur sous ""FreeBASIC"" et initialisation de main(), appeler ##**Command**## dans un constructeur global n'est pas sûr. Sur le moment, votre application ne plantera pas, mais vous ne recevrez que la chaîne nulle (##"####"##). Ceci sera *peut être* corrigé à l'avenir, mais il serait sage de ne pas trop y croire.//

	__Désactivation de "globbing" de nom de fichier sous Win32__
		Pour les constructions mingw32 et cygwin builds, lier le programme ""FreeBASIC"" avec CRT_noglob.o ou définir ce qui suit quelque part dans la source:
		{{fbdoc item="filename" value="examples/manual/check/KeyPgCommand_1.bas"}}%%(freebasic)
Extern _CRT_glob Alias "_CRT_glob" As Integer
Dim Shared _CRT_glob As Integer = 0
%%

	__Désactivation du "globbing" de nom de fichier sous Dos__
		Définir la fonction suivante quelque part dans la source:
		{{fbdoc item="filename" value="examples/manual/check/KeyPgCommand_2.bas"}}%%(freebasic)
Public Function __crt0_glob_function Alias "__crt0_glob_function" ( ByVal arg As UByte Ptr ) As UByte Ptr Ptr
  Return 0
End Function
%%

	__Désactivation du "globbing" de nom de fichier sous Linux__
		Le "globbing" de nom de fichier  est géré par l'interpréteur de commandes (shell).  Mettre entre guillemets l'argument contenant des jokers ou désactiver le "globbing" de nom de fichier dans le shell avant l'exécution de la commande.  Par exemple dans l'interpréteur de commandes bash utilisez 'set -f' pour désactiver l'expansion des jokers.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/system/command.bas"}}%%(freebasic)
''
'' command-line arguments example
''

 	print "exe name= "; command( 0 )

 	dim argc as integer, argv as string

 	argc = 1
 	do
 		argv = command( argc )

 		if( len( argv ) = 0 ) then
 			exit do
 		end if

 		print "arg"; argc; " = """; argv; """"

 		argc += 1
 	loop

 	if( argc = 1 ) then
 		print "(no arguments)"
 	end if
 	print "The complete list: ";command
%%

{{fbdoc item="lang"}}
	- Le suffixe de type chaîne ##$## est obligatoire dans le dialecte //[[CompilerOptlang -lang qb]]//.
	- Le suffixe de type chaîne ##$## est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- L'argument numérique n'était pas pris en charge dans QB.
	- QB convertit la liste de paramètres en majuscules avant de la retourner, ""FreeBASIC"" non.
	- Par défaut les arguments contenant des caractères génériques sont développés ("globbing" des noms de fichiers)

{{fbdoc item="see"}}
	- ##[[KeyPgDdfbargc __FB_ARGC__]]##
	- ##[[KeyPgDdfbargv __FB_ARGV__]]##
	- ##[[KeyPgExec Exec]]##
	- ##[[KeyPgRun Run]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}