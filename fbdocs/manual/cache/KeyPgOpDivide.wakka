{{fbdoc item="title" value="Operator / (Divide)"}}----
Divise deux expressions num&eacute;riques

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgByte byte]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgByte byte]] ) [[KeyPgAs as]] [[KeyPgByte byte]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUbyte ubyte]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUbyte ubyte]] ) [[KeyPgAs as]] [[KeyPgUbyte ubyte]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgShort short]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgShort short]] ) [[KeyPgAs as]] [[KeyPgShort short]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUshort ushort]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUshort ushort]] ) [[KeyPgAs as]] [[KeyPgUshort ushort]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUinteger uinteger]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUinteger uinteger]] ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgLongint longint]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgLongint longint]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgUlongint ulongint]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgUlongint ulongint]] ) [[KeyPgAs as]] [[KeyPgUlongint ulongint]]

	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgSingle single]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgSingle single]] ) [[KeyPgAs as]] [[KeyPgSingle single]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **/** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgDouble double]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	//result// = //lhs// **##/##** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		Le dividende, argument c&ocirc;t&eacute; gauche.
	##//rhs//##
		Le diviseur, argument c&ocirc;t&eacute; droit.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne le quotient du dividende et du diviseur.

{{fbdoc item="desc"}}
	**##Operator /## (Divide)** retourne le quotient du dividende et du diviseur.

	Dans tous les cas, aucun op&eacute;rande n'est modifi&eacute;. Contrairement &agrave; la division enti&egrave;re, division &agrave; virgule flottante par z&eacute;ro est sans danger, le quotient aura une valeur sp&eacute;ciale repr&eacute;sentant l'infini, en la convertissant en une cha&icirc;ne elle retournera quelque chose comme "Inf" ou "INF", le texte exact est sp&eacute;cifique &agrave; la plate-forme. 

	Cet op&eacute;rateur peut &ecirc;tre surcharg&eacute; pour accepter les types d&eacute;finis par l'utilisateur.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/divide.bas"}}%%(freebasic)
DIM n AS DOUBLE
PRINT n / 5
n = 6 / 2.3
PRINT n
SLEEP
%%
Output:
%%
0
2.608695652173913
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, cet op&eacute;rateur ne peut pas &ecirc;tre surcharg&eacute;.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- [[KeyPgOpIntegerDivide Operator \ (Division enti&egrave;re)]]
	- [[CatPgMath Fonctions math&eacute;matiques]]

{{fbdoc item="back" value="CatPgOpArithmetic|Arithmetic Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}
