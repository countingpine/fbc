{{fbdoc item="title" value="BITRESET"}}----
Obtient la valeur d'un entier dont on a positionn&eacute; un certain bit &agrave; z&eacute;ro (0).

{{fbdoc item="syntax"}}##
	[[KeyPgPpdefine #define]] **Bitreset**( //value//, //bit_number// ) ((//value//) [[KeyPgOpAnd and]] [[KeyPgOpNot not]] ([[KeyPgCast Cast]]([[KeyPgTypeof TypeOf]](//Value//), 1) [[KeyPgOpShiftLeft shl]] (//bit_number//)))
##
{{fbdoc item="usage"}}##
	//result// = **Bitreset**( //value//, //bit_number// )
##
{{fbdoc item="param"}}
	##//value//##
		La valeur enti&egrave;re.
	##//bit_number//##
		L'indice du bit &agrave; mettre &agrave; z&eacute;ro.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne la valeur enti&egrave;re avec le bit sp&eacute;cifi&eacute; mis &agrave; z&eacute;ro.

{{fbdoc item="desc"}}
	Cette macro se d&eacute;veloppe en une copie de la valeur enti&egrave;re ##//value//## avec le bit ##//bit_number//## "nettoy&eacute;" (&agrave; //off//, ou `##0##`). Se comporte comme `##//value// [[KeyPgOpAnd And]] [[KeyPgOpNot Not]] (1 [[KeyPgOpShiftLeft Shl]] //bit_number//)##`.

	La plage valide de valeurs pour ##//bit_number//## d&eacute;pend de la taille, en bits, de`##[[KeyPgTypeof TypeOf]](//value//)##`, qui est `##0##` par le biais de `##[[KeyPgSizeof SizeOf]](//value//) * 8 - 1##`. Voir [[TblVarTypes Limites des types de donn&eacute;es standard]] pour un tableau des types de donn&eacute;es standard et leurs tailles.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/bits/bitreset.bas"}}%%(freebasic)
print bitreset(5,0)
print hex(bitreset(&h8000000000000001,63))
%%
	produira la sortie:

%%
4
1

%%
	{{fbdoc item="lang"}}

- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.
	{{fbdoc item="diff"}}

- Nouveau pour FreeBASIC
	{{fbdoc item="see"}}
	- ##[[KeyPgBit Bit]]##
	
- ##[[KeyPgBitset BitSet]]##