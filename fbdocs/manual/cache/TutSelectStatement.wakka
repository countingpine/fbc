{{fbdoc item="title" value="L'instruction Select Case"}}----
//Ecrit par [[WikiRick rdc]]//

Le bloc **Select Case** peut être considérée comme une série If-ElseIf optimisée et fonctionne de la même manière. Le format standard de **Select Case** peut utiliser n'importe lequel des types de données standard pour <expression> et le format **Select Case As Const** est optimisé pour les valeurs entières.

Cet extrait de code montre la syntaxe de **Select Case**e standard. L'expression est généralement une variable qui peut être de l'un des types de données standard ou des éléments individuels d'un type ou d'un tableau. 

%%(freebasic)
Select Case <expression>
	Case <list>
		<statement> 
		<statement>
		...
	Case Else
		<statement>
		<statement>
		...
End Select
%%

La clause <list> de l'instruction **Case** peut avoir n'importe lequel des formats suivants.

~- Case <value>: Value est l'un des types de données pris en charge ou une énumération. 
~- Case <value> To <value>: Spécifie une plage de valeurs.
~- Case Is <operator> <value>: L'opérateur est l'un des opérateurs logiques.
~- Case <value>, <value>, ...: Liste de valeurs séparées par des virgules.
~- Case <variable>: Une variable qui contient une valeur.

L'extrait suivant illustre comment ces différents formats peuvent être utilisés dans un programme.

%%(freebasic)
Case 47

Case 47 To 59

Case Is > 60

Case 47, 48, 53

Case keycode
%%

**Select Case As Const** est une version plus rapide de la déclaration **Select** visant à travailler avec des expressions entières dans la plage de 0 à 4097.

%%(freebasic)
Select Case As Const <integer_expression>
	Case <list>
		<statement> 
		<statement>
		...
	Case Else
		<statement>
		<statement>
		...
End Select
%%

La <list> des formats de déclaration pour **Select Case As Const** sont limités à des valeurs ou des énumérations de valeurs. Autrement dit, les expressions opérateurs sont pas autorisés dans un cas **As Const**.

Quand un bloc **Case** est exécuté, les instructions suivant le mot-clé **Case** jusqu'au mot-clé **Case** (ou End Select) suivant seront exécutées. Un seul bloc d'instructions dans un **Case** sera exécuté à un moment donné. Si un **Case Else** est présent, alors les instructions dans le bloc **Else** seront exécutées si aucun **Case** ne correspond à la portion de la déclaration **Select**. Le programme suivant illustre l'utilisation du bloc **Select Case**.

%%(freebasic)
'Ascii code of key press
Dim As Integer keycode

'Loop until esc key is pressed
Do
	keycode = Asc(Inkey)
	Select Case As Const keycode
	    Case 48 To 57
	        Print "You pressed a number key."
	    Case 65 To 90
	        Print "You pressed an upper case letter key."
	    Case 97 To 122
	        Print "You pressed a lower case key."
	    End Select
	    Sleep 1
Loop Until keycode = 27 '27 is the ascii code for Escape

End
%%

Dans le programme, lorsque vous appuyez sur une touche, la valeur est traduite en un nombre en utilisant la fonction Asc. Puisque ce sera toujours une valeur entière inférieure à 4097 (car les codes de caractères ascii vont de 0 à 255), le format utilisé est **Select Case As Const**.

Le compilateur dcompare la valeur de code de touche avec chacun des **Case** pour voir si le bloc doit s'exécuter. Si le code de touche se situe dans une fourchette particulière, la déclaration d'affichage va exécuter, puis le flux du programme se poursuivra avec la ligne qui suit **End Select**. S'il ne correspond à aucun des **Case**, alors le programme se poursuivra avec la ligne qui suit **End Select**.

Un bloc **Select Case** est généralement la traduction d'un bloc si-ElseIf. Pour illustrer cela, le programme précédent est transformé ci-dessous en bloc **If-ElseIf**.

%%(freebasic)
'Ascii code of key press
Dim As Integer keycode

'Loop until esc key is pressed
Do
	keycode = Asc(Inkey)
	If (keycode >= 48) And (keycode <= 57) Then
	    Print "You pressed a number key."
	Elseif (keycode >= 65) And (keycode <= 90) Then
	    Print "You pressed an upper case letter key."
	Elseif (keycode >= 97) And (keycode <= 122) Then
	    Print "You pressed a lower case key."
	End If
	Sleep 1
Loop Until keycode = 27 '27 is the ascii code for Escape

End
%%

Si vous comparez les deux programmes, vous pouvez voir que la logique est assez similaire, mais le **Select Case** est beaucoup plus lisible et plus compréhensible que le bloc **If-ElseIf**.

