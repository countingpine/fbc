{{fbdoc item="title" value="The Select Case Statement"}}----
//Ecrit par [[WikiRick rdc]]//

Le bloc **Select Case** peut &ecirc;tre consid&eacute;r&eacute;e comme une s&eacute;rie If-ElseIf optimis&eacute;e et fonctionne de la m&ecirc;me mani&egrave;re. Le format standard de **Select Case** peut utiliser n'importe lequel des types de donn&eacute;es standard pour <expression> et le format **Select Case As Const** est optimis&eacute; pour les valeurs enti&egrave;res.

Cet extrait de code montre la syntaxe de **Select Case**e standard. L'expression est g&eacute;n&eacute;ralement une variable qui peut &ecirc;tre de l'un des types de donn&eacute;es standard ou des &eacute;l&eacute;ments individuels d'un type ou d'un tableau.

%%(freebasic)
Select Case <expression>
	Case <list>
		<statement> 
		<statement>
		...
	Case Else
		<statement>
		<statement>
		...
End Select
%%

La clause <list> de l'instruction **Case** peut avoir n'importe lequel des formats suivants.

Case <value>: Value est l'un des types de donn&eacute;es pris en charge ou une &eacute;num&eacute;ration. 
Case <value> To <value>: Sp&eacute;cifie une plage de valeurs.
Case Is <operator> <value>: L'op&eacute;rateur est l'un des op&eacute;rateurs logiques.
Case <value>, <value>, ...: Liste de valeurs s&eacute;par&eacute;es par des virgules.
Case <variable>: Une variable qui contient une valeur.

L'extrait suivant illustre comment ces diff&eacute;rents formats peuvent &ecirc;tre utilis&eacute;s dans un programme.

%%(freebasic)
Case 47

Case 47 To 59

Case Is > 60

Case 47, 48, 53

Case keycode
%%

**Select Case As Const** est une version plus rapide de la d&eacute;claration **Select** visant &agrave; travailler avec des expressions enti&egrave;res dans la plage de 0 &agrave; 4097.

%%(freebasic)
Select Case As Const <integer_expression>
	Case <list>
		<statement> 
		<statement>
		...
	Case Else
		<statement>
		<statement>
		...
End Select
%%

La <list> des formats de d&eacute;claration pour **Select Case As Const** sont limit&eacute;s &agrave; des valeurs ou des &eacute;num&eacute;rations de valeurs. Autrement dit, les expressions op&eacute;rateurs sont pas autoris&eacute;s dans un cas **As Const**.

Quand un bloc **Case** est ex&eacute;cut&eacute;, les instructions suivant le mot-cl&eacute; **Case** jusqu'au mot-cl&eacute; **Case** (ou End Select) suivant seront ex&eacute;cut&eacute;es. Un seul bloc d'instructions dans un **Case** sera ex&eacute;cut&eacute; &agrave; un moment donn&eacute;. Si un **Case Else** est pr&eacute;sent, alors les instructions dans le bloc **Else** seront ex&eacute;cut&eacute;es si aucun **Case** ne correspond &agrave; la portion de la d&eacute;claration **Select**. Le programme suivant illustre l'utilisation du bloc **Select Case**.

%%(freebasic)
'Ascii code of key press
Dim As Integer keycode

'Loop until esc key is pressed
Do
	keycode = Asc(Inkey)
	Select Case As Const keycode
	    Case 48 To 57
	        Print "You pressed a number key."
	    Case 65 To 90
	        Print "You pressed an upper case letter key."
	    Case 97 To 122
	        Print "You pressed a lower case key."
	    End Select
	    Sleep 1
Loop Until keycode = 27 '27 is the ascii code for Escape

End
%%

Dans le programme, lorsque vous appuyez sur une touche, la valeur est traduite en un nombre en utilisant la fonction Asc. Puisque ce sera toujours une valeur enti&egrave;re inf&eacute;rieure &agrave; 4097 (car les codes de caract&egrave;res ascii vont de 0 &agrave; 255), le format utilis&eacute; est **Select Case As Const**.

Le compilateur dcompare la valeur de code de touche avec chacun des **Case** pour voir si le bloc doit s'ex&eacute;cuter. Si le code de touche se situe dans une fourchette particuli&egrave;re, la d&eacute;claration d'affichage va ex&eacute;cuter, puis le flux du programme se poursuivra avec la ligne qui suit **End Select**. S'il ne correspond &agrave; aucun des **Case**, alors le programme se poursuivra avec la ligne qui suit **End Select**.

Un bloc **Select Case** est g&eacute;n&eacute;ralement la traduction d'un bloc si-ElseIf. Pour illustrer cela, le programme pr&eacute;c&eacute;dent est transform&eacute; ci-dessous en bloc **If-ElseIf**.

%%(freebasic)
'Ascii code of key press
Dim As Integer keycode

'Loop until esc key is pressed
Do
	keycode = Asc(Inkey)
	If (keycode >= 48) And (keycode <= 57) Then
	    Print "You pressed a number key."
	Elseif (keycode >= 65) And (keycode <= 90) Then
	    Print "You pressed an upper case letter key."
	Elseif (keycode >= 97) And (keycode <= 122) Then
	    Print "You pressed a lower case key."
	End If
	Sleep 1
Loop Until keycode = 27 '27 is the ascii code for Escape

End
%%

Si vous comparez les deux programmes, vous pouvez voir que la logique est assez similaire, mais le **Select Case** est beaucoup plus lisible et plus compr&eacute;hensible que le bloc **If-ElseIf**.
