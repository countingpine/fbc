{{fbdoc item="title" value="#MACRO...#ENDMACRO"}}----
Directive du pr&eacute;processeur pour d&eacute;finir une macro multi-ligne

{{fbdoc item="syntax"}}##
	**#macro** //macro_name//( [ //parameters// ] )
		//macro body//
	**#endmacro**
	
	**#macro** //macro_name//( [ //parameters//, ] //variadic_parameter//[[KeyPgDots ...]] )
		//macro body//
	**#endmacro**
##
{{fbdoc item="desc"}}
	##**#macro**## d&eacute;finit une fonction comme macro o&ugrave; ##//macro body (corps de la macro)//## peut s'&eacute;tendre sur plusieurs lignes.

Les param&egrave;tres fournis &agrave; la fonction comme macro sont mis &agrave; la place o&ugrave; ils fonctionnent dans ##//macro body//##.  Le ##//macro body//## est plac&eacute; en entier chaque fois que ##//macro_name//## appara&icirc;t dans le code source.  Le nombre de param&egrave;tres transmis &agrave; la macro doit correspondre au nombre de param&egrave;tres dans sa ##**#macro**## d&eacute;finition.
Utiliser ##[[KeyPgDots ...]]## (une ellipse) derri&egrave;re le dernier param&egrave;tre d'une macro permet de cr&eacute;er une macro variadique, voir [[KeyPgPpdefine #define]].
Les conditionnels du pr&eacute;processeur ##[[KeyPgPpifdef #ifdef]]## et ##[[KeyPgPpifndef #ifndef]]## peuvent tester si ##//macro_name//## existe ou n'existe pas.
La directive pr&eacute;processeur ##[[KeyPgPpundef #undef]]## peut annuler la d&eacute;finition d'une macro de fa&ccedil;on &agrave; pouvoir la red&eacute;finir avec une autre d&eacute;finition.
  La substitution de macro peut &ecirc;tre v&eacute;rifi&eacute;e en utilisant les options -g -r. Le compilateur n'effacera pas le fichier .asm interm&eacute;diaire dans lequel le code r&eacute;ellement envoy&eacute; au compilateur peut &ecirc;tre vu &agrave; c&ocirc;t&eacute; de sa traduction en assembleur.
{{fbdoc item="ex"}}

print Print1( "Hello", "World" )

'' macro as an expression value
#macro Print1( a, b )
a + b

#endmacro
Print Print1( "Hello", "World" )
'' Output :
	'' Hello World!
	%%
	%%(freebasic)
	'' macro as multiple statements
#macro Print2( a, b )

Print a;

Print " ";
Print b;
Print "!"

#endmacro
	Print2( "Hello", "World" )

'' Output :
	'' Hello World!
	%%
	{{fbdoc item="diff"}}

- Nouveau pour Freebasic