{{fbdoc item="title" value="POKE"}}----
Assigne une valeur à un emplacement en mémoire.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Poke** ( [[KeyPgByval byval]] //address// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]], [[KeyPgByref byref]] //value// [[KeyPgAs as]] [[KeyPgUbyte ubyte]] )
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Poke** ( //datatype//, [[KeyPgByval byval]] //address// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]], [[KeyPgByref byref]] //value// [[KeyPgAs as]] //datatype// )
##
{{fbdoc item="usage"}}##
	**Poke**( [ //datatype//, ] //address//, //value// )
##
{{fbdoc item="param"}}
	##//datatype//##
		Le type de données à l'adresse indiquée.
	##//address//##
		L'emplacement dans la mémoire où attribuer ##//value//##.
	##//value//##
		La valeur à attribuer.

{{fbdoc item="desc"}}
	##**Poke**## assigne une valeur à un emplacement en mémoire. Est équivalent à:

		##*cast(ubyte ptr, //address//) = //value//##
			ou
		##*cast(//datatype// ptr, //address//) = //value//##

	Quand ##//datatype//## est un type défini par l'utilisateur, ##**Poke**## assigne ##//value//## en utilisant le type ##[[KeyPgOpLet Operator Let]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/memory/poke.bas"}}%%(freebasic)
Dim i As Integer, p As Integer Ptr
p = @i

Poke Integer, p, 420
Print Peek(Integer, p)
%%
	affichera:

%%420
%%

{{fbdoc item="diff"}}
	- Seule la forme octets est prise en charge dans QB.
	- ##DEF SEG## n'est pas nécessaire parce que l'espace d'adressage est "32-bit flat" dans FreeBASIC.

{{fbdoc item="see"}}
	- ##[[KeyPgPeek Peek]]##

{{fbdoc item="back" value="CatPgMemory|Memory Functions"}}

