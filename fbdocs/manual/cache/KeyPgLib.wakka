{{fbdoc item="title" value="LIB"}}----
Sp&eacute;cifie o&ugrave; un sous-programme / une fonction peut trouver une DLL dans le cadre d'une d&eacute;claration

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare Declare]] { [[KeyPgSub Sub]] | [[KeyPgFunction Function]] } //proc_name// **Lib** "//dllname//" [[KeyPgAlias Alias]] "//symbol_name//" ( //arguments list// ) [[KeyPgAs As]] //return_type//
	
	[[KeyPgExternBlock extern]] "//mangling//" lib "//libname//"
		//declarative statements//
	end [[KeyPgExternBlock extern]]
	
	[[KeyPgType type]] //T//
		[[KeyPgAs as]] [[KeyPgInteger integer]] dummy
		[[KeyPgDeclare declare]] [[KeyPgConstructor constructor]] **lib** "//libname//" [ [[KeyPgAlias alias]] "//symbol_name//" ] ( //arguments list// )
	end [[KeyPgType type]]

##
{{fbdoc item="desc"}}
	Dans les d&eacute;clarations ##[[KeyPgSub Sub]]## et ##[[KeyPgFunction Function]]##, ##**Lib**## indique la "dll" contenant la fonction. Les biblioth&egrave;ques sp&eacute;cifi&eacute;es de cette mani&egrave;re sont li&eacute;es, comme si elles avaient &eacute;t&eacute; sp&eacute;cifi&eacute;es avec [[KeyPgInclib #inclib]].
	
	##**Lib**## peut aussi &ecirc;tre utilis&eacute; avec des [[KeyPgExternBlock blocs Extern ... End Extern]] pour sp&eacute;cifier ##**Lib**## pour toutes les d&eacute;clarations internes.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/mydll.bas"}}%%(freebasic)
'' mydll.bas
'' compile with:
''   fbc -dll mydll.bas

Public Function GetValue() As Integer Export
  Function = &h1234
End Function
%%

{{fbdoc item="filename" value="examples/manual/procs/lib.bas"}}%%(freebasic)
Declare Function GetValue Lib "mydll" () As Integer

Print "GetValue = &h"; Hex(GetValue())

' Expected Output :
' GetValue = &h1234
%%

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgInclib #inclib]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}