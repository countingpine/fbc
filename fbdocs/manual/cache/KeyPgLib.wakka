{{fbdoc item="title" value="LIB"}}----
Spécifie où un sous-programme / une fonction peut trouver une DLL dans le cadre d'une déclaration

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] { [[KeyPgSub sub]] | [[KeyPgFunction function]] } //proc_name// **Lib** "//dllname//" [[KeyPgAlias alias]] "//symbol_name//" ( //arguments list// ) [[KeyPgAs as]] //return_type//
	
	[[KeyPgExternBlock extern]] "//mangling//" lib "//libname//"
		//declarative statements//
	end [[KeyPgExternBlock extern]]
	
	[[KeyPgType type]] //T//
		[[KeyPgAs as]] [[KeyPgInteger integer]] dummy
		[[KeyPgDeclare declare]] [[KeyPgConstructor constructor]] **lib** "//libname//" [ [[KeyPgAlias alias]] "//symbol_name//" ] ( //arguments list// )
	end [[KeyPgType type]]

##
{{fbdoc item="desc"}}
	Dans les déclarations ##[[KeyPgSub Sub]]## et ##[[KeyPgFunction Function]]##, ##**Lib**## indique la "dll" contenant la fonction. Les bibliothèques spécifiées de cette manière sont liées, comme si elles avaient été spécifiées avec [[KeyPgInclib #inclib]].
	
	##**Lib**## peut aussi être utilisé avec des [[KeyPgExternBlock blocs Extern ... End Extern]] pour spécifier ##**Lib**## pour toutes les déclarations internes.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/mydll.bas"}}%%(freebasic)
'' mydll.bas
'' compile with:
''   fbc -dll mydll.bas

Public Function GetValue() As Integer Export
  Function = &h1234
End Function
%%

{{fbdoc item="filename" value="examples/manual/procs/lib.bas"}}%%(freebasic)
Declare Function GetValue Lib "mydll" () As Integer

Print "GetValue = &h"; Hex(GetValue())

' Expected Output :
' GetValue = &h1234
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgInclib #inclib]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}

