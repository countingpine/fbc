{{fbdoc item="title" value="RANDOM"}}----
Spécifie le fichier ou le périphérique à ouvrir en mode binaire

{{fbdoc item="syntax"}}##
	[[KeyPgOpen Open]] //filename// for **Random** [[[KeyPgAccess Access]] //access_type//] [[[KeyPgLock Lock]] //lock_type//] as [#]//filenum// [Len = //record_length//]
##
{{fbdoc item="param"}}
	##//filename//##
		nom du fichier à ouvrir
	##//access_type//##
		indique si le fichier doit être lu, écrit ou les deux
	##//lock_type//##
		verrouillage à utiliser quand le fichier est ouvert
	##//filenum//##
		un numéro inutilisé de fichier pour l'associer au fichier ouvert
	##//record_length//##
		la taille des enregistrements utilisée pour le fichier

{{fbdoc item="desc"}}
	Ouvre un fichier ou un périphérique en lecture et/ou écriture de données binaires dans le fichier donné ##//filenum//##, avec des enregistrements de taille ##//record_length//##.
	Si le fichier n'existe pas, un nouveau fichier sera créé, sinon toutes les données existantes dans le fichier sont préservées par ##[[KeyPgOpen Open]]##.  Le pointeur du fichier est initialisé par ##[[KeyPgOpen Open]]## au début du fichier, à l'enregistrement numéro ##1##. Les opérations sur le fichier déplace la position par pas de ##//record_length//## octets.
	Ce mode de fichier utilise une variable tampon de ##[[KeyPgType Type]]## défini par l'utilisateur pour lire/écrire des enregistrements complets dans le fichier. La variable tampon utilisée peut inclure plusieurs champs.
	Les données sont sauvegardées en mode binaire, dans le même format interne utilisé par ""FreeBASIC"", par le biais de ##[[KeyPgGetfileio Get #]]## et ##[[KeyPgPutfileio Put #]]##.
	
	##//filename//## doit être une expression chaîne correspondant à un nom de fichier légal dans le système d'exploitation cible, sans jokers de remplacement. Le fichier sera recherché dans le répertoire courant, sauf si ##//filename//## contient un chemin.
			
	##//Access_type//## - par défaut le mode ##**Random**## permet à la fois lire et écrire dans le fichier, sauf si un type d'##[[KeyPgAccess Access]]## est spécifié, il doit être l'un de ceux-ci:
		- ##**Read**## - le fichier est ouvert en lecture seulement
		- ##**Write**## - le fichier est ouvert en écriture seulement
		- ##**Read Write**## - le fichier est ouvert en lecture et écriture (par défaut)

	##//Lock_type//## indique la façon dont le fichier est verrouillé pour les autres processus (utilisateurs ou fils), il est l'un de ceux-ci:
		- ##**Shared**## - Le fichier peut être librement consulté par d'autres processus     
		- ##**Lock Read**## - Le fichier ne peut pas être ouvert en même temps pour la lecture
		- ##**Lock Write**## - Le fichier ne peut pas être ouvert en même temps pour l'écriture
		- ##**Lock Read Write**## - Le fichier ne peut pas être ouvert simultanément par d'autres processus.
		Si aucun type de verrouillage n'est indiqué, le fichier sera ##**Shared**## pour les autres "threads" du programme et ##**Lock Read Write**## pour les autres programmes.
		##[[KeyPgLock Lock]]## et ##[[KeyPgUnlock Unlock]]## peuvent être utilisés pour restreindre temporairement l'accès à des parties d'un fichier.

	##//filenum//## est un numéro de fichier valide (dans la plage ##1..255##) non utilisé par un autre fichier actuellement ouvert. Le numéro de fichier identifie celui-ci pour le reste des opérations. Un numéro de fichier libre peut être trouvé avec la fonction ##[[KeyPgFreefile FreeFile]]##.
	
	##//record_length//## est le nombre d'octets que le pointeur du fichier va parcourir pour chaque  ##[[KeyPgGetfileio Get]]## et ##[[KeyPgPutfileio Put]]##, il doit correspondre à la taille de la variable tampon utilisée lors d'un ##[[KeyPgGetfileio Get]]## et ##[[KeyPgPutfileio Put]]## de données. Si omis, sa valeur par défaut est de ##128##.

	{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/math/random.bas"}}%%(freebasic)
type UDT
	slen as byte
	sdata as string * 10
end type

dim i as integer
dim s as string
dim u as UDT

dim ff as ubyte
dim fpos as integer

ff = freefile
fpos = 10

open "testfile" for random as #ff len=sizeof(UDT)
for i = 1 to 9
	read s
	u = type( len(s), s )
	put #ff, i, u
next

do
	input "Record number: ", i
	if i < 1 or i > 9 then exit do
	get #1, i, u
	print i & ": " & left( u.sdata, u.slen )
	print
loop

close #ff
end 0

data ".,-?!'@:", "abc",      "def"
data "ghi",      "jkl",      "mno"
data "pqrs",     "tuv",      "wxyz"
%%

{{fbdoc item="diff"}}
	- Dans QB, les chaînes de contenu d'exécution de type défini par l'utilisateur ne sont pas implémentées dans ""FreeBASIC"".
	- Le mot-clef ##[[KeyPgField Field]]## ne peut être utilisé qu'avec ##[[KeyPgType Type]]## pour spécifier l'empaquetage du type défini par l'utilisateur 

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgBinary Binary]]##
	- ##[[KeyPgGetfileio Get #]]##
	- ##[[KeyPgPutfileio Put #]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}

