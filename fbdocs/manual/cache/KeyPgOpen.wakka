{{fbdoc item="title" value="OPEN"}}----
Ouvre un fichier sur le disque pour des op&eacute;rations de lecture/&eacute;criture

{{fbdoc item="syntax"}}##
	**Open** //filename// **For** **[[KeyPgInputfilemode Input]]** [//encoding_type//] [//lock_type//] **As** [**#**]//filenumber//
	**Open** //filename// **For** **[[KeyPgOutput Output]]** [//encoding_type//] [//lock_type//] **As** [**#**]//filenumber//
	**Open** //filename// **For** **[[KeyPgAppend Append]]** [//encoding_type//] [//lock_type//] **As** [**#**]//filenumber//

	**Open** //filename// **For** **[[KeyPgBinary Binary]]** [//access_type//] [//lock_type//] **As** [**#**]//filenumber//
	**Open** //filename// **For** **[[KeyPgRandom Random]]** [//access_type//] [//lock_type//] **As** [**#**]//filenumber// [**Len =** //record_length//]
##
{{fbdoc item="usage"}}##
	//result// = **Open** (//filename//, **For** {**[[KeyPgInputfilemode Input]]**|**[[KeyPgOutput Output]]**|**[[KeyPgAppend Append]]**}, **As** //filenumber// )
		##//ou//##
	//result// = **Open** (//filename//, **For** **[[KeyPgBinary Binary]]**, **[[KeyPgAccess Access]]** {**Read**|**Write**}, **As** //filenumber// )
		##//ou//##
	//result// = **Open** (//filename//, **For** **[[KeyPgRandom Random]]**, **[[KeyPgAccess Access]]** {**Read**|**Write**}, **As** //filenumber// [, **Len = ** //record_length//] )
		##//ou//##
	**Open** //filename// **For** {**[[KeyPgInputfilemode Input]]**|**[[KeyPgOutput Output]]**|**[[KeyPgAppend Append]]**} **As** //filenumber//
		##//ou//##
	**Open** //filename// **For** **[[KeyPgBinary Binary]]** **[[KeyPgAccess Access]]** {**Read**|**Write**} **As** //filenumber//
		##//ou//##
	**Open** //filename// **For** **[[KeyPgRandom Random]]** **[[KeyPgAccess Access]]** {**Read**|**Write**} **As** //filenumber// [**Len = ** //record_length//]

##
{{fbdoc item="param"}}
	##//filename//##
		Une cha&icirc;ne de caract&egrave;res correspondant au nom du fichier &agrave; ouvrir sur le disque. les chemins de fichiers relatifs le sont par rapport au r&eacute;pertoire courant (voir ##[[KeyPgCurdir CurDir]]##).
	##//encoding_type//##
		Le codage &agrave; utiliser lors de la lecture ou l'&eacute;criture du texte:
			- ##Encodage "ascii"## //(l'encodage ASCII est utilis&eacute;, c'est celui par d&eacute;faut)//
			- ##Encoding "utf8"## //(l'encodage 8-bit Unicode est utilis&eacute;)//
			- ##Encoding "utf16"## //(l'encodage 16-bit Unicode est utilis&eacute;)//
			- ##Encoding "utf32"## //(l'encodage 32-bit Unicode est utilis&eacute;)//
	##//access_type//##
		Le type d'acc&egrave;s demand&eacute; par le processus appelant.
			- ##Acc&egrave;s ## [##Read##] [##Write##] // (lire et &eacute;crire peuvent &ecirc;tre utilis&eacute;s ensemble, c'est la valeur par d&eacute;faut)//
	##//lock_type//##
		Impose des restrictions sur l'acc&egrave;s aux fichiers disque &agrave; partir d'autres processus ("threads" ou programmes):
			- ##Shared## //(le fichier peut &ecirc;tre librement consult&eacute; par d'autres processus)//
			- ##Lock## [##Read##] [##Write##] //(l'acc&egrave;s en lecture et &eacute;criture peut &ecirc;tre refus&eacute; &agrave; d'autres processus)//
	##//filenumber//##
		Un num&eacute;ro de fichier disponible, qui peut &ecirc;tre trouv&eacute; avec ##[[KeyPgFreefile FreeFile]]##, pour se lier au fichier sur le disque.
	##//record_length//##
		La taille, en octets, de chaque enregistrement lu ou &eacute;crit dans le fichier disque. La valeur par d&eacute;faut est 128.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Dans la premi&egrave;re utilisation, ##**Open**## retourne z&eacute;ro (##0##) si succ&egrave;s et une valeur diff&eacute;rente de z&eacute;ro dans les autres cas.

{{fbdoc item="desc"}}
	Ouvre un fichier sur le disque en lecture et/ou en &eacute;criture. Le num&eacute;ro de fichier ##//file_number//## est li&eacute; au fichier sur le disque, pour une utilisation dans les op&eacute;rations ult&eacute;rieures sur les fichiers, comme ##[[KeyPgInputPp Input #]]## et ##[[KeyPgLock Lock]]##. Le premier num&eacute;ro de fichier disponible peut &ecirc;tre r&eacute;cup&eacute;r&eacute; avec ##[[KeyPgFreefile FreeFile]]##.

	Les modes d'ouverture de fichiers ##[[KeyPgInputfilemode Input]]##, ##[[KeyPgOutput Output]]## et ##[[KeyPgAppend Append]]## en entr&eacute;e/sortie s&eacute;quencielle de texte, sont utiles pour la lecture ou l'&eacute;criture de fichiers texte brut. Quand le mode ##[[KeyPgInputfilemode Input]]## est sp&eacute;cifi&eacute;, seules les op&eacute;rations de lecture de fichiers sont utilisables, comme ##[[KeyPgLineinput Line Input #]]## et ##[[KeyPgGetfileio Get #]]##. Si le fichier disque n'existe pas une erreur d'ex&eacute;cution sera produite. Quand le mode ##[[KeyPgOutput Output]]## est sp&eacute;cifi&eacute;, seules les op&eacute;rations d'&eacute;criture de fichiers sont utilisables, comme ##[[KeyPgPrintPp Print #]]## et ##[[KeyPgPutfileio Put #]]##. Si le fichier n'existe pas sur le disque, il est cr&eacute;&eacute; vide. Le mode ##[[KeyPgAppend Append]]## est comme le mode ##[[KeyPgOutput Output]]##, sauf que les op&eacute;rations d'&eacute;criture commenceront &agrave; la fin du fichier disque, s'il existe.

	Les modes d'ouverture de fichiers ##[[KeyPgInputfilemode Input]]##, ##[[KeyPgOutput Output]]## et ##[[KeyPgAppend Append]]## permettent &eacute;galement la s&eacute;lection d'un codage de caract&egrave;res &agrave; utiliser lors de la lecture ou l'&eacute;criture de texte dans le fichier disque. Un codage ASCII ou Unicode peut &ecirc;tre sp&eacute;cifi&eacute; (voir ci-dessus la description du param&egrave;tre ##//encoding_type//##).

	Les modes d'ouverture de fichiers ##[[KeyPgBinary Binary]]## et ##[[KeyPgRandom Random]]## permettent un acc&egrave;s al&eacute;atoire (random-access) en lecture ou &eacute;criture de donn&eacute;es binaires de taille arbitraire. Le mode ##[[KeyPgBinary Binary]]## permet la lecture ou l'&eacute;criture de valeurs de donn&eacute;es de type simple, comme ##[[KeyPgByte Byte (=octet)]]## ou ##[[KeyPgLongint LongInt (=entier long)]]##, en utilisant des op&eacute;rations de lecture ou d'&eacute;criture binaire, comme ##[[KeyPgGetfileio Get #]]##. ##[[KeyPgLoc LOC]]## et ##[[KeyPgSeekreturn Seek]]## sont des m&eacute;thodes utilis&eacute;es pour lire et &eacute;crire &agrave; des emplacements arbitraires dans un fichier disque. Le mode ##[[KeyPgRandom Random]]## est similaire &agrave; ##[[KeyPgBinary Binary]]##, sauf que les op&eacute;rations d'entr&eacute;e/sortie utilisent toujours une taille constante de donn&eacute;es lors d'une lecture ou d'une &eacute;criture.

	Par d&eacute;faut, les modes ##[[KeyPgBinary Binary]]## et ##[[KeyPgRandom Random]]## permettent les deux op&eacute;rations de lecture et d'&eacute;criture sur le fichier ouvert sur le disque, mais cela peut &ecirc;tre chang&eacute; en sp&eacute;cifiant un type d'acc&egrave;s (voir ci-dessus la description pour le param&egrave;tre ##//access_type//##).

	Pour tout mode, l'acc&egrave;s au fichier ouvert sur le disque peut &ecirc;tre restreint ou accord&eacute; &agrave; d'autres "threads" ou des programmes en sp&eacute;cifiant un type de verrou (voir ci-dessus la description pour le param&egrave;tre ##//lock_type//##). Si aucun type de verrou n'est sp&eacute;cifi&eacute;, les autres "threads" du programme actuel peuvent librement ouvrir le fichier sur le disque (##Shared##), tandis que d'autres programmes ne peuvent pas (##Lock Read Write##). ##[[KeyPgLock Lock]]## et ##[[KeyPgUnlock Unlock]]## peut &ecirc;tre utilis&eacute;s pour restreindre provisoirement l'acc&egrave;s &agrave; des parties d'un fichier.

	Le code d'erreur renvoy&eacute; par ##**Open**## peut &ecirc;tre v&eacute;rifi&eacute; &agrave; l'aide de ##[[KeyPgErr Err]]## dans la ligne suivante. La version fonction de ##**Open**## retourne directement le code d'erreur sous forme d'un entier. 

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/open.bas"}}%%(freebasic)
' Create a string and fill it.
Dim buffer As String, f as integer
buffer = "Hello World within a file."

' Find the first free file number.
f = Freefile

' Open the file "file.ext" for binary usage, using the file number "f".
Open "file.ext" For Binary As #f
If Err>0 then Print "Error opening the file":end

' Place our string inside the file, using number "f".
Put #f, , buffer

' Close all open files.  
Close

' End the program. (Check the file "file.ext" upon running to see the output.)
End
%%

{{fbdoc item="filename" value="examples/manual/fileio/opencom.bas"}}%%(freebasic)
'OPEN A COM PORT
Open Com "COM1:9600,N,8,1" As #1
if Err>0 then print "The port could not be opened."

'COM1, 9600 BAUD, NO PARITY BIT, EIGHT DATA BITS, ONE STOP BIT
%%
{{fbdoc item="filename" value="examples/manual/fileio/openfunc.bas"}}%%(freebasic)
'function version of OPEN
If Open("file.ext" For Binary Access Read As #1) = 0 Then

	Print "Successfully opened file"

	'' ...

	close #1

else

	Print "Error opening file"

End If
%%

{{fbdoc item="target"}}
	- Linux n&eacute;cessite que la casse de la police de ##//filename//## corresponde au nom r&eacute;el du fichier. Windows et DOS ne sont pas sensibles &agrave; la casse. 
	- Les s&eacute;parateurs de chemin de Linux sont des barres obliques ##/##. Windows utilise les barres obliques vers l'arri&egrave;re ##\## mais il permet les barres obliques .  DOS utilise les barres obliques inverses ##\##. 
	- Sous Windows, un num&eacute;ro de fichier utilis&eacute; dans une biblioth&egrave;que de liens dynamiques n'est pas le m&ecirc;me qu'un num&eacute;ro de fichier identique utilis&eacute; dans le programme principal.  Les num&eacute;ros de dossier ne peut &ecirc;tre pass&eacute;s ou renvoy&eacute;s, puis utilis&eacute;s entre une DLL et un fichier ex&eacute;cutable.

{{fbdoc item="diff"}}
	<li>L'utilisation des noms de p&eacute;riph&eacute;riques MS-DOS pour ouvrir des flots ou des p&eacute;riph&eacute;riques (##"LPT:"##, ##"SCR:"##, etc.) est permise seulement dans le dialecte //[[CompilerOptlang -lang qb]]//; pour les autres modes FreeBasic de nouveaux mots-cl&eacute;s composites doivent &ecirc;tre utilis&eacute;s: voir ##[[KeyPgOpenCom Open Com]]##,  ##[[KeyPgOpenCons Open Cons]]##,  ##[[KeyPgOpenErr Open Err]]##,  ##[[KeyPgOpenPipe Open Pipe]]##,  ##[[KeyPgOpenLpt Open Lpt]]##,  ##[[KeyPgOpenScrn Open Scrn]]##.
	- ##**Open**## peut &ecirc;tre appel&eacute; comme une proc&eacute;dure qui retourne un code d'erreur.

{{fbdoc item="lang"}}
	- Le dialecte //[[CompilerOptlang -lang qb]]// permet la syntaxe du style GW-BASIC ##OPEN mode_string, #filenum, filename [length]## avec mode_string qui peut &ecirc;tre ##"I"## pour entr&eacute;e, ##"O"## pour sortie, ##"A"## pour ajout, ##"R"## pour al&eacute;atoire (random), ##"B"## pour binaire. 

{{fbdoc item="see"}}
	- ##[[KeyPgErr Err]]## et [[TblRuntimeErrors Codes des erreurs de fonctionnement]]
	- ##[[KeyPgClose Close]]##
	- ##[[KeyPgFreefile Freefile]]##
	- ##[[KeyPgOpenCons Open Cons]]##, ##[[KeyPgOpenErr Open Err]]##, ##[[KeyPgOpenPipe Open Pipe]]##, ##[[KeyPgOpenLpt Open Lpt]]##, ##[[KeyPgOpenCom Open Com]]##, ##[[KeyPgOpenScrn Open Scrn]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}
   
