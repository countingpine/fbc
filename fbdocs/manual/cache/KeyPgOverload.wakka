{{fbdoc item="title" value="OVERLOAD"}}----
Indique que le nom d'une proc&eacute;dure peut &ecirc;tre surcharg&eacute;

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare Declare]] [[[KeyPgStatic Static]]] [[KeyPgSub Sub]] //procedure_name// **Overload** [[[KeyPgCdecl cdecl]]|[[KeyPgStdcall stdcall]]|[[KeyPgPascal pascal]]] [[[KeyPgAlias Alias]] //"external_name"//] [([//parameter_list//])] [[[KeyPgModuleConstructor Constructor]] [//priority//]] [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]

	[[KeyPgDeclare Declare]] [[[KeyPgStatic Static]]] [[KeyPgFunction Function]] //procedure_name// **Overload** [[[KeyPgCdecl cdecl]]|[[KeyPgStdcall stdcall]]|[[KeyPgPascal pascal]]] [[[KeyPgAlias Alias]] //"external_name"//] [([//parameter_list//])] [[KeyPgAs As]] //return_type// [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]

	[[[KeyPgPublic Public]]|[[KeyPgPrivate Private]]] [[KeyPgSub Sub]] //procedure_name// **Overload** [[[KeyPgCdecl cdecl]]|[[KeyPgStdcall stdcall]]|[[KeyPgPascal pascal]]] [[[KeyPgAlias Alias]] //"external_name"//] [([//parameter_list//])] [[[KeyPgModuleConstructor Constructor]] [//priority//]] [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]
		//..procedure body..//
	[[KeyPgEnd End]] [[KeyPgSub Sub]]
	
	[[[KeyPgPublic Public]]|[[KeyPgPrivate Private]]] [[KeyPgFunction Function]] //procedure_name// **Overload** [[[KeyPgCdecl cdecl]]|[[KeyPgStdcall stdcall]]|[[KeyPgPascal pascal]]] [[[KeyPgAlias Alias]] //"external_name"//] [([//parameter_list//])] [[KeyPgAs As]] //return_type//  [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]
		//..procedure body..//
	[[KeyPgEnd End]] [[KeyPgFunction Function]]
##
{{fbdoc item="desc"}}
	Dans les d&eacute;clarations de proc&eacute;dure, **Overload** permet aux noms de proc&eacute;dure d'&ecirc;tre surcharg&eacute;s, c'est &agrave; dire, d'autres proc&eacute;dures peuvent alors &ecirc;tre d&eacute;clar&eacute;es avec le m&ecirc;me nom si leurs listes de param&egrave;tres sont uniques. Deux listes de param&egrave;tres sont uniques si elles contiennent un certain nombre de param&egrave;tres diff&eacute;rents ou ont des param&egrave;tres de types diff&eacute;rents. Notez que cela signifie que deux ou plusieurs proc&eacute;dures, si elles ne diff&egrave;rent que dans leur type de retour, ne peuvent &ecirc;tre d&eacute;clar&eacute;es avec le m&ecirc;me nom.

	Une fois qu'un nom de proc&eacute;dure a &eacute;t&eacute; d&eacute;clar&eacute; surcharg&eacute;, de nouvelles d&eacute;clarations en utilisant le nom n'ont pas &agrave; pr&eacute;ciser *Overload*, mais il est autoris&eacute;.

	**Overload** n'est pas n&eacute;cessaire dans les d&eacute;clarations de membre de proc&eacute;dure, car ils sont toujours implicitement surcharg&eacute;s.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/overload.bas"}}%%(freebasic)
DECLARE FUNCTION SUM OVERLOAD (A AS INTEGER,B AS INTEGER) AS INTEGER
DECLARE FUNCTION SUM OVERLOAD (A AS SINGLE,B AS SINGLE) AS SINGLE
FUNCTION SUM  (A AS INTEGER,B AS INTEGER) AS INTEGER
   FUNCTION=A+B
END FUNCTION   
FUNCTION SUM  (A AS SINGLE,B AS SINGLE) AS SINGLE
   FUNCTION=A+B
END FUNCTION   
DIM AS INTEGER A,B
DIM AS SINGLE A1,B1
A=2
B=3
A1=2.
b1=3.
PRINT SUM(A,B)
PRINT SUM (A1,B1)
SLEEP
%%

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgSub Sub]]##, ##[[KeyPgFunction Function]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}