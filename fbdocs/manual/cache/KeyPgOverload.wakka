{{fbdoc item="title" value="OVERLOAD"}}----
Indique que le nom d'une procédure peut être surchargé

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare Declare]] [[[KeyPgStatic Static]]] [[KeyPgSub Sub]] //procedure_name// **Overload** [[[KeyPgCdecl Cdecl]]|[[KeyPgStdcall Stdcall]]|[[KeyPgPascal Pascal]]] [[[KeyPgAlias Alias]] //"""external_name"""//] [([//parameter_list//])] [[[KeyPgModuleConstructor Constructor]] [//priority//]] [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]

	[[KeyPgDeclare Declare]] [[[KeyPgStatic Static]]] [[KeyPgFunction Function]] //procedure_name// **Overload** [[[KeyPgCdecl Cdecl]]|[[KeyPgStdcall Stdcall]]|[[KeyPgPascal Pascal]]] [[[KeyPgAlias Alias]] //"""external_name"""//] [([//parameter_list//])] [[KeyPgAs as]] //return_type// [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]

	[[[KeyPgPublic Public]]|[[KeyPgPrivate Private]]] [[KeyPgSub Sub]] //procedure_name// **Overload** [[[KeyPgCdecl Cdecl]]|[[KeyPgStdcall Stdcall]]|[[KeyPgPascal Pascal]]] [[[KeyPgAlias Alias]] //"""external_name"""//] [([//parameter_list//])] [[[KeyPgModuleConstructor Constructor]] [//priority//]] [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]
		//..procedure body..//
	[[KeyPgEnd End]] [[KeyPgSub Sub]]
	
	[[[KeyPgPublic Public]]|[[KeyPgPrivate Private]]] [[KeyPgFunction Function]] //procedure_name// **Overload** [[[KeyPgCdecl Cdecl]]|[[KeyPgStdcall Stdcall]]|[[KeyPgPascal Pascal]]] [[[KeyPgAlias Alias]] //"""external_name"""//] [([//parameter_list//])] [[KeyPgAs as]] //return_type//  [[[KeyPgStatic Static]]] [[[KeyPgExport Export]]]
		//..procedure body..//
	[[KeyPgEnd End]] [[KeyPgFunction Function]]
##
{{fbdoc item="desc"}}
	Dans les déclarations de procédure, ##**Overload**## permet aux noms de procédure d'être surchargés, c'est à dire, d'autres procédures peuvent alors être déclarées avec le même nom si leurs listes de paramètres sont uniques. Deux listes de paramètres sont uniques si elles contiennent un certain nombre de paramètres différents ou ont des paramètres de types différents. Notez que cela signifie que deux ou plusieurs procédures, si elles ne diffèrent que dans leur type de retour, ne peuvent être déclarées avec le même nom.

	Une fois qu'un nom de procédure a été déclaré surchargé, de nouvelles déclarations en utilisant le nom n'ont pas à préciser ##**Overload**##, mais il est autorisé.

	##**Overload**## n'est pas nécessaire dans les déclarations de membre de procédure, car ils sont toujours implicitement surchargés.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/overload.bas"}}%%(freebasic)
DECLARE FUNCTION SUM OVERLOAD (A AS INTEGER,B AS INTEGER) AS INTEGER
DECLARE FUNCTION SUM OVERLOAD (A AS SINGLE,B AS SINGLE) AS SINGLE
FUNCTION SUM  (A AS INTEGER,B AS INTEGER) AS INTEGER
   FUNCTION=A+B
END FUNCTION   
FUNCTION SUM  (A AS SINGLE,B AS SINGLE) AS SINGLE
   FUNCTION=A+B
END FUNCTION   
DIM AS INTEGER A,B
DIM AS SINGLE A1,B1
A=2
B=3
A1=2.
b1=3.
PRINT SUM(A,B)
PRINT SUM (A1,B1)
SLEEP
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgSub Sub]]##, ##[[KeyPgFunction Function]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}