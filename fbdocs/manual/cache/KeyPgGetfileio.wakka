{{fbdoc item="title" value="GET (File I/O)"}}----
Lit les données d'un fichier vers un tampon

{{fbdoc item="syntax"}}##
	**Get** #//filenum// [[KeyPgAs As]] [[KeyPgInteger Integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], [[KeyPgByref ByRef]] //data// [[KeyPgAs As]] [[KeyPgAny Any]] [, [//amount// [[KeyPgAs As]] [[KeyPgInteger Integer]]] [, [[KeyPgByref ByRef]] //bytesread// [[KeyPgAs As]] [[KeyPgUinteger Uinteger]]] ]
	**Get** #//filenum// [[KeyPgAs As]] [[KeyPgInteger Integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], //data// [[KeyPgAs As]] [[KeyPgString String]] [, , [[KeyPgByref ByRef]] //bytesread// [[KeyPgAs As]] [[KeyPgUinteger Uinteger]] ]
	**Get** #//filenum// [[KeyPgAs As]] [[KeyPgInteger Integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], //data()// [[KeyPgAs As]] [[KeyPgAny Any]] [, , [[KeyPgByref ByRef]] //bytesread// [[KeyPgAs As]] [[KeyPgUinteger Uinteger]] ]
##
{{fbdoc item="usage"}}##
	**Get** #//filenum//, //position//, //data// [, [//amount//] [, //bytesread// ] ]
	varres = **Get** (#//filenum//, //position//, //data// [, [//amount//] [, //bytesread// ] ] )
##
{{fbdoc item="param"}}
	##//filenum//##
		La valeur passée à ##[[KeyPgOpen Open]]## quand le fichier a été ouvert.
	##//position//##
		La position où la lecture doit commencer. Si le fichier a été ouvert ##[[KeyPgRandom For Random]]##, la position est en enregistrements; autrement, elle est en octets. Si omise, la lecture commence à la position actuelle du pointeur.  La position est basée sur 1: c'est à dire que le premier enregistrement ou octet est à la position ##1##.
		Si ##//position//## est omise ou zéro (##0##), la lecture du fichier commencera à la position courante dans le fichier.
	##//data//##
		Le tampon où les données sont écrites. Il peut être une variable numérique, une chaîne, un tableau, un type défini par l'utilisateur ou un pointeur déréférencé. L'opération de lecture va essayer de remplir complètement la variable, à moins que ##[[KeyPgEof EOF]]## ne soit atteint.
		Lors de l'utilisation de tableaux, ##//data//## doit être suivi par une paire de parenthèses vides: "##()##".  ##**Get**## lira les données pour toutes les valeurs dans le tableau.  ##//amount//## (quantité) n'est pas autorisé.
		Lors de l'utilisation de ##[[KeyPgString String]]##s, le nombre d'octets lus est le même que le nombre d'octets dans les données de chaîne. ##//amount//## (quantité) n'est pas autorisé.
		Note: Si vous voulez lire des valeurs dans une mémoire tampon, vous NE devez PAS passer un pointeur vers la mémoire tampon; au lieu de cela vous devez passer la première variable dans la mémoire tampon.  (Cela peut être fait par le déréférencement du pointeur avec ##[[KeyPgOpValueOf Operator * (Value of)]]##.)  ##**Get**##  comprendra automatiquement que le reste de la mémoire tampon se poursuit après la première variable..  Si vous passez un pointeur directement, alors ##**Get**## écrira sur la variable et non à l'emplacement mémoire vers lequel elle pointe.
	##//amount//##
		##**Get**## lit ##//amount//## variables consécutives du fichier vers la mémoire, c'est à dire qu'il lit ##(//amount// * [[KeyPgSizeof Sizeof]](//data//) )## octets ou données depuis le fichier vers la mémoire commençant à la position ##//data//##.  Si ##//amount//## est omis il sera de ##1## par défaut, ce qui signifie que ##**Get**## ne lira qu'une seule variable.
	##//bytesread//##
		Une variable entière non signée qui contiendra le nombre d'octets lus avec succès à partir du fichier.

{{fbdoc item="ret"}}
	Zéro (##0##) si succès; non-zéro si erreur. Note: Si ##[[KeyPgEof EOF]]## (End Of File) est atteint pendant la lecture, ##**Get**## retournera "succès".  La quantité d'octets réellement lus peut être vérifiée en passant une variable ##//bytesread//##.

{{fbdoc item="desc"}}
	Lit les données binaires à partir d'un fichier vers une variable tampon

	##**Get**## peut être utilisé comme une fonction, et retournera ##0## si succès ou un code d'erreur si échec.	

	Pour les fichiers ouverts en mode ##[[KeyPgRandom Random]]##, la taille en octets des données à lire doit correspondre à la taille d'enregistrement spécifiée.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/get.bas"}}%%(freebasic)
dim shared f as integer

sub get_integer()

	dim buffer as integer ' Integer variable

	' Read an Integer (4 bytes) from the file into buffer, using file number "f".
	get #f, , buffer

	' print out result
	print buffer
	print

end sub

sub get_array()

	dim an_array(0 to 10-1) as integer ' array of Integers

	' Read 10 Integers (10 * 4 = 40 bytes) from the file into an_array, using file number "f".
	get #f, , an_array()

	' print out result
	for i as integer = 0 to 10-1
	    print an_array(i)
	next
	print

end sub

sub get_mem

	dim pmem as integer ptr

	' allocate memory for 5 Integers
	pmem = allocate(5 * sizeof(integer))

	' Read 5 integers (5 * 4 = 20 bytes) from the file into allocated memory
	get #f, , *pmem, 5 ' Note pmem must be dereferenced (*pmem, or pmem[0])

	' print out result using [] Pointer Indexing
	for i as integer = 0 to 5-1
	    print pmem[i]
	next
	print

	' free pointer memory to prevent memory leak
	deallocate pmem

end sub

' Find the first free file file number.
f = freefile

' Open the file "file.ext" for binary usage, using the file number "f".
open "file.ext" for binary as #f

  get_integer()

  get_array()

  get_mem()

' Close the file.  
close #f
%%

{{fbdoc item="filename" value="examples/manual/fileio/get-file.bas"}}%%(freebasic)
' Load a small text file to a string

Function LoadFile(byref filename As string) As String
	
	Dim h As Integer
	Dim txt As String
	
	h = FreeFile
	
	if Open( filename For Binary Access Read As #h ) <> 0 then return ""
	
	If Lof(h) > 0 Then
	    
	    txt = String(Lof(h), 0)
	    if Get( #h, ,txt ) <> 0 then txt = ""
	    
	End If
	
	Close #h
	
	Return txt
	
End Function

Dim ExampleStr As String
ExampleStr = LoadFile("smallfile.txt")
Print ExampleStr
%%

{{fbdoc item="diff"}}
	- Dans FB, ##**Get**## peut lire des tableaux pleins comme dans VB ou, alternativement, lire un multiple de la taille des données dans la mémoire.
	- ##**Get**## peut être utilisé comme une fonction dans FB, pour obtenir le code succès/erreur renvoyé sans avoir à utiliser les procédures de gestion des erreurs.
	- FB permet le paramètre ##//bytesread//##, pour vérifier combien d'octets ont été lus avec succès.

{{fbdoc item="see"}}
	- ##[[KeyPgGetgraphics Get (Graphiques)]]## utilisation différente du même mot-clé 
	- ##[[KeyPgPutfileio Put (Entrée/sortie fichiers)]]##
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgClose Close]]##
	- ##[[KeyPgBinary Binary]]##
	- ##[[KeyPgRandom Random]]##
	- ##[[KeyPgFreefile Freefile]]##
	- ##[[ProPgFileIO Comparaison des méthodes d'entrée/sortie des fichiers]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}