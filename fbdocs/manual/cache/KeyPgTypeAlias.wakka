{{fbdoc item="title" value="Type (Alias)"}}----
Déclare un autre nom pour un type

{{fbdoc item="syntax"}}##
	**Type** //typename// [[KeyPgAs as]] //symbol//
##
{{fbdoc item="param"}}
	##//typename//## 
		nouveau nom de remplacement.
	##//symbol//## 
		symbole ou déclaration de type de données à associer à ##//typename//##. 

{{fbdoc item="desc"}}
	##//symbol//## peut se référer à tout type de données déclaré, y compris un type-intégré de données, ##[[KeyPgSub Sub]]## ou pointeur de ##[[KeyPgFunction Function]]##, déclaration de ##[[KeyPgType Type]]##, déclaration d'##[[KeyPgUnion Union]]##, ou déclaration d'##[[KeyPgEnum Enum]]##ération.

	Un alias de type peut être utilisé pour permettre des déclarations anticipées de [[CatPgUserDefTypes Types définis par l'utilisateur]].

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/type-fwd.bas"}}%%(freebasic)
TYPE ParentFwd as Parent
TYPE Child
	Name as zstring * 32
	ParentRef AS ParentFwd ptr
	''...
END TYPE

TYPE Parent
	Name as zstring * 32
	ChildList(0 to 9) AS Child
	''...
END TYPE

DIM p AS Parent
p.Name = "Foo"
with p.ChildList(0)
	.Name = "Jr."
	.ParentRef = @p
	'' ...
end with	

with p.ChildList(0)
	print .Name; " is child of "; .parentRef->Name
end with
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgType Type...End Type]]##
	- ##[[KeyPgTypeTemp Type (Temporary)]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}