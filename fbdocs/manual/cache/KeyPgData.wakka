{{fbdoc item="title" value="DATA"}}----
D&eacute;claration pour stocker des donn&eacute;es lors de la compilation.

{{fbdoc item="syntax"}}##
	**Data** //constant_expression1// [,//constant_expression2//]...
##
{{fbdoc item="desc"}}
	##Data## stocke une liste d'expressions constantes num&eacute;riques ou alphab&eacute;tiques qui sont &eacute;valu&eacute;es au moment de la compilation (except&eacute; avec //[[CompilerOptlang -lang qb]]//) et stock&eacute;es sous forme de constantes qui peuvent &ecirc;tre lues dans des variables en utilisant ##[[KeyPgRead Read]]##.
	
	Toutes les d&eacute;clarations de ##**Data**##s dans le programme se comportent comme une liste unique encha&icirc;n&eacute;e; apr&egrave;s la lecture du dernier &eacute;l&eacute;ment d'une d&eacute;claration de ##**Data**##, le premier &eacute;l&eacute;ment de la d&eacute;claration suivante ##**Data**## sera lu.
	Le programme ne doit pas tenter un ##[[KeyPgRead Read]]## apr&egrave;s le dernier &eacute;l&eacute;ment ##**Data**##.  Les r&eacute;sultats sont (dans tous les dialectes) ind&eacute;finis et le programme peut se bloquer (Page Fault = Erreur de page).
	
	Les d&eacute;clarations ##**Data**## ne sont visibles que depuis le module dans lequel ells sont d&eacute;finies.
	
	Les constantes ##**Data**## ne peuvent &ecirc;tre que des types simples (num&eacute;riques ou cha&icirc;nes).  Une valeur num&eacute;rique peut &ecirc;tre lue comme un litt&eacute;ral num&eacute;rique dans une cha&icirc;ne. Une cha&icirc;ne lue dans une variable num&eacute;rique sera &eacute;valu&eacute;e par la fonction ##[[KeyPgVal Val]]##.  Les ##[[KeyPgConst Const]]##s peuvent &ecirc;tre utilis&eacute;es comme &eacute;l&eacute;ments de donn&eacute;es, sauf dans le dialecte //[[CompilerOptlang -lang qb]]//, o&ugrave; leurs noms sont consid&eacute;r&eacute;s comme du texte normal.
	
	//label//## de la d&eacute;claration ##**[[KeyPgRestore Restore]]**## fait que le premier item de ##**Data**## apr&egrave;s ##//label//## sera le suivant &agrave; lire, permettant &agrave; l'utilisateur de choisir des sections sp&eacute;cifiques de donn&eacute;es &agrave; lire.

	##**Data**## est normalement utilis&eacute; pour initialiser les variables. FreeBasic permet aussi l'initialisation de variables statiques quand elles sont ##[[KeyPgDim Dim]]##ensionn&eacute;es -  Voir [[ProPgInitialization Initialiseurs de variables]] pour plus d'informations.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/data/data.bas"}}%%(freebasic)
' Create an array of 5 integers and a string to hold the data.
DIM AS INTEGER h(4)
DIM AS STRING hs
DIM AS INTEGER readindex

' Set up to loop 5 times (for 5 numbers... check the data)
FOR readindex = 0 TO 4

  ' Read in an integer.
  READ h(readindex)

  ' Display it.
  PRINT "Number" ; readindex ; " = " ; h(readindex)

NEXT readindex

' Spacer.
PRINT

' Read in a string.
READ hs

' Print it.
PRINT  "String = " + hs

' Await a keypress.
SLEEP

' Exit program.
END

' Block of data.
DATA 3, 234, 435/4, 23+433, 87643, "Good" + "Bye!"
%%

{{fbdoc item="lang"}}
	- //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang fblite]]// consid&egrave;rent les items de ##**Data**## comme des expressions constantes qui sont &eacute;valu&eacute;es pendant la compilation et leur r&eacute;sultat stock&eacute; dans le programme.
	- //[[CompilerOptlang -lang qb]]// consid&egrave;re les mots non-comment&eacute;s, inclus les noms de variables et constantes, comme des cha&icirc;nes litt&eacute;rales, et les stocke sans changement, comme dans QBASIC.  Les cha&icirc;nes non-comment&eacute;es sont d&eacute;limit&eacute;es par des virgules, et deux-points (:) ou un fin de ligne signifie la fin de la d&eacute;claration ##**Data**##.  Dans les cha&icirc;nes non-comment&eacute;es les espaces sont &eacute;limin&eacute;s au d&eacute;but et &agrave; la fin.

{{fbdoc item="diff"}}
	- En dehors du dialecte //[[CompilerOptlang -lang qb]]// les cha&icirc;nes de litt&eacute;raux alphab&eacute;tiques doivent &ecirc;tre entre guillemets, dans QBASIC cette utilisation est facultative.
	- Dans QBASIC les items vides sont &eacute;valu&eacute;s au nombre ##0## ou &agrave; des cha&icirc;nes vides, dans FreeBASIC ils donnent une erreur de compilation. Dans QBASIC une virgule &agrave; la fin de la d&eacute;claration am&egrave;ne un item suppl&eacute;mentaire, vide, &eacute;valu&eacute; &agrave; ##0## ou une cha&icirc;ne vide. Dans FreeBASIC ils donnent une erreur de compilation.

{{fbdoc item="see"}}
	- ##[[KeyPgRead Read]]##
	- ##[[KeyPgRestore Restore]]##

{{fbdoc item="back" value="CatPgMisc|Miscellaneous"}}
