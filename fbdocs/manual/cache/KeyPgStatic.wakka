{{fbdoc item="title" value="STATIC"}}----
Définit les variables, les objets et les tableaux ayant un stockage statique

{{fbdoc item="syntax"}}##
	**Static** //symbol// [ ( [ //subscripts// ] ) ] [ [[KeyPgAs as]] [[DataType DataType]] ] [ , ... ]
		//ou//
	{ [[KeyPgSub sub]]|[[KeyPgFunction function]] } //proc_header// **Static**
		[ ... ]
	[[KeyPgEndblock end]] { [[KeyPgSub sub]]|[[KeyPgFunction function]] }
##
{{fbdoc item="param"}}
	##//symbol//##
		nom symbole d'une variable ou d'un tableau.
	##//subscripts//##
		une liste de "subscript ranges" séparés par des virgules.
	##//proc_header//##
		entête de procédure pour une définition de la procédure.

{{fbdoc item="desc"}}
	Spécifie [[ProPgStorageClasses stockage statique]] pour des variables, des objets et des tableaux; l'allocation ayant lieu au démarrage du programme et la désallocation à sa fermeture. Les objets sont construits dès qu'ils sont définis et détruits à la fermeture du programme.

	Lors de la déclaration de tableaux statiques, seuls les [[ProPgLiterals littéraux numériques]], les [[KeyPgConst Constantes]] ou les [[KeyPgEnum Enumérations]] peuvent être utilisés comme valeurs de la plage d'indices. Les tableaux statiques de longueur variable doivent être déclarés vides (pas de liste de plage d'indices) et redimensionnés en utilisant ##[[KeyPgRedim Redim]]## avant utilisation.

	Dans les blocs itératifs et récursifs, comme les boucles de [[CatPgControlFlow déclaration de contrôle de flux]] ou les procédures, les variables statiques, les objets et les tableaux locaux du bloc sont garantis d'occuper le même espace de stockage dans toutes les instanciations du bloc. Par exemple, des procédures qui s'appellent elles-mêmes - que ce soit directement ou indirectement - partagent les mêmes instances de leurs variables locales statiques.

	Lorsqu'il est utilisé au niveau module et de déclarations de procédure membre, ##**Static**## spécifie [[ProPgStorageClasses stockage statique]] pour toutes les variables locales, objets et tableaux.

	##[[KeyPgStaticMember Static (Membre)]]## est aussi utilisé pour des déclarations de procédure membre pour spécifier des procédures membre statiques.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/variable/static.bas"}}%%(freebasic)
sub f
	'' static variables are initialized to 0 by default
	static i as integer
	i += 1
	Print "Number of times called: " & i
end sub

'' the static variable in f() retains its value between
'' multiple procedure calls.
f()
f()
%%
	Will output:

%%
Number of times called: 1
Number of times called: 2
%%

{{fbdoc item="diff"}}
	- ""QuickBASIC"" permet de déclarer les variables et les tableaux en utilisant le mot clé ##**Static**## seulement dans les procédures et les routines ##DEF FN##.
	- ##**Static**## force la visibilité locale des variables et des tableaux dans les routines ""QuickBASIC"" ##DEF FN##. ""FreeBASIC"" ne supporte ni les routines ##DEF FN## ni cette utilisation de ##**Static**##.
	- Utiliser ##[[KeyPgStaticMember Static]]## pour spécifier des membres de procédures statiques est nouveau pour ""FreeBASIC"".

{{fbdoc item="see"}}
	- ##[[KeyPgStaticMember Static (Member)]]##
	- ##[[KeyPgDim Dim]]##, ##[[KeyPgRedim Redim]]##
	- ##[[KeyPgSub Sub (Module)]]##, ##[[KeyPgFunction Function (Module)]]##
	- ##[[KeyPgMemberSub Sub (Member)]]##, ##[[KeyPgMemberFunction Function (Member)]]##
	- ##[[KeyPgOptionstatic Option Static]]##
	- ##[[ProPgStorageClasses Storage Classes]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}{{fbdoc item="back" value="CatPgVariables|Variable Declarations"}}