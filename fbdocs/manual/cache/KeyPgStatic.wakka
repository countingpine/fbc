{{fbdoc item="title" value="STATIC"}}----
D&eacute;finit les variables, les objets et les tableaux ayant un stockage statique

{{fbdoc item="syntax"}}##
	**Static** //symbol// [ ( [ //subscripts// ] ) ] [ [[KeyPgAs as]] [[DataType DataType]] ] [ , ... ]
		//ou//
	{ [[KeyPgSub sub]]|[[KeyPgFunction function]] } //proc_header// **Static**
		[ ... ]
	[[KeyPgEndblock end]] { [[KeyPgSub sub]]|[[KeyPgFunction function]] }
##
{{fbdoc item="param"}}
	##//symbol//##
		nom symbole d'une variable ou d'un tableau.
	##//subscripts//##
		une liste de "subscript ranges" s&eacute;par&eacute;s par des virgules.
	##//proc_header//##
		ent&ecirc;te de proc&eacute;dure pour une d&eacute;finition de la proc&eacute;dure.

{{fbdoc item="desc"}}
	Sp&eacute;cifie [[ProPgStorageClasses stockage statique]] pour des variables, des objets et des tableaux; l'allocation ayant lieu au d&eacute;marrage du programme et la d&eacute;sallocation &agrave; sa fermeture. Les objets sont construits d&egrave;s qu'ils sont d&eacute;finis et d&eacute;truits &agrave; la fermeture du programme.

	Lors de la d&eacute;claration de tableaux statiques, seuls les [[ProPgLiterals litt&eacute;raux num&eacute;riques]], les [[KeyPgConst Constantes]] ou les [[KeyPgEnum Enum&eacute;rations]] peuvent &ecirc;tre utilis&eacute;s comme valeurs de la plage d'indices. Les tableaux statiques de longueur variable doivent &ecirc;tre d&eacute;clar&eacute;s vides (pas de liste de plage d'indices) et redimensionn&eacute;s en utilisant ##[[KeyPgRedim ReDim]]## avant utilisation.

	Dans les blocs it&eacute;ratifs et r&eacute;cursifs, comme les boucles de [[CatPgControlFlow d&eacute;claration de contr&ocirc;le de flux]] ou les proc&eacute;dures, les variables statiques, les objets et les tableaux locaux du bloc sont garantis d'occuper le m&ecirc;me espace de stockage dans toutes les instanciations du bloc. Par exemple, des proc&eacute;dures qui s'appellent elles-m&ecirc;mes - que ce soit directement ou indirectement - partagent les m&ecirc;mes instances de leurs variables locales statiques.

	Lorsqu'il est utilis&eacute; au niveau module et de d&eacute;clarations de proc&eacute;dure membre, ##**Static**## sp&eacute;cifie [[ProPgStorageClasses stockage statique]] pour toutes les variables locales, objets et tableaux.

	##[[KeyPgStaticMember Static (Membre)]]## est aussi utilis&eacute; pour des d&eacute;clarations de proc&eacute;dure membre pour sp&eacute;cifier des proc&eacute;dures membre statiques.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/variable/static.bas"}}%%(freebasic)
sub f
	'' static variables are initialized to 0 by default
	static i as integer
	i += 1
	Print "Number of times called: " & i
end sub

'' the static variable in f() retains its value between
'' multiple procedure calls.
f()
f()
%%
	Will output:

%%
Number of times called: 1
Number of times called: 2
%%

{{fbdoc item="diff"}}
	- QuickBASIC permet de d&eacute;clarer les variables et les tableaux en utilisant le mot cl&eacute; ##**Static**## seulement dans les proc&eacute;dures et les routines ##DEF FN##.	- ##**Static**## force la visibilit&eacute; locale des variables et des tableaux dans les routines QuickBASIC ##DEF FN##. FreeBASIC ne supporte ni les routines ##DEF FN## ni cette utilisation de ##**Static**##.
	- Utiliser ##[[KeyPgStaticMember Static]]## pour sp&eacute;cifier des membres de proc&eacute;dures statiques est nouveau pour FreeBASIC.
	{{fbdoc item="see"}}

- ##[[KeyPgStaticMember Static (Member)]]##
	- ##[[KeyPgDim Dim]]##, ##[[KeyPgRedim ReDim]]##
	- ##[[KeyPgSub Sub (Module)]]##, ##[[KeyPgFunction Function (Module)]]##
	- ##[[KeyPgMemberSub Sub (Member)]]##, ##[[KeyPgMemberFunction Function (Member)]]##
	- ##[[KeyPgOptionstatic Option Static]]##
	- ##[[ProPgStorageClasses Storage Classes]]##
	- ##[[ProPgStorageClasses Storage Classes]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}{{fbdoc item="back" value="CatPgVariables|Variable Declarations"}}