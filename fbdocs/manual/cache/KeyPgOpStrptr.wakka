{{fbdoc item="title" value="Operator STRPTR (String pointer)"}}----
Renvoie l'adresse de données caractère d'une chaîne.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Strptr** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgZstring zstring]] [[KeyPgPtr ptr]]
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Strptr** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgWstring wstring]] ) [[KeyPgAs as]] [[KeyPgZstring zstring]] [[KeyPgPtr ptr]]
##
{{fbdoc item="usage"}}##
	//result// = **Strptr** ( //lhs// )
##
{{fbdoc item="param"}}
	##//lhs//##
		Une chaîne.

{{fbdoc item="ret"}}
	Retourne un ##[[KeyPgZstring Zstring]] [[KeyPgPtr Ptr]]## aux données caractères d'une chaîne.

{{fbdoc item="desc"}}
	Cet retourne une ##[[KeyPgZstring Zstring]] [[KeyPgPtr Ptr]]## qui pointe vers le début des données caractères d'une chaîne. ##**Operator Strptr**## est la méthode appropriée pour l'acquisition de l'adresse de données caractères d'une chaîne.

	Notez que lorsqu'on a passé une ##[[KeyPgWstring Wstring]]##, ##**Operator Strptr**## renvoie toujours une ##[[KeyPgZstring Zstring]] [[KeyPgPtr Ptr]]##, qui peut ne pas être le résultat désiré.

	Les opérateurs liés ##[[KeyPgOpVarptr Operator Varptr (Variable pointeur)]]## et ##[[KeyPgOpAt Operator @ (Address of)]]##, lorsqu'il est utilisé avec une ##[[KeyPgString String]]##, renvoie l'adresse du descripteur de chaîne interne.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/strptr.bas"}}%%(freebasic)
'' This example uses Strptr to demonstrate using pointers with strings
Dim myString As String
Dim toMyStringDesc as any ptr
Dim toMyString As ZString Ptr

'' Note that using standard VARPTR notation will return a pointer to the
'' descriptor, not the string data itself
myString = "Improper method for Strings"
toMyStringDesc = @myString
Print myString
Print hex( toMyStringDesc )
Print

'' However, using Strptr returns the proper pointer
myString = "Hello World Examples Are Silly"
toMyString = StrPtr(myString)
Print myString
Print *toMyString
Print

'' And the pointer acts like pointers to other types
myString = "MyString has now changed"
Print myString
Print *toMyString
Print
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC"", mais fait exactement la même chose que ##[[KeyPgSadd Sadd]]##

{{fbdoc item="see"}}
	- ##[[KeyPgSadd Sadd]]##
	- ##[[KeyPgOpVarptr Varptr]]##
	- ##[[KeyPgOpProcptr Procptr]]##
	- [[ProPgPointers Pointers]]

{{fbdoc item="back" value="CatPgOpPoint|Pointer Operators"}}{{fbdoc item="back" value="CatPgOpString|String Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}