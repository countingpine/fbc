{{fbdoc item="title" value="WINPUT()"}}----
Lit un nombre de caract&egrave;res larges depuis la console ou un fichier

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Winput**( [[KeyPgByval byval]] //num// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Winput**( [[KeyPgByval byval]] //num// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //filenum// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0 ) [[KeyPgAs as]] [[KeyPgString wstring]]
##
{{fbdoc item="usage"}}##
	//result// = **Winput**( //num// [, [#]//filenum// } )
##
{{fbdoc item="param"}}
	##//num//##
		Nombre de caract&egrave;res &agrave; lire.
	##//filenum//##
		Num&eacute;ro de dossier du fichier li&eacute; ou d'un p&eacute;riph&eacute;rique.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne une [[KeyPgWstring WString]] des caract&egrave;res lus.

{{fbdoc item="desc"}}
	Lit un nombre de caract&egrave;res larges depuis la console ou un fichier/p&eacute;riph&eacute;rique li&eacute; sp&eacute;cifi&eacute; par ##//filenum//##.

	La premi&egrave;re version attend et lit ##//n//## caract&egrave;res larges de la m&eacute;moire tampon du clavier. Les touches &eacute;tendues ne sont pas lues. Les caract&egrave;res ne sont pas affich&eacute;s &agrave; l'&eacute;cran.

	La deuxi&egrave;me version attend et lit ##//n//## caract&egrave;res larges &agrave; partir d'un fichier ou un p&eacute;riph&eacute;rique. La position dans le fichier est mise &agrave; jour.

//Note: FreeBASIC ne prend pas en charge la lecture de caract&egrave;res larges depuis la console.//

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/console/winput.bas"}}%%(freebasic)
dim char as wstring * 2

dim filename as string, enc as string
dim f as integer

line input "Please enter a file name: ", filename
line input "Please enter an encoding type (optional): ", enc
if enc = "" then enc = "ascii"

f = freefile
if open(filename for input encoding enc as #f) = 0 then
	
	print "Press space to read a character from the file, or escape to exit."
	
	do
	    
	    select case input(1)
	    
	    case " " 'Space
	        
	        if eof(f) then
	            
	            print "You have reached the end of the file."
	            exit do
	            
	        end if
	        
	        char = winput(1, f)
	        print char & " (char no " & asc(char) & ")"
	        
	    case chr(27) 'Escape
	        
	        exit do
	        
	    end select
	    
	loop
	
	close #f
	
else
	
	print "There was an error opening the file."
	
end if
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- QB ne supporte pas Unicode

{{fbdoc item="see"}}
	- ##[[KeyPgInputnum Input()]]##
	- ##[[KeyPgOpen Open]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}{{fbdoc item="back" value="CatPgInput|User Input"}}