{{fbdoc item="title" value="TIMER"}}----
Retourne le temps écoulé par rapport à un point de référence fixe.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Timer** ( ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	//result// = **Timer**
##
{{fbdoc item="ret"}}
	Retourne un résultat ##[[KeyPgDouble double]]## précision avec le temps écoulé, en secondes, par rapport à un point de référence statique.

{{fbdoc item="desc"}}

	La fonction ##**Timer**## est utile pour déterminer quelle durée de temps s'écoule lors de l'exécution d'une portion de code, ou pour contrôler le déroulement de votre code.  Pour déterminer quel temps s'est écoulé entre deux points de votre programme, vous pouvez enregistrer la valeur de ##**Timer**## aux points de départ et de fin, et puis soustraire la valeur de départ à celle de fin.

	Sur certaine plates-formes, la valeur de ##**Timer**## est remise à zéro à minuit (voir ci-dessous), donc si les temps de départ et de fin sont de chaque côté du point de remise à zéro, la différence sera négative.  Ce qui peut produire des effets imprévus dans certains programmes.  Dans ce cas, ajoutez ##86400## (nombre de secondes de 24 heures) à la différence pour obtenir le résultat correct.  Si la durée dépasse un jour, il est alors nécessaire de déterminer le nombre de jours écoulés.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/dates/timer.bas"}}%%(freebasic)
'' Example of using TIMER function 
'' Note: see text about correct waiting strategies
Dim Start As Double
Print "Wait 2.5 seconds."
Start = Timer
Do
	Sleep 1, 1
Loop Until (Timer - Start) > 2.5
Print "Done."
%%

{{fbdoc item="section" value="Différences de plates-formes"}}
	- Sous ""Win32"" et Linux, si le programme doit attendre pour des périodes de 0.1 seconde ou plus, ##[[KeyPgSleep Sleep]]## doit être utilisé, ce qui permet aux autres programmes de fonctionner pendant la période d'attente. Pour des délais plus courts, une boucle utilisant TIMER sera plus précise.
	- Le point de référence varie en fonction de la plate-forme.  Sous Windows, le temps est mesuré par rapport au point où l'ordinateur a été mis en route.  Sous DOS, le temps est mesuré par rapport au 1er Janvier 1970.

~&//Note pour les utilisateurs DOS: actuellement, le nombre de secondes depuis 1970 dépasse ##10^9##, et il est donc impossible de le stocker dans une variable ##[[KeyPgSingle Single (simple)]]##-précision, il ne peut pas non plus être multiplié (pour obtenir les 1/10 de secondes ou plus) et stocké dans une variable entière, donc//

	- La précision de TIMER varie, en fonction de l'ordinateur utilisé.  Si le processeur dispose d'un compteur de précision (comme les processeurs Performance Counter Pentium d'Intel) et que le système d'exploitation l'utilise, la précision est liée à l'horloge du processeur et on peut espérer la micro-seconde. Avec des processeurs plus anciens (386, 486), et toujours sous DOS, la résolution est de 1/18 de seconde.

	- L'utilisation de TIMER peut provoquer des accès disque sous DOS, voir [[http://www.freebasic.net/forum/viewtopic.php?t=12985 forum]] pour analyse et solutions

{{fbdoc item="diff"}}
	- Dans QB, TIMER retourne le nombre de secondes à partir de minuit, et la précision est de 1/18 s

{{fbdoc item="see"}}
	- ##[[KeyPgTime Time]]##
	- ##[[KeyPgSleep Sleep]]##

{{fbdoc item="back" value="CatPgDate|Date and Time Functions"}}

