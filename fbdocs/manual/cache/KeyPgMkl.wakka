{{fbdoc item="title" value="MKL"}}----
Copie binaire d'une variable ##[[KeyPgInteger Long]]## en une ##[[KeyPgString String (cha&icirc;ne)]]##, r&eacute;glage de sa longueur &agrave; 4 octets

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Mkl** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Mkl**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		Une variable ##[[KeyPgInteger Integer (enti&egrave;re)]]## dont on fait une copie binaire vers une ##[[KeyPgString String (cha&icirc;ne)]]##.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne une ##[[KeyPgString String (cha&icirc;ne)]]## copie binaire d'un nombre entier ##[[KeyPgInteger Long]]##.

{{fbdoc item="desc"}}
	Ex&eacute;cute une copie binaire d'une variable enti&egrave;re long(ue) vers une ##[[KeyPgString String (cha&icirc;ne)]]## dont la longueur est de 4 octets. La cha&icirc;ne r&eacute;sultat peut &ecirc;tre lue &agrave; nouveau comme un ##[[KeyPgLong Long]]## par ##[[KeyPgCvl CVL]]##.

	Cette fonction est utile pour &eacute;crire une valeur num&eacute;rique dans un tampon sans utiliser de d&eacute;finition de TYPE.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/mkl.bas"}}%%(freebasic)
dim a as long, b as string
a = 4534
b = mkl(a)
print a, cvl(b)
sleep
%%

{{fbdoc item="lang"}}
	- Le suffixe de type de cha&icirc;ne "$" est obligatoire dans le dialecte //[[CompilerOptlang -lang qb]]//.
	- Le suffixe de type de cha&icirc;ne "$" est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgMkd Mkd]]##
	- ##[[KeyPgMki Mki]]##
	- ##[[KeyPgMks Mks]]##
	- ##[[KeyPgCvd Cvd]]##
	- ##[[KeyPgCvi Cvi]]##
	- ##[[KeyPgCvl Cvl]]##
	- ##[[KeyPgCvs Cvs]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}