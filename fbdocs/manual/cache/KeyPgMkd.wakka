{{fbdoc item="title" value="MKD"}}----
Copie binaire d'une variable ##[[KeyPgDouble double]]## précision en une ##[[KeyPgString String (chaîne)]]##, réglage de sa longueur à 8 octets

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Mkd** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Mkd**[$]( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		Une variable ##[[KeyPgDouble double]]## précision dont on fait une copie binaire vers une ##[[KeyPgString String (chaîne)]]##.

{{fbdoc item="ret"}}
	Retourne une ##[[KeyPgString String (chaîne)]]## copie binaire d'un nombre ##[[KeyPgDouble double]]## précision.

{{fbdoc item="desc"}}
	Exécute une copie binaire d'une variable ##[[KeyPgDouble double]]## précision vers une chaîne dont la longueur est de 8 octets. La chaîne résultat peut être lue à nouveau comme un ##[[KeyPgDouble Double]]## par ##[[KeyPgCvd Cvd]]##.

	Cette fonction est utile pour écrire une valeur numérique dans un tampon sans utiliser de définition de ##[[KeyPgType Type]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/mkd.bas"}}%%(freebasic)
dim n as double, e as string
n = 1.2345
e = mkd(n)
print n, cvd(e)
%%

{{fbdoc item="lang"}}
	- Le suffixe de type de chaîne "$" est obligatoire dans le dialecte //[[CompilerOptlang -lang qb]]//.
	- Le suffixe de type de chaîne "$" est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgMki Mki]]##
	- ##[[KeyPgMkl Mkl]]##
	- ##[[KeyPgMks Mks]]##
	- ##[[KeyPgCvd Cvd]]##
	- ##[[KeyPgCvi Cvi]]##
	- ##[[KeyPgCvl Cvl]]##
	- ##[[KeyPgCvs Cvs]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}