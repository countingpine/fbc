{{fbdoc item="title" value="WRITE #"}}----
Inscrit une liste de valeurs séparées par des virgules dans un fichier texte ou un périphérique

{{fbdoc item="syntax"}}##
	**Write #** //filenum// **,** [ //expressionlist// ]
##
{{fbdoc item="param"}}
	##//filenum//##
		Numéro de fichier ou périphérique ouvert pour ##[[KeyPgOutput Output]]## ou ##[[KeyPgAppend Append]]##.
	##//expressionlist//##
		Liste d'items à écrire, séparés par des virgules

{{fbdoc item="desc"}}
	Sort les valeurs de ##//expressionlist//## vers un fichier texte ou un périphérique associé à ##//filenum//##. Les valeurs sont séparées par des virgules, et les chaînes sont entre guillemets doubles. Les valeurs numériques comprises entre zéro (##0##) et un (##1##) sont péfixées par un zéro (##0##) si aucun zéro n'est donné (par exemple, une valeur de ##-.123## sera sortie ##-0.123##). Les zéros supplémentaires sont éliminés.

	Si aucune liste d'items n'est donnée, ##**Write #**## sort un retour chariot (notez que la virgule après ##//filenum//## est obligatoire, même s'il n'y a pas de liste après).
	Le but de ##**Write #**## est de créer un fichier qui sera, à l'opposé, lisible par [[KeyPgInputPp Input #]].

{{fbdoc item="ex"}}

{{fbdoc item="filename" value="examples/manual/fileio/write.bas"}}%%(freebasic)
const filename as string = "file.txt"

dim filenum as integer = freefile()
if 0 <> open(filename, for output, as filenum) then
	print "error opening " & filename & " for output."
	end -1
end if

dim i as integer = 10
dim d as double = 123.456
dim s as string = "text"

write #filenum, 123, "text", -.45600
write #filenum,
write #filenum, i, d, s
%%
	produira le fichier:

%%
123,"text",-0.456

10,123.456,"text"
%%

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgWrite Write]]##
	- ##[[KeyPgPrintPp Print #]]##
	- ##[[KeyPgInputPp Input #]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}

