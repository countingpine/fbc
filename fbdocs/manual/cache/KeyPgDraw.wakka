{{fbdoc item="title" value="DRAW"}}----
Déclaration pour l'écriture séquentielle de pixel

{{fbdoc item="syntax"}}##
	**Draw** [//target//,] //cmd//
##
{{fbdoc item="param"}}
	##//target//##
		le tampon où dessiner
	##//cmd//##
		une chaîne contenant une séquence de commandes

{{fbdoc item="desc"}}
	Le dessin sera sur la page courante de travail validée par ##[[KeyPgScreenset ScreenSet]]## ou sur le tampon ##//cible (target)//## ##[[KeyPgGetgraphics Get]]##/##[[KeyPgPutgraphics Put]]## s'il est spéecifié.
	La déclaration ##**Draw**##peut être utilisée pour exécuter plusieurs commandes de dessin d'unseul coup; c'est très utile pour dessiner rapidement des figures. Lachaîne contenant les commandes accepte les commandes suivantes:

	Commandes pour écrire des pixels:
	{{table columns="2" cellpadding="1" cells="Commande;Description; Commandes pour écrire des pixels:;B;Préfixe facultatif: déplace mais n'écrit pas.;N;Préfixe facultatif: écrit mais ne déplace pas.;Mx,y;Déplace à la position écran spécifiée. Si + ou - précède x, le mouvement est relatif à la position courante du curseur.;U[n];Déplace de n unités vers le haut. Si n est omis, n = 1 par défaut.;D[n];Déplace de n unités vers le bas. Si n est omis, n = 1 par défaut.;L[n];Déplace de n unités vers la gauche. Si n est omis, n = 1 par défaut.;R[n];Déplace de n unités vers la droite. Si n est omis, n = 1 par défaut.;E[n];Déplace de n unités vers le haut et la droite. Si n est omis, n = 1 par défaut.;F[n];Déplace de n unités vers le bas et la droite. Si n est omis, n = 1 par défaut..;G[n];Déplace de n unités vers le bas et la gauche. Si n est omis, n = 1 par défaut.;H[n];Déplace de n unités vers le haut et la gauche. Si n est omis, n = 1 par défaut.; Commandes de couleur:;Cn;La couleur de premier-plan courante devient n.;Pp,b;Remplit la région avec une bordure de couleur b en utilisant la couleur p.; Commandes pour modifier la taille et effectuer une rotation:;Sn;Valide l'unité courante de longueur, 4 par défaut.  Une unité de longueur 4 est égale à 1 pixel.;An;Rotation de n*90 degrés (n de 0 à 3).;TAn;Rotation de n degrés (n de 0 à 359); Commande supplémentaire:;Xp;Exécute la commande à l'addresse p, où p est un STRING PTR."}}
	
Les commandes pour régler la couleur, la taille et l'angle auront une incidence sur toutes les opérations ##**Draw**## ultérieures.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/draw.bas"}}%%(freebasic)
screen 13

'Deplace vers (50,50) sans dessin
draw "BM 50,50"

'Valide couleur dessin a 2 (vert)
draw "C2"

'Dessine une boite
draw "R50 D30 L50 U30"

'Deplace dans la boite
draw "BM +1,1"

'Remplit couleur 1 (bleu) jusqu'aux bords couleur 2 
draw "P 1,2"

sleep
%%
{{image class="center" title="Draw example output" url="/images/draw1.png"}}

{{fbdoc item="filename" value="examples/manual/gfx/draw2.bas"}}%%(freebasic)
'' Dessine une fleur sur ecran

dim as integer i, a, c
dim as string fill, setangle

'' motif pour chaque petale
dim as const string petal = _
	_
	("X" & varptr(setangle)) _ '' link to angle-setting string
	_
	& "C15" _       '' set outline color (white)
	& "M+100,+10" _ '' draw outline
	"M +15,-10" _
	"M -15,-10" _
	"M-100,+10" _
	_
	& "BM+100,0" _              '' move inside petal
	& ("X" & varptr(fill)) _    '' flood-fill petal (by linking to fill string)
	& "BM-100,0"                '' move back out



'' set screen
screenres 320, 240, 8

'' move to center
draw "BM 160, 120"

'' set initial angle and color number
a = 0: c = 32

for i = 1 to 24

	'' make angle-setting and filling command strings
	setangle = "TA" & a
	fill = "P" & c & ",15"

	'' draw the petal pattern, which links to angle-setting and filling strings
	draw petal
	
	'' short delay
	sleep 100

	'' increment angle and color number
	a += 15: c += 1

next i

sleep
%%
{{image class="center" title="Draw example output" url="/images/draw2.png"}}

{{fbdoc item="diff"}}
	- ##//target//## est nouveau pour ""FreeBASIC""
	- QB utilise le pointeur spécial VARPTR$ avec la commande ##X p##.
	- FB ne permet pas actuellement de mouvements de sous-pixels: tous les mouvements sont arrondis à l'entier de coordonnée le plus proche .

{{fbdoc item="see"}}
	- ##[[KeyPgDrawString Draw String]]##
	- ##[[KeyPgScreengraphics Screen (Graphique)]]##
	- ##[[KeyPgOpVarptr VarPtr]]##
	- ##[[KeyPgPaint Paint]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}

