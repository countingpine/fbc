{{fbdoc item="title" value="SCREENSET"}}----
Valide la page de travail et la page visible

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgSub sub]] **Screenset** ( [[KeyPgByval byval]] //work_page// [[KeyPgAs as]] [[KeyPgInteger integer]] = -1, [[KeyPgByval byval]] //visible_page// [[KeyPgAs as]] [[KeyPgInteger integer]] = -1 )
##
{{fbdoc item="usage"}}##
	**Screenset** [ //work_page// ] [, //visible_page// ]
##
{{fbdoc item="param"}}
	##//work_page//##
		indice de la page de travail
	##//visible_page//##
		indice de la page visible

{{fbdoc item="desc"}}
	##**ScreenSet**## permet de déterminer la page courante de travail ainsi que la page visible. Les numéros de page vont de 0 à num_pages spécifié lors de la validation du mode graphique moins 1. Vous pouvez utiliser cette fonction pour utiliser les techniques de la "permutation de page" (page-flipping) ou du "double tampon" (double-buffering).  Si vous omettez ##//work_page//## mais pas ##//visible_page//##, seule la page visible changera. Si vous omettez les deux arguments, les deux pages, de travail et visible, correspondront à la page 0.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/screenset.bas"}}%%(freebasic)
' Valide bon vieux mode, 320x200 en 8bpp mais avec 2 pages
SCREEN 13, ,2
COLOR ,15
DIM x AS INTEGER
x = -40
' Travail sur page 1 pendant nous affichons page 0
SCREENSET 1, 0
DO
	CLS
	LINE (x, 80)-(x + 39, 119), 4, BF
	x = x + 1
	IF (x > 319) THEN x = -40
	' Attente syncro verticale
	WAIT &h3DA, 8
	' Copy page travail vers page visible
	SCREENCOPY
LOOP WHILE INKEY = ""

%%


{{fbdoc item="lang"}}
	- Non disponible en dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Screenset""**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphics)]]##
	- ##[[KeyPgScreenres Screenres]]##
	- ##[[KeyPgScreencopy Screencopy]]##

{{fbdoc item="back" value="CatPgGfxScreen|Screen Functions"}}

