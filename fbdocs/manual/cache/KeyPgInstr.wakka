{{fbdoc item="title" value="INSTR"}}----
Repère la position de la première occurence d'une sous-chaîne ou d'un caractère dans une chaîne de caractères

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Instr** [[KeyPgOverload overload]] ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]],  [ **Any** ] [[KeyPgByref byref]] //substring// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Instr** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]], [ **Any** ] [[KeyPgByref byref]] //substring// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Instr** ( [[KeyPgByval byval]] //start// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]], [ **Any** ] [[KeyPgByref byref]] //substring// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Instr** ( [[KeyPgByval byval]] //start// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]], [ **Any** ] [[KeyPgByref byref]] //substring// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//first// = **Instr**( [ //start//, ] //str//, [ **Any** ] //substring// )
##
{{fbdoc item="param"}}
	##//str//##
		La chaîne où chercher.
	##//substring//##
		La sous-chaîne à trouver.
	##//start//##
		La position dans ##//str//## où la recherche va commencer.

{{fbdoc item="ret"}}
	La position de la première occurrence de ##//substring//## dans ##//str//##.

{{fbdoc item="desc"}}
	Repère la position de la première occurence d'une sous-chaîne ou d'un caractère dans une chaîne de caractères. Dans la première forme de ##**InStr**##, la recherche commence dès le premier caractère.
	
	Zéro (##0##) est retourné si ##//substring//## n'est pas trouvée, soit ##//str//## ou ##//substring//## sont des chaînes vides, ou ##//start// < 1##.

	Si le mot clé ##**Any**## est spécifié, ##**InStr**## renvoie la première occurrence de n'importe quel caractère dans ##//substring//##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/instr.bas"}}%%(freebasic)
' Retournera 4
Print InStr("abcdefg", "de")

' Retournera 0
Print InStr("abcdefg", "h")

' Cherchera chacun des caracteres "f", "b", "c", et retournera 2 car "b" est rencontre en premier
Print InStr("abcdefg", Any "fbc")
%%
{{fbdoc item="filename" value="examples/manual/strings/instr2.bas"}}%%(freebasic)
dim test as string
dim idx as integer

test = "abababab"
idx = instr(test, "b")

do while idx > 0 'if not found loop will be skipped
	print """b"" at " & idx
	idx = instr(idx + 1, Test, "b")
loop
%%
<<'Un exemple Unicode:
dim text as wstring*20
text = "&#1055;&#1088;&#1080;&#1074;&#1077;&#1090;, &#1084;&#1080;&#1088;!"
print instr(text,"&#1077;&#1090;") ' affiche 5
<<::c::
{{fbdoc item="target"}}
	- La version ##**WString**## (chaîne large) de ##**InStr**## n'est pas supportée par la cible DOS.

{{fbdoc item="diff"}}
	- QB retourne ##//start//## si ##//search//## est une chaîne de longueur zéro.
	- QB ne supporte pas Unicode.

{{fbdoc item="see"}}
	- ##[[KeyPgInstrrev Instrrev]]##
	- ##[[KeyPgMidfunction Mid (Fonction)]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}

