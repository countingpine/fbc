{{fbdoc item="title" value="Operator Let (Assign)"}}----
Indique l'op&eacute;rateur d'affectation en cas de surcharge [[KeyPgOpAssignment Operator = (Assignment)]]

{{fbdoc item="syntax"}}##
	{ [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] | [[KeyPgEnum Enum]] } //typename//
		[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Let** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //rhs// [[KeyPgAs as]] [[DataType datatype]] )
	End { [[KeyPgType Type]] | [[KeyPgClass Class]] | [[KeyPgUnion Union]] }

	[[KeyPgOperator operator]] //typename//.**Let** ( [ [[KeyPgByref byref]] | [[KeyPgByval byval]] ] //rhs// [[KeyPgAs as]] [[DataType datatype]] )
##
{{fbdoc item="usage"}}##
	//lhs// **=** //rhs//
##
{{fbdoc item="param"}}
	##//typename//## 
		Nom de ##[[KeyPgType Type]]##, ##[[KeyPgClass Class]]##, ##[[KeyPgUnion Union]]##, ou ##[[KeyPgEnum Enum]]##
	##//lhs//##
		La variable &agrave; affecter.
	##//rhs//##
		La valeur &agrave; affecter.

{{fbdoc item="desc"}}
	##**Let**## est utilis&eacute; pour surcharger l'op&eacute;rateur ##[[KeyPgOpAssignment Operator = (Affectation)]]## et pour le distinguer de l'op&eacute;rateur de comparaison ##[[KeyPgOpEqual Operator = (Egal)]]##.

	##//lhs// **=** //rhs//## attribuera le terme de droite ##//rhs//## au terme de gauche ##//lhs//## en invoquant la proc&eacute;dure d'op&eacute;rateur **Let** d&eacute;finie dans ##//typename//##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/let.bas"}}%%(freebasic)
type T
  x as integer
  y as integer
  declare operator let( byref rhs as T )
end type

operator T.let( byref rhs as T )
  x = rhs.x
  y = rhs.y
end operator

dim a as T = ( 5, 7 )
dim b as T

'' Do the assignment invoking the LET
'' operator procedure
b = a

print "a.x = "; a.x
print "a.y = "; a.y
print
print "b.x = "; b.x
print "b.y = "; b.y
%%
Affiche:
%%
a.x =  5
a.y =  7

b.x =  5
b.y =  7
%%

{{fbdoc item="lang"}}
	- Dans les dialectes //[[CompilerOptlang -lang qb]]// et //[[CompilerOptlang -lang fblite]]//, cet op&eacute;rateur ne peut &ecirc;tre surcharg&eacute;
	- Dans les dialectes //[[CompilerOptlang -lang qb]]// et //[[CompilerOptlang -lang fblite]]//, une expression d'affectation peut &ecirc;tre pr&eacute;c&eacute;d&eacute;e par le mot-clef ##[[KeyPgLet Let]]## keyword.

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgLet Let]]##
	- ##[[KeyPgOpLetlist Op&eacute;rateur Let() (Affectation)]]##
	- ##[[KeyPgOpAssignment Op&eacute;rateur = (Affectation)]]##
	- ##[[KeyPgOpEqual Op&eacute;rateur = (Egal)]]##

{{fbdoc item="back" value="CatPgOpAssignment|Assignment Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}
   
