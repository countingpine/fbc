{{fbdoc item="title" value="XOR"}}----
Paramètre de la fonction graphique ##[[KeyPgPutgraphics Put]]## qui utilise le traitement bit-à-bit ##[[KeyPgOpXor Xor]]## comme méthode d'écriture écran

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Xor**
##
{{fbdoc item="param"}}
	##**Xor**##
		Requis.

{{fbdoc item="desc"}}
	La méthode ##**Xor**## combine chaque pixel source avec le pixel correspondant de la destination, en utilisant la fonction de traitement bit-à-bit ##[[KeyPgOpXor Xor]]##.  Le résultat de cette manipulation étant envoyé comme pixel destination.
	Cette méthode fonctionne dans tous les modes graphiques.  Il n'y a pas de masque de couleur, cependant les valeurs de couleur ##0## (##[[KeyPgRgba RGBA]](0, 0, 0, 0)## dans les modes pleine couleur) n'auront aucun effet, en raison du comportement de ##[[KeyPgOpXor Xor]]##.

	Dans les modes pleine couleur, chaque composante (rouge, vert, bleu et alpha) est conservé dans un ensemble discret de bits, donc l'opération peut ne concerner qu'une partie des canaux, en s'assurant que les valeurs de tous les autres canaux sont mis à ##0##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/put-xor.bas"}}%%(freebasic)
''ouvrir une fenetre graphique
ScreenRes 320, 200, 16

''cree un sprite contenant un cercle
Const As Integer r = 32
Dim c As Any Ptr = ImageCreate(r * 2 + 1, r * 2 + 1, 0)
Circle c, (r, r), r, RGBA(255, 255, 255, 0), , , 1, f

''"Put" les trois sprites, se chevauchant au centre de l'ecran
Put (146 - r, 108 - r), c, xor
Put (174 - r, 108 - r), c, xor
Put (160 - r,  84 - r), c, xor

''libere la memoire utilisee par le sprite
ImageDestroy c

''pause le programme avant cloture
Sleep
%%
{{image class="center" title="Put Xor example output" url="/images/put-xor.png"}}
{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgOpXor Xor]]##
	- ##[[KeyPgPutgraphics Put (Graphics)]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}