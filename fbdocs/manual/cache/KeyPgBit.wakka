{{fbdoc item="title" value="BIT"}}----
Obtient l'&eacute;tat individuel d'un bit dans une valeur enti&egrave;re.

{{fbdoc item="syntax"}}##
	[[KeyPgPpdefine #define]] **Bit**( //value//, //bit_number// ) (((//value//) [[KeyPgOpAnd and]] ([[KeyPgCast Cast]]([[KeyPgTypeof TypeOf]](//value//), 1) [[KeyPgOpShiftLeft shl]] (//bit_number//))) <> 0)
##
{{fbdoc item="usage"}}##
	//result// = **Bit**( //value//, //bit_number// )
##
{{fbdoc item="param"}}
	##//value//##
		La valeur enti&egrave;re.
	##//bit_number//##
		L'indice du bit.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne une valeur ##[[KeyPgInteger Integer]]## de ##-1## si le bit est valide (1), ou ##0## si le bit est &agrave; 0.

{{fbdoc item="desc"}}
	Cette macro se d&eacute;veloppe en une valeur enti&egrave;re indiquant si oui ou non le bit sp&eacute;cifi&eacute; par ##//bit_number//## est valid&eacute; (&agrave; 1) dans ##//value//## enti&egrave;re. Se comporte comme `##(//value// [[KeyPgOpAnd And]] 1 [[KeyPgOpShiftLeft Shl]] //bit_number//) <> 0##`.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/bits/bit.bas"}}%%(freebasic)
PRINT BIT(4,2)
PRINT BIT(5,1)
PRINT BIT(&H8000000000000000ULL,63)
%%
	produira la sortie:

%%
-1
0
-1
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgBitset Bitset]]##
	- ##[[KeyPgBitreset Bitreset]]##

{{fbdoc item="back" value="CatPgBits|Bit Manipulation"}}