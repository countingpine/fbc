{{fbdoc item="title" value="GETJOYSTICK"}}----
Lecture des informations des boutons et des axes des dispositifs relatifs au jeu

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Getjoystick** ( [[KeyPgByval byval]] //id// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //buttons// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0, [[KeyPgByref byref]] //a1// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a2// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a3// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a4// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a5// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a6// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a7// [[KeyPgAs as]] [[KeyPgSingle single]] = 0, [[KeyPgByref byref]] //a8// [[KeyPgAs as]] [[KeyPgSingle single]] = 0 ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Getjoystick**( //id//[, //buttons//[, //a1//[, //a2//[, //a3//[, //a4//[, //a5//[, //a6//[, //a7//[, //a8//]]]]]]]]] )
##
{{fbdoc item="param"}}
	##//id//##
		nombre identificateur du dispositif (0 - 15)
	##//buttons//##
		l'&eacute;tat bouton
	##//a1//##
		valeur premier axe
	##//a2//##
		valeur second axe
	##//a3//##
		valeur troisi&egrave;me axe
	##//a4//##
		valeur quatri&egrave;me axe
	##//a5//##
		valeur cinqui&egrave;me axe
	##//a6//##
		valeur sixi&egrave;me axe
	##//a7//##
		valeur septi&egrave;me axe
	##//a8//##
		valeur huiti&egrave;me axe

{{fbdoc item="section" value="Valeur renvoy&eacute;e
	0 si succ&egrave;s ou 1 si &eacute;chec.  Toutes les valeurs des positions des axes sont retourn&eacute;es sous forme de nombres &agrave; virgule flottante.

{{fbdoc item="desc"}}
	##**GetJoystick**## retourne l'&eacute;tat bouton et les positions des axes, jusqu'&agrave; 8 axes, pour chaque joystick determin&eacute; par ##//id//##, un nombre de 0 &agrave; 15. Les valeurs des boutons sont stock&eacute;es de la m&ecirc;me fa&ccedil;on que pour ##[[KeyPgGetmouse GetMouse]]##, avec chaque bit //## repr&eacute;sentant un bouton.

	Une valeur simple pr&eacute;cision de ##-1.0## &agrave; ##1.0## est retourn&eacute;e pour chaque axe valide.  Si l'axe n'existe pas pour le contr&ocirc;leur, une valeur de ##-1000.00## est retourn&eacute;e.

	##**GetJoystick**## renvoie 0 apr&egrave;s r&eacute;ussite; renvoie 1 en cas d'&eacute;chec. L'&eacute;chec peut &ecirc;tre provoqu&eacute; par un nombre ill&eacute;gal de joystick, en sp&eacute;cifiant un joystick qui n'existe pas, ou un &eacute;chec de l'API joystick.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/input/getjoystick.bas"}}%%(freebasic)
screen 12

dim x as single
dim y as single
dim buttons as integer
dim result as integer
dim a as integer

const JoystickID = 0

'Cette ligne verifie si joystick est ok.

if GETJOYSTICK(JoystickID,buttons,x,y) then 
	print "Joystick doesn't exist or joystick error."
	print
	print "Press any key to continue."
	sleep
	end
end if


do
	result = GETJOYSTICK(JoystickID,buttons,x,y)

	locate 1,1
	print ;"result:";result;" x:" ;x;" y:";y;" Buttons:";buttons,"","",""
	
	'Ces tests pour voir quels boutons de 1 a 27 sont appuyes. 
	for a = 0 to 26 
	    if (buttons AND (1 shl a)) then 
	        print "Button ";a;" pressed.    "
	    else 
	        print "Button ";a;" not pressed."
	    end if
	next a
loop
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Getjoystick**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphique)]]##
	- ##[[KeyPgSetmouse Setmouse]]##
	- ##[[KeyPgGetmouse Getmouse]]##
	- ##[[KeyPgMultikey Multikey]]##

{{fbdoc item="back" value="CatPgGfxInput|User Input Functions"}}