{{fbdoc item="title" value="SADD"}}----
Retourne un pointeur vers les données d'une variable chaîne

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] [[KeyPgOverload overload]] **Sadd** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgString string]] ) [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Sadd** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgWstring Wstring]] ) [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Sadd** ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgZstring Zstring]] ) [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]]
##
{{fbdoc item="usage"}}##
	//result// = **Sadd**( //str// )
##
{{fbdoc item="param"}}
	##//str//##
		l'expression chaîne ou variable dont on veut obtenir l'adresse

{{fbdoc item="ret"}}
	Un pointeur vers les données associées à ##//str//##.

{{fbdoc item="desc"}}
	Retourne la position en mémoire des données dans la variable chaîne.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/memory/sadd.bas"}}%%(freebasic)
Dim s as String

Print SAdd(s)
s = "hello"
Print SAdd(s)
s = "abcdefg, 1234567, 54321"
Print SAdd(s)
%%

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgOpStrptr Strptr]]##
	- ##[[KeyPgOpVarptr Varptr]]##
	- ##[[KeyPgOpProcptr Procptr]]##

{{fbdoc item="back" value="CatPgMemory|Memory Functions"}}