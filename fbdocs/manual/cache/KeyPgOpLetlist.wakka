{{fbdoc item="title" value="Operator LET() (Assignment)"}}----
Assigne les champs d'un type défini par l'utilisateur à une liste de variables

{{fbdoc item="syntax"}}##
	**Let**( //variable1// [, //variable2// [, ... ]] ) = //UDT_var//
##
{{fbdoc item="param"}}
	##//variable1// [, //variable2// [, ... ]]##
		Liste de variables séparées par des virgules pour recevoir les valeurs des champs de la variable de type défini par l'utilisateur.
	##//UDT_var//##
		une variable de type défini par l'utilisateur.

{{fbdoc item="desc"}}
	Affecte les valeurs des champs de la variable ##//UDT_var//## à la liste des variables.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/let-list.bas"}}%%(freebasic)
Type Vector3D
	x As Double
	y As Double
	z as Double
End Type

Dim a As Vector3D = ( 5, 7, 9 )

Dim x As Double, y As Double

'' Get the first two fields only
Let( x, y ) = a

Print "x = "; x
Print "y = "; y
%%
Affiche:
%%
x =  5
y =  7
%%

{{fbdoc item="lang"}}
	- Utilisable seulement dans le dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgLet Let]]##
	- ##[[KeyPgOpAssignment Operator = (Affectation)]]##
	- ##[[KeyPgOpLet Operator Let (Affectation)]]##

{{fbdoc item="back" value="CatPgOpAssignment|Assignment Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}