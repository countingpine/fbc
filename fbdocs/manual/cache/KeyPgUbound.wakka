{{fbdoc item="title" value="UBOUND"}}----
Renvoie la limite sup&eacute;rieure d'une dimension d'un tableau

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Ubound** ( array() [[KeyPgAs as]] [[KeyPgAny any]], [[KeyPgByval byval]] //dimension// [[KeyPgAs as]] [[KeyPgInteger integer]] = 1 ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Ubound**( //array// [, //dimension// ] )
##
{{fbdoc item="param"}}
	##//array//##
		un tableau de n'importe quel type
	##//dimension//##
		la dimension dont on veut obtenir la limite sup&eacute;rieure

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Renvoie la limite sup&eacute;rieure d'une dimension d'un tableau.
 
{{fbdoc item="desc"}}
	##**UBound**## retourne la valeur la plus grande pouvant servir d'indice d'une dimension particuli&egrave;re d'un tableau.

	Les dimensions d'un tableau sont num&eacute;rot&eacute;es de un (1) &agrave; //n//, dans lequel //n// est le nombre total de dimensions. Si ##//dimension//## n'est pas sp&eacute;cifi&eacute;, ##**UBound**## retournera la limite sup&eacute;rieure de la premi&egrave;re dimension. Si ##//dimension//## est inf&eacute;rieur &agrave; un (1) ou sup&eacute;rieur au nombre total de dimensions (//n//) du tableau, le r&eacute;sultat est ind&eacute;fini.

{{fbdoc item="ex"}}

{{fbdoc item="filename" value="examples/manual/array/ubound.bas"}}%%(freebasic)
dim array(-10 to 10, 5 to 15, 1 to 2) as integer

print ubound(array) 'returns 10
print ubound(array, 2) 'returns 15
print ubound(array, 3) 'returns 2
%%

{{fbdoc item="filename" value="examples/manual/array/ubound2.bas"}}%%(freebasic)
'' determining the size of an array
Dim As Short array(0 To 9)
Dim As Integer arraylen, arraysize

arraylen = UBound(array) - LBound(array) + 1
arraysize = arraylen * SizeOf( Short )

Print "Number of elements in array:", arraylen    '10
Print "Number of bytes used in array:", arraysize '10 * 2 = 20 
%%

{{fbdoc item="filename" value="examples/manual/array/ubound3.bas"}}%%(freebasic)
'' determining the size of a multi-dimensional array
Dim As Long array4D(1 To 2, 1 To 3, 1 To 4, 1 To 5)
Dim As Integer arraylen, arraysize


arraylen = (UBound(array4D, 4) - LBound(array4D, 4) + 1) _
	     * (UBound(array4D, 3) - LBound(array4D, 3) + 1) _
	     * (UBound(array4D, 2) - LBound(array4D, 2) + 1) _
	     * (UBound(array4D, 1) - LBound(array4D, 1) + 1)

arraysize = arraylen * SizeOf( Long )

Print "Number of elements in array:", arraylen    '2 * 3 * 4 * 5 = 120
Print "Number of bytes used in array:", arraysize '120 * 4 = 480
%%

{{fbdoc item="see"}}
	- ##[[KeyPgLbound Lbound]]##
	- ##[[KeyPgStatic Static]]##
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgRedim Redim]]##
	- ##[[KeyPgSizeof Sizeof]]##

{{fbdoc item="back" value="CatPgArray|Array Functions"}}