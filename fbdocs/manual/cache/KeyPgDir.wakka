{{fbdoc item="title" value="DIR"}}----
Recherche et renvoie des informations sur un élément dans le système de fichiers, effectue une recherche dans les répertoire.

{{fbdoc item="syntax"}}##
	# [[KeyPgInclude include]] "dir.bi"

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Dir** [[KeyPgOverload overload]] ( [[KeyPgByref byref]] //item_spec// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]], [[KeyPgByval byval]] //attrib_mask// [[KeyPgAs as]] [[KeyPgInteger integer]] = **fbNormal**, [[KeyPgByref byref]] //out_attrib// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Dir** ( [[KeyPgByref byref]] //item_spec// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]], [[KeyPgByval byval]] //attrib_mask// [[KeyPgAs as]] [[KeyPgInteger integer]] = **fbNormal**, [[KeyPgByval byval]] //p_out_attrib// [[KeyPgAs as]] [[KeyPgInteger integer]] [[KeyPgPtr ptr]] = 0 ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Dir** ( [[KeyPgByval byval]] //attrib_mask// [[KeyPgAs as]] [[KeyPgInteger integer]] = **fbNormal**, [[KeyPgByref byref]] //out_attrib// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString string]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Dir** ( [[KeyPgByval byval]] //attrib_mask// [[KeyPgAs as]] [[KeyPgInteger integer]] = **fbNormal**, [[KeyPgByval byval]] //p_out_attrib// [[KeyPgAs as]] [[KeyPgInteger integer]] [[KeyPgPtr ptr]] = 0 ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Dir**( //item_spec//, [ //attrib_mask// ], //out_attrib// ] )
	//result// = **Dir**( //item_spec// [, [ //attrib_mask// ] [, //p_out_attrib// ] ] )
	//result// = **Dir**( //out_attrib// )
	//result// = **Dir**( [ //p_out_attrib// ] )
##
{{fbdoc item="param"}}
	##//item_spec//##
		Le modèle correspondant au nom d'un élément.
	##//attrib_mask//##
		Le masque de bits correspondant aux attributs d'un élément.
	##//out_attrib//##
		Référence à un masque de bits qui est assigné à chacun des attributs de l'objet trouvé, le cas échéant.
	##//p_out_attrib//##
		Pointeur vers un masque de bits qui est assigné à chacun des attributs de l'objet trouvé, le cas échéant.

{{fbdoc item="ret"}}
	Si aucun item correspondant au nom ##//item_spec//## ou au masque d'attribut ##//attrib_mask//## nest trouvé, alors ##//out_attrib//## (ou ##*//p_out_attrib//##) reçoit la valeur zéro et ue chaîne vide est retournée. Autrement, ##//out_attrib//## (ou ##*//p_out_attrib//##) reçoit le masque d'attribut de l'item, et le nom de l'item, sans chemin, est retourné.

{{fbdoc item="desc"}}
	Si ##//item_spec//## contient un chemin absolu, alors la première procédure recherche dans le système de fichiers un item qui correspond au nom ##//item_spec//## et dont tous les attributs sont tous contenus dans ##//attrib_mask//##. Autrement, il recherche par rapport au répertoire courant (voir ##[[KeyPgCurdir CurDir]]##). En tout cas, si aucun élément correspondant n'est trouvé, zéro est attribué à ##//out_attrib//## et une chaîne vide est retournée. Sinon, ##//out_attrib//## est affecté avec les indicateurs d'attribut de l'élément, et le nom de l'élément, sans chemin d'accès, est retourné.

	##//item_spec//## peut inclure un astérisque (##*##, pour correspondre à des caractères adjacents) ou un ou plusieurs points d'interrogation  (##?##, pour correspondre à tout caractère individuel). Si c'est le cas, la procédure recherche le premier item du genre. S'il est trouvé, les appels suivants avec ##//item_spec//## égal à une chaîne vide retournera l'élément suivant correspondant au nom ##//item_spec//## jusqu'à ce qu'aucun autre item correspondant ne soit trouvé. Si ##//attrib_mask//## est omis de ces appels ultérieurs, la procédure recherche des items avec les mêmes attributs que lors de l'appel précédent.

	La seconde procédure a le même comportement que ##**Dir**( //item_spec//, //attrib_mask//, *//p_out_attrib// )##.
	
	La troisième procédure a le même comportement que ##**Dir**( "####", , //out_attrib// )##.

	La quatrième procédure a le même comportement que ##**Dir**( "####", , *//p_out_attrib// )##.

**Attributs des fichiers:**
	Les fichiers, répertoires et autres items, si on peut dire, possèdent des sortes d'attributs de fichier; les métadonnées qui décrivent l'item. Le sens de ces métadonnées varie en fonction du système d'exploitation et du système utilisé. Les macros suivantes sont utilisées comme "bit-flags" avec ##//attrib_mask//##, ##//out_attrib//## et ##*//p_out_attrib//##. Leurs valeurs peuvent être combinées pour former un masque en utilisant l'##[[KeyPgOpOr Opérateur Or]]##. Pour y accéder, ##[[KeyPgInclude Include]] "dir.bi"##.

	## # define fbReadOnly &h01 ##
		//L'item ne peut être écrit ou supprimé.//
		**DOS & Windows**: L'item a l'attribut "read-only" (lecture seule) validé.
		**Linux**:L'item n'a pas de permission d'écriture associée avec l'utilisateur ou le groupe courant, il n'est pas accessible en écriture au niveau global.  (Que l'utilisateur ait ou non les permissions "root" n'a aucune importance.)

	## # define fbHidden &h02 ##
		//L'item est caché dans dans une liste normale de répertoire.//
		**DOS & Windows**: L'item a l'attribut "hidden" (caché) validé.
		**Linux**: Le nom de l'item a un point (##.##) comme premier caractère.

	## # define fbSystem &h04 ##
		//L'item est utilisé presque exclusivement par le système.//
		**DOS & Windows**: L'item a l'attribut "system" (système) validé.
		**Linux**: L'item est soit un périphérique en mode caractère, un périphérique en mode bloc, un tube nommé (FIFO) ou un socket Unix. 
	## # define fbDirectory &h10 ##
		//L'item est un répertoire. Inclus les répertoire courant (##.##) et parent (##..##).//
		**DOS & Windows**: L'item a l'attribut "directory" (répertoire) validé.		**Linux**: L'item est un répertoire.

	## # define fbArchive &h20 ##
		//L'item peut être sauvegardé après quelque opération automatisée.//
		**DOS & Windows**: L'item a l'attribut "archive" validé.		**Linux**: L'item n'est pas un répertoire; les systèmes de fichiers typiques ne supportent pas ces métadonnées.

	## # define fbNormal (fbReadOnly or fbArchive) ##
		//L'item est un fichier ou un répertoire.//

	Les items trouvés sans attributs correspondent toujours, indépendamment de la valeur de ##//attrib_mask//##. Un item ne correspondra pas s'il a un ou plusieurs attributs qui ne sont pas spécifiés dans ##//attrib_mask//##.
	De plus, si ##//attrib_mask// [[KeyPgOpAnd And]] **fbArchive**## égale zéro, alors ##//attrib_mask//## est attribué à ##//attrib_mask// [[KeyPgOpOr Or]] **fbDirectory**## avant de vérifier si les attributs du fichier correspondent.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/system/dir.bas"}}%%(freebasic)
#include "dir.bi" 'provides constants to use for the attrib_mask parameter

Sub list_files (byref filespec as string, byval attrib as integer)
	Dim filename As String

	filename = dir( filespec, attrib )
	Do
	    Print filename
	    filename = dir( )
	Loop While len( filename ) > 0
End Sub

Print "directories:"
list_files "*", fbDirectory

Print
Print "archive files:"
list_files "*", fbArchive
%%

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/system/dirretat.bas"}}%%(freebasic)
'' Example of using DIR function and retrieving attributes

#include "dir.bi" '' provides constants to match the attributes against

'' set input attribute mask to allow files that are normal, hidden, system or directory
Const attrib_mask = fbNormal Or fbHidden Or fbSystem Or fbDirectory ' = &h37

Dim As UInteger out_attr '' unsigned integer to hold retrieved attributes

Dim As String fname '' file/directory name returned with
Dim As Integer filecount, dircount

fname = Dir("*.*", attrib_mask, out_attr) '' Get first file name/attributes, according to supplied file spec and attribute mask

Print "File listing in " & CurDir & ":"

Do Until Len(fname) = 0 '' loop until Dir returns empty string

	If (fname <> ".") And (fname <> "..") Then '' ignore current and parent directory entries

	    Print fname,

	    If (out_attr And fbDirectory) <> 0 Then
	        Print "- directory";
	        dircount += 1
	    Else
	        Print "- file";
	        filecount += 1
	    End If
	    If (out_attr And fbReadOnly) <> 0 Then Print ", read-only";
	    If (out_attr And fbHidden) <> 0 Then Print ", hidden";
	    If (out_attr And fbSystem) <> 0 Then Print ", system";
	    If (out_attr And fbArchive) <> 0 Then Print ", archived";
	    Print

	End If

	fname = Dir(out_attr) '' find next name/attributes

Loop

Print
Print "Found " & filecount & " files and " & dircount & " subdirs"
%%

{{fbdoc item="target"}}
	- Linux requiert que la casse de ##//filename//## corresponde au nom réel du fichier. Windows et DOS ne sont pas sensibles à la casse.
	- Les séparateurs de chemin, sous Linux, sont des barres obliques ##/##. Windows utilise des anti-slashs ##\## mais il permet de barres obliques.  DOS utilise des anti-slashs.
	- Sous DOS, une valeur du masque "attrib" de ##&h37## (##&h3F## fonctionne habituellement aussi, mais ##&h37## est plus sûr) retourne tous les fichiers et répertoires, incluant "." and "..", mais pas de "Volume": la valeur ##8## retourne le "Volume", même si le répertoire courant n'est pas dans le répertoire principal.

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Dir""**##.

{{fbdoc item="diff"}}
	- N'existe pas en ""QBasic"" mais en Visual Basic.  Le paramètre ##//out_attrib//## est nouveau pour ""FreeBASIC"".

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgCurdir Curdir]]##
	- ##[[KeyPgMkdir Mkdir]]##
	- ##[[KeyPgRmdir Rmdir]]##

{{fbdoc item="back" value="CatPgOpsys|Operating System Functions"}}

