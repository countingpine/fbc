{{fbdoc item="title" value="REALLOCATE"}}----
R&eacute;affecte au stockage un bloc existant et r&eacute;serv&eacute; de la m&eacute;moire

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Reallocate** [[KeyPgCdecl cdecl]] ( [[KeyPgByval byval]] //pointer// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]], [[KeyPgByval byval]] //count// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]]
##
{{fbdoc item="usage"}}##
		//result// = **Reallocate**( //pointer//, //count// )
##
{{fbdoc item="param"}}
	##//pointer//##
		L'adresse de m&eacute;moire allou&eacute;e qui doit &ecirc;tre r&eacute;affect&eacute;e.
	##//count//##
		Le nombre total d'octets qui doivent &ecirc;tre r&eacute;affect&eacute;s.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	L'adresse de la m&eacute;moire r&eacute;affect&eacute;e. Un pointeur nul (##0##) est retourn&eacute; si la r&eacute;allocation a &eacute;chou&eacute; et la m&eacute;moire d'origine point&eacute;e par ##//pointer//## reste inchang&eacute;e.

{{fbdoc item="desc"}}
	Essaye de r&eacute;affecter ou de redimensionner, la m&eacute;moire pr&eacute;c&eacute;demment r&eacute;serv&eacute;e avec ##[[KeyPgAllocate Allocate]]##. Le contenu de la m&eacute;moire tampon est conserv&eacute;, mais si ##//count//## est inf&eacute;rieur &agrave; la taille d'origine du bloc de m&eacute;moire, la m&eacute;moire tampon sera tronqu&eacute;e.

	Si ##//pointer//## est nul (##0##), alors le comportement de ##ReAllocate## est identique &agrave; celui de ##[[KeyPgAllocate Allocate]]##.

	La m&eacute;moire r&eacute;allou&eacute;e doit &ecirc;tre d&eacute;sallou&eacute;e ou lib&eacute;r&eacute;e, avec ##[[KeyPgDeallocate Deallocate]]## quand elle n'est plus utilis&eacute;e.

	Cette fonction ne fait pas partie de la biblioth&egrave;que d'ex&eacute;cution de FreeBASIC, c'est un alias pour ##//realloc//## de la biblioth&egrave;que d'ex&eacute;cution du langage C, ce n'est donc pas garanti d'&ecirc;tre "thread-safe" sur toutes les plates-formes.

	**NOTE**: La r&eacute;affectation d'un pointeur dans une fonction d'objet, quand ce pointeur contient l'objet parent de la fonction, est ind&eacute;finie et entra&icirc;nera probablement dans des accidents horribles.

	{{fbdoc item="ex"}}
	
	%%(freebasic)

Dim a As Integer Ptr, b As Integer Ptr, i As Integer
a = Allocate( 5 * SizeOf(Integer) )   ' Allocate memory for 5 integers
If a = 0 Then Print "Error Allocating a": End

For i = 0 To 4

a[i] = (i + 1) * 2   ' Assign integers to the buffer

Next i
  b = Reallocate( a, 10 * SizeOf(Integer) )   ' Reallocate memory for 5 additional integers
If b <> 0 Then

a = b

For i = 5 To 9

	a[i] = (i + 1) * 2   ' Assign more integers to the buffer

	Next i
	  For i = 0 To 9   ' Print the integers
	Print i, a[i]

	Next i
	  Print
	Else '' Reallocate failed, memory unchanged
	Print "Error Reallocating a"

For i = 0 To 4   ' Print the integers

	Print i, a[i]

	Next i
	  Print
	End If
	Deallocate a   ' Clean up

%%

{{fbdoc item="lang"}}
- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Reallocate**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgAllocate Allocate]]##

- ##[[KeyPgCallocate CAllocate]]##
	- ##[[KeyPgDeallocate Deallocate]]##
	- ##[[KeyPgCallocate Callocate]]##
	- ##[[KeyPgDeallocate Deallocate]]##

{{fbdoc item="back" value="CatPgMemory|Memory Functions"}}