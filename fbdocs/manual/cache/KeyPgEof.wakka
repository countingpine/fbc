{{fbdoc item="title" value="EOF"}}----
V&eacute;rifie si la fin d'un fichier ouvert a &eacute;t&eacute; atteinte

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Eof** ( [[KeyPgByval byval]] //filenum// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Eof**( //filenum// )
##
{{fbdoc item="param"}}
	##//filenum//##
		Un ##[[KeyPgInteger Integer]]## num&eacute;ro d'un fichier ouvert.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne vrai (true) (-1) si la fin du fichier (End Of File) a &eacute;t&eacute; atteinte, autrement z&eacute;ro (0).

{{fbdoc item="desc"}}
	Lors d'une lecture de fichier ouvert avec ##[[KeyPgInputfilemode Input (File Mode)]]##, il est utile de savoir quand la fin du fichier est atteinte, ceci &eacute;vite d'avoir une erreur caus&eacute;e par un essai de lecture apr&egrave;s la fin du fichier. L'utilisation de ##**EOF**## permet de d&eacute;terminer quand on a atteint la fin. ##**EOF**## attend un num&eacute;ro valide de fichier d&eacute;j&agrave; ouvert. Utilisez ##[[KeyPgFreefile FreeFile]]## pour r&eacute;cup&eacute;rer un num&eacute;ro de fichier disponible.

	Pour les num&eacute;ros de fichiers li&eacute;s aux fichiers ouverts pour ##[[KeyPgOutput Output]]##, EOF retourne toujours 0.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/eof.bas"}}%%(freebasic)
'' This code finds a free file number to use and attempts to open the file
'' "file.ext" and if successful, binds our file number to the opened file. It
'' reads the file line by line, outputting it to the screen. We loop until eof()
'' returns true, in this case we ignore the loop if file is empty.

dim as string file_name
dim as integer file_num

file_name = "file.ext"
file_num = freefile( )                 '' retrieve an available file number

'' open our file and bind our file number to it, exit on error
if( open( file_name for input as #file_num ) ) then
   print "ERROR: opening file " ; file_name
   end -1
end if

do until eof( file_num )               '' loop until we have reached the end of the file
   dim as string text
   line input #file_num, text               '' read a line of text ...
   print text                             '' ... and output it to the screen
loop

close #file_num                        '' close file via our file number

end 0
%%

	En raison des diff&eacute;rences sous-jacentes dans les librairies utilis&eacute;es par le compilateur sur les diff&eacute;rentes plates-formes, la fonction ##**EOF**## peut &ecirc;tre peu fiable lors de la lecture de fichiers texte cr&eacute;&eacute;s dans Linux (avec des fins de ligne indiqu&eacute;es par LF) dans la version Windows du compilateur. Les compilateur DOS et Linux n'ont pas ce probl&egrave;me. Une solution consiste &agrave; ouvrir le fichier pour un acc&egrave;s [[KeyPgBinary Binary]] au lieu d'un [[KeyPgInputfilemode Input]]. [[KeyPgLineinputPp Line Input#]] et ##**EOF**## peuvent encore &ecirc;tre utilis&eacute;s comme dans l'exemple ci-dessus, et la fonction EOF sera fiable. Cette solution ne d&eacute;tecte pas le caract&egrave;re de fin de fichier, mais ceci n'est utilis&eacute; que pour marquer la fin des flux de texte qui ne sont pas des fichiers sur le disque.

{{fbdoc item="diff"}}
	- Dans QB le port COM signale un EOF quand il n'y a aucun caract&egrave;re en attente de lecture.
	- Dans QB, pour les fichiers ouverts en mode RANDOM ou BINARY, EOF retourne une valeur diff&eacute;rente de z&eacute;ro seulement apr&egrave;s une lecture une fois la fin du fichier atteinte.  Dans FreeBASIC, EOF retourne "true" (vrai) apr&egrave;s la lecture du dernier item.

{{fbdoc item="see"}}
	- ##[[KeyPgLof Lof]]##
	- ##[[KeyPgLoc Loc]]##
	- ##[[KeyPgFreefile Freefile]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}