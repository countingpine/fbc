{{fbdoc item="title" value="WBIN"}}----
Retourne la  "wstring" (Unicode) binaire représentant un nombre

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** [[KeyPgOverload overload]] ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgByte byte]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgByte byte]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgShort short]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgShort short]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]

	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Wbin** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgLongint longint]], [[KeyPgByval byval]] //digits// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgWstring wstring]]
##
{{fbdoc item="usage"}}##
	//result// = **Wbin**( //number// [, //digits//] )
##
{{fbdoc item="param"}}
	##//number//##
		Un nombre entier ou expression à évaluer.
	##//digits//##
		Facultatif: nombre de chiffres de la chaîne à retourner.

{{fbdoc item="ret"}}
	Retourne une [[KeyPgString String (chaîne)]] binaire représentant un //number//.

{{fbdoc item="desc"}}
	Retourne ##[[KeyPgWstring wstring]}## (Unicode) représentant la valeur binaire de l'entier ##//expression//##. Chiffres binaires de 0 à 1.

	Si vous spécifiez ##//digits//## > 0, le résultat ##//wstring//## aura exactement cette longueur.  Il sera tronqué ou complété avec des zéros sur la gauche, si nécessaire.

	La longueur de ##[[KeyPgWstring wstring]}## ne sera pas plus grande que le nombre maximum de bits requis pour le type de ##//expression//## (32 pour un entier, 64 pour un nombre à virgule flottante ou un entier long)

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/wbin.bas"}}%%(freebasic)
PRINT WBIN(54321)
PRINT WBIN(54321, 5)
PRINT WBIN(54321, 20)
%%
	produira la sortie:

%%1101010000110001
10001
00001101010000110001
%%
{{fbdoc item="target"}}
	- (w)strings Unicode ne sont pas supportées par le portage DOS de FreeBASIC.


{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**__WBin**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgBin Bin]]##
	- ##[[KeyPgWhex Whex]]##
	- ##[[KeyPgWoct Woct]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}