{{fbdoc item="title" value="PEEK"}}----
Obtient la valeur d'un type arbitraire à une adresse dans la mémoire

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Peek** ( [[KeyPgByval byval]] //address// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]] ) [[KeyPgAs as]] [[KeyPgUbyte ubyte]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Peek** ( //datatype//, [[KeyPgByval byval]] //address// [[KeyPgAs as]] [[KeyPgAny any]] [[KeyPgPtr ptr]] ) [[KeyPgAs as]] //datatype//
##
~&//Note: ##**Peek**## retourne une référence à la valeur à l'adresse indiquée. Voir [[CompilerFAQ FAQ du compilateur]].//

{{fbdoc item="usage"}}##
	**Peek**( [ //datatype//, ] //address// )
##
{{fbdoc item="param"}}
	##//address//##
		L'adresse mémoire dont on veut obtenir la valeur.
	##//datatype//##
		Le type de valeur à obtenir.  En cas d'omission, la valeur par défaut correspond au type du pointeur passé ou à ##[[KeyPgUbyte ubyte]]##, si l'adresse est un ##[[KeyPgInteger integer]]## ou un ##[[KeyPgAny any]] [[KeyPgPtr ptr]]##.

{{fbdoc item="desc"}}
	Cette procédure renvoie une référence à la valeur en mémoire donnée par une adresse mémoire, et est équivalente à:

		##*cast(ubyte ptr, //address//)##
			ou
		##*cast(//datatype// ptr, //address//)##

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/memory/peek.bas"}}%%(freebasic)
Dim i As Integer, p As Integer Ptr
p = @i

Poke Integer, p, 420
Print Peek(Integer, p)
%%
	affichera:

%%420
%%

{{fbdoc item="diff"}}
	- **##Peek##** ne supportait pas le paramètre ##//datatype//## dans QB, et ne pouvait retourner des octets  individuels.
	- **##Peek##** retourne une référence dans FB et peut donc être utilisé pour définir le contenu de la mémoire à l'adresse, comme avec ##[[KeyPgOpValueOf Operator * (Value of)]]##.
	- ##DEF SEG## n'est pas nécessaire parce que l'espace d'adressage est "32-bit flat" dans ""FreeBASIC"".

{{fbdoc item="see"}}
	- ##[[KeyPgPoke Poke]]##
	- ##[[KeyPgOpValueOf Operator * (Value of)]]##
{{fbdoc item="back" value="CatPgMemory|Memory Functions"}}