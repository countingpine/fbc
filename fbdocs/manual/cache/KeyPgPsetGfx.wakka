{{fbdoc item="title" value="PSET"}}----
Param&egrave;tre de la d&eacute;claration graphique ##[[KeyPgPutgraphics Put]]## qui s&eacute;lectionne ##[[KeyPgPset PSet]]## comme m&eacute;thode de 'blitting'

{{fbdoc item="syntax"}}##
	**Put** [ //target//, ] [ STEP ] ( //x//,//y// ), //source// [ ,( //x1//,//y1// )-( //x2//,//y2// ) ], **Pset**
##
{{fbdoc item="param"}}
	##**PSet**##
		Obligatoire.

{{fbdoc item="desc"}}
	La m&eacute;thode ##**PSet**## copie les valeurs des pixels source sur les pixels destination.

	C'est la plus simple m&eacute;thode ##[[KeyPgPutgraphics Put]]##. Les pixels du tampon destination sont directement remplac&eacute;s par les pixels du tampon source.  Aucune op&eacute;ration suppl&eacute;mentaire n'est effectu&eacute;e, et il n'y a aucune valeur de couleur tra&icirc;t&eacute;e comme transparente.  Cela a le m&ecirc;me effet qu'un ##[[KeyPgPset PSet]]## individuel de chaque pixel.

{{fbdoc item="ex"}}
	%%(freebasic)
'' Valide ecran  320 * 200, 16 bits par pixel
screenres 320, 200, 16
line (0, 0)-(319, 199), rgb(0, 128, 255), bf

'' Valide une image avec le masque couleur arriere-plan.
dim img as any ptr = imagecreate( 33, 33, rgb(255, 0, 255) )
circle img, (16, 16), 15, rgb(255, 255, 0),     ,     , 1, f
circle img, (10, 10), 3,  rgb(  0,   0, 0),     ,     , 2, f
circle img, (23, 10), 3,  rgb(  0,   0, 0),     ,     , 2, f
circle img, (16, 18), 10, rgb(  0,   0, 0), 3.14, 6.28

dim as integer x = 160 - 16, y = 100 - 16

'' Put l' image avec PSET
put (x, y), img, pset

'' Libere memoire image
imagedestroy img

'' Attente touche appuyee
sleep
%%
<div class="fb_img"><img src="images/putpset.png" />
{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgPset PSet]]##
	- ##[[KeyPgPutgraphics Put (Graphique)]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}