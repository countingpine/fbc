{{fbdoc item="title" value="Put (Entr&eacute;e/Sortie fichiers)"}}----
Ecrit des données d'un tampon vers un fichier

{{fbdoc item="syntax"}}##
	**Put** #//filenum// [[KeyPgAs As]] [[KeyPgInteger integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], //data// [[KeyPgAs As]] [[KeyPgAny Any]] [, //amount// [[KeyPgAs As]] [[KeyPgInteger Integer]]]
	**Put** #//filenum// [[KeyPgAs As]] [[KeyPgInteger Integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], //data// [[KeyPgAs As]] [[KeyPgString String]]
	**Put** #//filenum// [[KeyPgAs As]] [[KeyPgInteger Integer]], [//position// [[KeyPgAs As]] [[KeyPgLongint longint]]], //data()// [[KeyPgAs As]] [[KeyPgAny Any]]
##
{{fbdoc item="usage"}}##
	**Put** #//filenum//, //position//, //data// [, //amount//]
	varres = **Put** (#//filenum//, //position//, //data// [, //amount//])
##
{{fbdoc item="param"}}
	##//filenum//##
		La valeur passée à ##[[KeyPgOpen Open]]## lorsque le dossier a été ouvert.
	##//position//##
		Est la position où ##**Put**## doit commencer dans le fichier. Si le fichier a été ouvert en mode ##//For Random//##, la position est évaluée en enregistrements, sinon elle est évaluée en octets. Si omise, l'écriture commence à la position actuelle du pointeur.  La position est basée sur 1: par exemple le premier enregistrement ou octet est à la position ##1##.
		Si ##//position//## est omise ou zéro (##0##), l'écriture dans le fichier commencera à partir de la position courante dans le fichier.
	##//data//##
		Est le tampon mémoire à partir duquel les données sont écrites. Il peut être une variable numérique, une chaîne, un tableau ou un type défini par l'utilisateur. L'opération va essayer de transférer sur le disque la variable complète, sauf si ##//amount//## est précisé.
		Lorsque ##**Put**## concerne un tableau, ##//data//## doit être suivi par une paire de parenthèses vides: '##()##'.  ##**Put**## écrira toutes les données du tableau.  ##//amount//## n'est pas permis.
		Lorsque ##**Put**## concerne une ##[[KeyPgString String]]##, le nombre d'octets écrits est le même que le nombre d'octets dans la chaîne.  ##//amount//## n'est pas permis.
		Note: Si vous voulez écrire des valeurs à partir d'un tampon, vous NE DEVEZ PAS passer un pointeur vers la mémoire tampon; au lieu de cela vous devez passer la première variable dans la mémoire tampon.  (Cela peut être fait par le déréférencement du pointeur avec ##[[KeyPgOpValueOf Operator * (Valeur de)]]##.)  ##**Put**## déduira automatiquement que le reste de la mémoire tampon se poursuit après la première variable.  Si vous passez un pointeur directement, alors ##**Put**## utilisera la mémoire à partir de la variable pointeur et non pas la mémoire pointée par lui.
	##//amount//##
		##Put## écrira dans le fichier ##//amount//## variables consécutives - c'est à dire qu'il écrira, dans le fichier, ##( //amount// * [[KeyPgSizeof Sizeof]](//data//) )## octets de données, commençant à la position ##//data//## dans la mémoire.  Si ##//amount//## est omis sa valeur par défaut est ##1##, ce qui signifie que ##**Put**## n'écrit qu'une seule variable.

{{fbdoc item="ret"}}
	##0## si succès; non zéro si erreur. "disk full" (disque complet) est considéré comme une erreur et il en résulte un code retour de ##3##. La quantité "exacte" des données écrites avant n'est pas disponible et ce ne serait pas vraiment utile de toute façon. 

{{fbdoc item="desc"}}
	Écrit des données binaires à partir d'une variable tampon dans un fichier ouvert en mode ##[[KeyPgBinary Binary]]## ou ##[[KeyPgRandom Random]]##.

	##**Put**## peut être utilisé comme une fonction, et retournera ##0## si succès ou un code d'erreur si échec.

	Pour les fichiers ouverts en mode ##[[KeyPgRandom Random]]##, la taille en octets des données à écrire doit correspondre à la taille spécifiée de l'enregistrement.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/put.bas"}}%%(freebasic)
' Create integer variables (our buffer has just 4 bytes)
Dim As Integer buffer , f 

' Find the first free file file number.
f = Freefile

' Open the file "file.ext" for binary usage, using the file number "f".
Open "file.ext" For Binary As #f
  buffer=10
  ' Write 4 bytes from the buffer into the file, using file number "f"
  ' starting at the beginning of the file (1).
  Put #f, 1, buffer

' Close the file.  
Close #f

' End the program.
End
%%

{{fbdoc item="filename" value="examples/manual/fileio/put-array.bas"}}%%(freebasic)
' Create an integer array
Dim buffer(1 To 10) As Integer
Dim i As Integer
For i = 1 To 10
	buffer(i) = i
Next

' Find the first free file file number.
Dim f As Integer
f = Freefile

' Open the file "file.ext" for binary usage, using the file number "f".
Open "file.ext" For Binary As #f
' Write the array into the file, using file number "f"
' starting at the beginning of the file (1).
Put #f, 1, buffer()

' Close the file.
Close #f

' End the program.
End
%%

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/put-buffer.bas"}}%%(freebasic)
Dim As Byte Ptr lpBuffer
Dim As Integer hFile, Counter, Size

Size=256

lpBuffer=Allocate(Size)
For Counter=0 to Size-1
  lpBuffer[Counter]=(Counter and &HFF)
Next

' Get free file file number.
hFile = Freefile()

' Open the file "test.bin" in binary writing mode.
Open "test.bin" For Binary Access Write As #hFile
  ' Write 256 bytes from the memory pointened by lpBuffer.
  Put #hFile, , lpBuffer[0],Size
' Close the file.  
Close #hFile
' Free the allocated memory.
Deallocate lpBuffer
' End the program.
End
%%
{{fbdoc item="diff"}}
	- ##**Put**## peut écrire des tableaux pleins comme dans VB ou, à défaut, écrire un multiple de la taille des données à partir de la position mémoire ##//buffer//##.
	- ##**Put**## peut être utilisé comme une fonction dans FB, pour déterminer s'il y a eu succès ou si un code d'erreur a été renvoyé sans avoir à utiliser les procédures de gestion des erreurs.

{{fbdoc item="see"}}
	- ##[[KeyPgPutgraphics Put (Graphique)]]## utilisation différente du même mot-clé 
	- ##[[KeyPgGetfileio Get (Entrée/Sortie fichiers)]]##
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgClose Close]]##
	- ##[[KeyPgRandom Random]]##
	- ##[[KeyPgBinary Binary]]##
	- ##[[KeyPgFreefile Freefile]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}

