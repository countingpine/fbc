{{fbdoc item="title" value="ANY"}}----
##**Any**## n'est pas un type réel, mais il est utilisé comme un espace réservé de diverses manières.

{{fbdoc item="syntax"}}##
	//identifier// [[KeyPgAs as]] **Any** [[KeyPgPointer Pointer]]|[[KeyPgPtr ptr]]
//ou//
	[[KeyPgDeclare declare]] { [[KeyPgSub sub]] | [[KeyPgFunction function]] } //identifier// ( [ ..., ] [[KeyPgByref byref]] //identifier// [[KeyPgAs as]] **Any** [ , ... ] )
//ou//
	[[KeyPgDim Dim]] //identifier// [[KeyPgAs as]] [[DataType datatype]] = **Any**
##
{{fbdoc item="usage"}}##
	**##1)**## Dim //identifier// as **Any** ptr
//ou//
	**##1)**## Declare Sub //identifier// ( [ byval | byref ] //identifier// as **Any** ptr )
//ou//
	**##2)**## Dim //identifier// As //datatype// = **Any**
//ou//
	**##3)**## Declare Sub //identifier// ( byref //identifier// as **Any** )
##
{{fbdoc item="desc"}}
	##**Any**## peut être utilisé dans trois contextes: pointeurs, initialiseur de variable, arguments pointeur de fonctions et déclarations de fonction pour indiquer un type de données inconnu.
	##**1)**## Un type pointeur spécial appelé le ##**Any** [[KeyPgPtr Pointer]]**## permet de pointer vers n'importe quel type de variable. Si vous le convertissez (cast) en un ##[[KeyPgInteger Integer]] [[KeyPgPtr Pointer]]##, il fonctionnera sur le sujet comme s'il s'agissait d'un ##[[KeyPgInteger Integer]]##, etc.

	Vous ne pouvez pas créer des variables de type ##**Any**##. Il est illégal de déréférencer un ##**Any Pointer**##, mais un ##**Any Pointer Pointer**## peut être déréférencé, parce que cela se traduira par un ##**Any Pointer**##. Essayer de déréférencer ce ##**Any Pointer**## qui en résulte serait illégal.
	
	Cela ne doit pas être confondu avec ##//Variant//##, un type de données Visual Basic qui peut contenir tout type de variable. ""FreeBASIC"" ne supporte pas nativement le type ##//Variant//##.
	
	##**2) **## ##**Any**## peut être utilisé comme un faux initialiseur pour désactiver l'initialisation par défaut à ##0## des variables. Cela peut faire gagner du temps dans les sections critiques des programmes. Il appartient au programme de remplir les variables avec des données significatives. Vous pouvez reconnaître que c'est le comportement par défaut du langage C.

	##**3) **## **##Any##** peut être utilisé dans les prototypes de fonctions (dans une déclaration ##[[KeyPgDeclare Declare]]##) avec des arguments ##[[KeyPgByref ByRef]]## pour désactiver la vérification du compilateur du bon type de variable passée. Cette utilisation de ##**Any**## est obsolète et n'est là que pour la compatibilité avec QB, où c'était le seul moyen de passer des tableaux comme arguments.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/misc/any.bas"}}%%(freebasic)
Declare Sub echo(ByVal x As Any Ptr) '' echo will accept any pointer type

Dim As Integer a(0 To 9) = Any '' this variable is not initialized
Dim As Double  d(0 To 4)

Dim p As Any Ptr

Dim pa As Integer Ptr = @a(0)
Print "Not initialized ";
echo pa       '' pass to echo a pointer to integer

Dim pd As Double Ptr = @d(0)
Print "Initialized ";
echo pd       '' pass to echo a pointer to double

p = pa     '' assign to p a pointer to integer
p = pd     '' assign to p a pointer to double

Sleep

	Sub echo (ByVal x As Any Ptr)
	Dim As Integer i
	    For i = 0 To 39
	    'echo interprets the data in the pointer as bytes
	Print Cast(UByte Ptr, x)[i] & " ";
	Next
Print
End Sub
%%

{{fbdoc item="filename" value="examples/manual/misc/any-param.bas"}}%%(freebasic)
'Example of ANY disabling the variable type checking
Declare Sub echo (ByRef a As Any) '' ANY disables the checking for the type of data passed to the function

Dim x As Single
x = -15             
echo x                  '' Passing a single to a function that expects an integer. The compiler does not complain!!
Sleep

  Sub echo (ByRef a As Integer)         
Print Hex(a)
End Sub

%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Pointeurs et initialiseurs sont nouveaux pour FreeBASIC.

{{fbdoc item="see"}}
	- ##[[KeyPgDim Dim]]##
	- ##[[KeyPgDeclare Declare]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}
