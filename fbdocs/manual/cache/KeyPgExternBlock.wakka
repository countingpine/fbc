{{fbdoc item="title" value="EXTERN...END EXTERN"}}----
Bloc d'instructions permettant d'appeler des fonctions compilées pour des langages ou des plates-formes spécifiques.

{{fbdoc item="syntax"}}##
	**Extern { """C""" | """C++""" | """Windows""" | """Windows-MS""" }** [ **[[KeyPgLib Lib]]** "//libname//" ]
		//declarative statements//
	**End Extern**
##
{{fbdoc item="desc"}}
	Les blocs ##**Extern**## fournissent par défaut des conventions d'appel pour les procédures et mandatent une certaine "name decoration".

	Les blocs ##**Extern """C"""**## fournissent par défaut une convention d'appel ##[[KeyPgCdecl cdecl]]## pour les procédures et préservent aussi la casse de tous les noms déclarés dans celles-ci. Le même résultat peut être obtenu en utilisant ##[[KeyPgCdecl cdecl]]## en même temps qu'un ##[[KeyPgAlias alias]]## chaîne contenant le nom exact de la procédure.

	Les blocs ##**Extern """C++"""**## sont exactement comme les blocs ##**Extern """C"""**## mais ils transforment aussi les noms déclarés à l'intérieur d'une manière compatible avec celle de //g""++""-4.x//.

	Les blocs ##**Extern """Windows"""**## fournissent par défaut une convention d'appel ##[[KeyPgStdcall Stdcall]]## pour les procédures, préservent la casse de tous les noms déclarés à l'intérieur de celles-ci et sur les plates-formes Windows, ajoutent un suffixe ##"@//N//"## aux noms des procédures, où ##//N//## est la taille totale en octets des paramètres de la procédure. Similaire au bloc ##**Extern """C"""**##, le même effet est obtenu en utilisant ##[[KeyPgStdcall stdcall]]## et ##[[KeyPgAlias alias]]##.

	Les blocs ##**Extern """Windows-MS"""**## sont identiques aux blocs ##**Extern """Windows"""**## mais n'ajoutent pas le suffixe ##"@//N//"## aux noms de procédure sur les plates-formes Windows.
	
	##[[KeyPgLib Lib]] "//libname//"## peut être utilisé pour spécifier une librairie qui sera liée comme si on avait utilisé ##[[KeyPgInclib #inclib "libname"]]## ou ##[[CompilerOptl -l libname]]##. De plus, toutes les déclarations de procédures à l'intérieur du bloc **Extern** utiliseront ##[[KeyPgLib Lib]] "//libname//"## comme si cela avait été spécifié dans le cadre de leurs déclarations (mais cela peut être modifié par un ##[[KeyPgLib Lib]] "//libname//"## explicite.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/module/extern-block.bas"}}%%(freebasic)
extern "C"
	'' This procedure uses the CDECL convention and is seen externally
	'' as "SomeProcedure".
	declare sub SomeProcedure ( byval as integer )
end extern

extern "C++"
	'' This procedure uses the CDECL convention and its name is mangled
	'' compatible to that of g++-4.x.
	declare function AnotherProcedure ( byval as integer ) as integer
End Extern

extern "Windows"
	'' This procedure uses the STDCALL convention and is seen externally
	'' as "YetAnotherProcedure@4" on Windows, and
	'' "YetAnotherProcedure" on Linux, *BSD and DOS.
	declare function YetAnotherProcedure ( byval as integer ) as integer
end extern

extern "Windows-MS"
	'' This procedure uses the STDCALL convention and is seen externally
	'' as "YetAnotherProcedure".
	declare function YetAnotherProcedure ( byval as integer ) as integer
end extern
%%

{{fbdoc item="lang"}}
	- Les blocs ##**Extern**## sont disponibles seulement en dialecte //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="target"}}
	- Dans les plates-formes Linux, *BSD and DOS les blocs ##**Extern "Windows"**## n'ajoutent jamais le suffixe ##"@//N//"## aux noms des procédures et sont donc équivalents à ##**Extern "Windows-MS"**##.

{{fbdoc item="see"}}
	- ##[[KeyPgCdecl Cdecl]]##
	- ##[[KeyPgStdcall Stdcall]]##
	- ##[[KeyPgExtern Extern]]##

{{fbdoc item="back" value="CatPgModularizing|Modularizing"}}

