{{fbdoc item="title" value="Temporary Types"}}----
Cr&eacute;e une copie temporaire d'un type d&eacute;fini par l'utilisateur

{{fbdoc item="syntax"}}##
	//result// = **Type**( //initializers//, ... )
		//or//
	//result// = **Type**<//typename//>( //initializers//, ... )
##
{{fbdoc item="param"}}
	##//initializers//##
		Valeurs initiales pour le type
	##//typename//##
		Le nom du ##[[KeyPgType Type]]## ou de l'##[[KeyPgUnion Union]]##

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Une copie temporaire du type.

{{fbdoc item="desc"}}
	Utilis&eacute; pour cr&eacute;er un type anonyme et temporaire.  Si ##//typename//## n'est pas explicitement donn&eacute;,  il sera d&eacute;duit de par son utilisation.  L'utilisation de la copie temporaire peut &ecirc;tre de l'assigner &agrave; une variable, de la passer comme un parametre &agrave; une proc&eacute;dure, ou comme valeur retourn&eacute;e par une proc&eacute;dure.

	Le ##[[KeyPgConstructor Constructor]]## du type, s'il existe, devrait &ecirc;tre appel&eacute; quand la copie temporaire est cr&eacute;&eacute;e.  Et le ##[[KeyPgDestructor Destructor]]## du type, s'il existe, devrait &ecirc;tre appel&eacute; imm&eacute;diatement apr&egrave;s son utilisation.

	Il peut &eacute;galement &ecirc;tre utilis&eacute; comme un raccourci encore plus court que ##[[KeyPgWith With]]## (voir plus loin) si vous changez tous les enregistrements.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/temp-type.bas"}}%%(freebasic)
Type Example
	As Integer field1
	As Integer field2
End Type

Dim ex As Example

'' Filling the type by setting each field
ex.field1 = 1
ex.field2 = 2

'' Filling the type by setting each field using WITH
With ex
	.field1 = 1
	.field2 = 2
End With

'' Fill the variable's fields with a  temporary type
ex = Type( 1, 2 )
%%

{{fbdoc item="filename" value="examples/manual/udt/temp-type2.bas"}}%%(freebasic)
'' Passing a user-defined types to a procedure using a temporary type
'' where the type can be inferred.

Type S
  As Single x, y
End Type

Sub test ( v As S )
  Print "S", v.x, v.y
End Sub

test( type( 1, 2 ) )
%%

{{fbdoc item="filename" value="examples/manual/udt/temp-type3.bas"}}%%(freebasic)
'' Passing a user-defined type to a procedure using temporary types
'' where the type is ambiguous and the name of the type must be specified.

Type S
  As Single x, y
End Type

Type T
  As Integer x, y
End Type

Union U
  As Integer x, y
End Union

'' Overloaded procedure test()
Sub test overload ( v As S )
  Print "S", v.x, v.y
End Sub

Sub test ( v As T )
  Print "T", v.x, v.y
End Sub

Sub test ( v As U )
  Print "U", v.x, v.y
End Sub

'' Won't work: ambiguous
'' test( type( 1, 2 ) )

'' Specify name of type instead
test( type<S>( 1, 2 ) )
test( type<T>( 1, 2 ) )
test( type<U>( 1 ) )
%%

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgType Type...End Type]]##
	- ##[[KeyPgTypeAlias Type (Alias)]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}{{fbdoc item="back" value="CatPgProgrammer|Programmer's Guide"}}