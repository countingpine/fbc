{{fbdoc item="title" value="IIF"}}----
Fonction conditionnelle qui retourne une des deux valeurs.

{{fbdoc item="syntax"}}##
	**IIf** ( //condition//, //expr_if_true//, //expr_if_false// )
##
{{fbdoc item="param"}}
	##//condition//##
		La condition à tester.
		Une valeur non-nulle est équivalente à vrai (true), alors qu'une valeur de zéro est équivalente à faux (false).
	##//expr_if_true//##
		Une expression à évaluer et à retourner si la ##//condition//## est vrai (true).
		Elle doit retourner une valeur numérique, qui peut être un nombre entier, nombre à virgule flottante ou un pointeur.
	##//expr_if_false//##
		Une expression à évaluer et à retourner si la ##//condition//## est fausse (false).
		Elle doit avoir le même type de nombre que ##//expr_if_true//##.

{{fbdoc item="desc"}}
	##**IIf**## renvoie une valeur numérique différente selon le résultat d'une expression conditionnelle. Son utilisation typique est au milieu d'une expression; cela évite de la diviser pour placer une condition au milieu.

	##**IIf**## n'évalue que l'expression dont il a besoin pour la retourner.  Cela économise du temps, et peut également être utile pour prévenir l'évaluation d'expressions qui pourraient être invalides en fonction de l'état de ##//condition//##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/control/iif.bas"}}%%(freebasic)
dim as integer a, b, x, y, z
a = (x + y + iif(b > 0, 4, 7)) \ z
%%
est équivalent à:
{{fbdoc item="filename" value="examples/manual/control/iif2.bas"}}%%(freebasic)
dim as integer a, b, x, y, z, temp
if b > 0 then temp = 4 else temp = 7
a = (x + y + temp) \ z
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Iif""**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgIfthen If...Then]]##

{{fbdoc item="back" value="CatPgMisc|Miscellaneous"}}