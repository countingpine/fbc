{{fbdoc item="title" value="LEN"}}----
Retourne la longueur d'un type de variable ou de donn&eacute;es

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Len** ( [[KeyPgByref byref]] //variable// [[KeyPgAs as]] [[KeyPgAny any]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]	
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Len** ( //datatype// ) [[KeyPgAs as]] [[KeyPgInteger integer]]	
##
{{fbdoc item="usage"}}##
	//result// = **Len**( //variable// )
		##//ou//##
	//result// = **Len**( [[DataType DataType]] )
##
{{fbdoc item="param"}}
	##//variable//##
		Une variable de n'importe quel type.
	##//datatype//##
		Un [[DataType DataType]].

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne la taille en octets d'une variable ou d'un [[DataType DataType]].

{{fbdoc item="desc"}}
	##**Len**## retourne la longueur en octets d'une variable ou d'un [[DataType DataType]].

	Dans la premi&egrave;re forme, si ##//variable//## est du type ##[[KeyPgString String]]##, ##[[KeyPgWstring WString]]## ou ##[[KeyPgZstring ZString]]##, la longueur de la cha&icirc;ne, en caract&egrave;res, est retourn&eacute;e. Sinon, la taille du type de ##//variable//## est retourn&eacute;e.

	Dans la seconde forme, si ##//datatype//## est ##[[KeyPgZstring ZString]]## ou ##[[KeyPgWstring WString]]##, la taille d'un caract&egrave;re ASCII ou Unicode est retourn&eacute;e, respectivement. Si ##//datatype//## est ##[[KeyPgString String]]##, la taille du descripteur de type est retourn&eacute;e.

	S'il y a, &agrave; la fois, un type d&eacute;fini par l'utilisateur et une variable qui ont le m&ecirc;me nom dans le m&ecirc;me champ d'application, le type d&eacute;fini par l'utilisateur a la priorit&eacute; sur la variable.  Pour s'assurer que ##**Len**## prend la variable au lieu du type d&eacute;fini par l'utilisateur, mettez l'argument de ##**Len**## entre parenth&egrave;ses pour le forcer &agrave; &ecirc;tre consid&eacute;r&eacute; comme une expression.  Par exemple ##Len((variable))##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/len.bas"}}%%(freebasic)
print len("hello world") 'returns "11"
print len(Integer) ' returns 4

type xyz
	a as integer
	b as integer
end type

print len(xyz) ' returns 8
%%

{{fbdoc item="lang"}}
	- ##**Len**## n'admet que des expressions dans le dialecte //[[CompilerOptlang -lang qb]]//. 
	- Peut &ecirc;tre utilis&eacute; avec les types int&eacute;gr&eacute;s et les types d&eacute;finis par l'utilisateur dans les dialectes //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang fblite]]//.

{{fbdoc item="diff"}}
	- Peut &ecirc;tre utilis&eacute; avec les types int&eacute;gr&eacute;s et les types d&eacute;finis par l'utilisateur dans les dialectes //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang fblite]]//.
	- Aucune dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="see"}}
	- ##[[KeyPgSizeof Sizeof]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}