{{fbdoc item="title" value="DESTRUCTOR"}}----
Appelé automatiquement lorsqu'une classe ou un type  défini par l'utilisateur est hors de portée ou est détruit

{{fbdoc item="syntax"}}##
	[[KeyPgType Type]] //typename//
		//field declarations//
		[[KeyPgDeclare Declare]] **Destructor** ( )
	End Type
	
	**Destructor** //typename// ( )
		//statements//
	**End Destructor**
##
{{fbdoc item="param"}}
	##//typename//## 
		nom du ##[[KeyPgType Type]]## ou ##[[KeyPgClass Class]]##

{{fbdoc item="desc"}}
	La méthode ##**Destructor**## est appelée lorsqu'un ##[[KeyPgType Type]]## défini par l'utilisateur ou une variable ##[[KeyPgClass Class]]## est hors de portée ou est détruit explicitement avec l'opérateur ##[[KeyPgOpDelete Delete]]##.

	La méthode ##**Destructor**## est passée à un paramètre caché ##[[KeyPgThis this]]## qui a le même type que ##//typename//##.

	Le ##**Destructor**## dans un type est appelé avant les ##**Destructor**##s de ses propres champs.  Par conséquent, tous les champs sont accessibles avec le paramètre caché ##[[KeyPgThis this]]## dans le corps du destructeur.

	Un seul destructeur peut être déclaré et défini par type.

	Comme la déclaration ##[[KeyPgEnd End]]## ne ferme aucune portée, les destructeurs d'objet ne seront pas automatiquement appelés si l'instruction ##[[KeyPgEnd End]]## est utilisée pour terminer le programme.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/udt/destructor.bas"}}%%(freebasic)
type T
  value as zstring * 32
  declare constructor ( init_value as string )
  declare destructor ()
end type

constructor T ( init_value as string )
  value = init_value
  print "Creating: "; value
end constructor

destructor T ()
  print "Destroying: "; value
end destructor

sub MySub
  dim x as T = ("A.x")
end sub

dim x as T = ("main.x")

scope
  dim x as T = ("main.scope.x")
end scope

MySub
%%
Affichera:
%%
Creating: main.x
Creating: main.scope.x
Destroying: main.scope.x
Creating: A.x
Destroying: A.x
Destroying: main.x
%%
{{fbdoc item="lang"}}
	- Les caractéristiques liées à l'objet sont prises en charge uniquement dans le dialecte //[[CompilerOptlang -lang fb]]//

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgClass Class]]##
	- ##[[KeyPgConstructor Constructor]]##
	- ##[[KeyPgOpDelete Delete]]##
	- ##[[KeyPgModuleDestructor Destructor (Module)]]##
	- ##[[KeyPgType Type]]##

{{fbdoc item="back" value="CatPgUserDefTypes|User Defined Types"}}

