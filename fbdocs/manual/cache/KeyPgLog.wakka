{{fbdoc item="title" value="LOG"}}----
Retourne le logarithme naturel d'un nombre donné

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Log** [[KeyPgCdecl cdecl]] ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgDouble double]] ) [[KeyPgAs as]] [[KeyPgDouble double]]
##
{{fbdoc item="usage"}}##
	//result// = **Log**( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		Le nombre pour lequel on calcule le logarithme naturel.

{{fbdoc item="ret"}}
	Retourne le logarithme avec la base //**e**// (connu aussi sous le nom de logarithme naturel) de ##//number//##.

{{fbdoc item="desc"}}
	Il peut y avoir une certaine confusion avec cette notation étant donné que dans les mathématiques la fonction logarithme naturel est généralement notée **LN**, tandis que le logarithme de base 10 est souvent notée comme LOG. FreeBASIC, comme la plupart des langages de programmation informatique, utilise LOG pour désigner le logarithme naturel.  Si ##//number//## est égal à zéro, FreeBASIC retourne une valeur spéciale qui représente "-infinity", affiché "-Inf".  Si ##//number//## est inférieur à zéro, **Log** retourne une valeur spéciale représentant "non défini", affichée """NaN""" ou "IND", le texte exact dépend de la plate-forme de travail. Si ##//number//## est une variable non initialisée, "-infinity" est retourné.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/math/log.bas"}}%%(freebasic)
'Find the logarithm of any base
FUNCTION LogBaseX (BYVAL Number AS DOUBLE, BYVAL BaseX AS DOUBLE) AS DOUBLE
	LogBaseX = LOG( Number ) / LOG( BaseX )
	'For reference:   1/log(10)=0.43429448
END FUNCTION

PRINT "The log base 10 of 20 is:"; LogBaseX ( 20 , 10 )
PRINT "The log base 2 of 16 is:"; LogBaseX ( 16 , 2 )

SLEEP
%%

Affichera:
%%
The log base 10 of 20 is: 1.301029995663981
The log base 2 of 16 is: 4
%%

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgExp Exp]]##

{{fbdoc item="back" value="CatPgMath|Math"}}

