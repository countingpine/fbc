{{fbdoc item="title" value="PSET"}}----
Place un seul pixel

{{fbdoc item="syntax"}}##
	**PSet** [//target// ,] [STEP] (//x//, //y//) [,//color//]
##
{{fbdoc item="param"}}
	##//target//##
		sp&eacute;cifie le tampon sur lequel on dessine.  
	##STEP##
		indique que ces coordonn&eacute;es sont relatives
	##(//x, y//)##
		coordonn&eacute;es du pixel.
	##//color//##
		l'attribut de couleur.

{{fbdoc item="desc"}}

	##//target//## sp&eacute;cifie le tampon sur lequel on dessine.  ##//target//## peut &ecirc;tre une image cr&eacute;&eacute;e avec ##[[KeyPgImagecreate ImageCreate]]## ou ##[[KeyPgGetgraphics Get (Graphique)]]##.  Si omis, ##//target//## prend par d&eacute;faut la page courante de travail de l'&eacute;cran.

	##(//x, y//)## sont les coordonn&eacute;es du pixel.  ##STEP## si pr&eacute;sent, indique que les coordonn&eacute;es##(//x, y//)## sont relatives &agrave; la position du curseur graphique.  Si omis, ##(//x, y//)## sont relatives au coin en haut &agrave; gauche de ##//target//##.  Les coordonn&eacute;es x et y sont affect&eacute;es par le dernier appel &agrave; ##[[KeyPgViewgraphics View (Graphique)]]## et ##[[KeyPgWindow Window]]##, et respectent la r&eacute;gion de d&eacute;coupage (clipping region) valid&eacute;e par ##[[KeyPgViewgraphics View (Graphique)]]##.

	##//color//## sp&eacute;cifie l'attribut de couleur.  Si omis, ##//color//## prend par d&eacute;faut la couleur courante d'avant-plan.  Voir ##[[KeyPgColor Color]]##.  ##//color//## d&eacute;pend du mode graphique, voir ##[[KeyPgColor Color]]## et ##[[KeyPgScreengraphics Screen (Graphique)]]## pour plus de d&eacute;tails.

	Note d'optimisation: bien que **Pset** et son oppos&eacute; ##[[KeyPgPoint Point]]## donnent des r&eacute;sultats valides, ils sont tr&egrave;s lents. De meilleures performances sont obtenues en utilisant ##[[KeyPgPoke Poke]]## apr&egrave;s avoir calcul&eacute; vous-m&ecirc;me l'adresse &agrave; partir des valeurs obtenues par ##[[KeyPgImageinfo ImageInfo]]## et ##[[KeyPgScreeninfo ScreenInfo]]##, ou m&ecirc;me en utilisant le langage machine avec "inline ASM".

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/pset.bas"}}%%(freebasic)
' Valide un mode ecran approprie.
Screen 14

' Place un pixel aux coordonnees 100, 100, Couleur 15. (blanc)
Pset (100, 100), 15
' Confirme l' operation.
Locate 1: Print "Pixel plotted at 100, 100"
' Attente touche appuyee.
Sleep
 
' Place un autre pixel aux coordonnees 150, 150, Couleur 4. (rouge) 
Pset (150, 150), 4
' Confirme l' operation.
Locate 1: Print "Pixel plotted at 150, 150"
' Attente touche appuyee.
Sleep
 
' Place un 3eme pixel relatif au second, Couleur 15. (blanc)
' Ce pixel a les coordonnees 60, 60. Il sera place
' a 60, 60 plus les coordonnees precedentes (150, 150), donc place a 210, 210.
Pset Step (60, 60), 15
' Confirme l' operation.
Locate 1: Print "Pixel plotted at 150 + 60, 150 + 60"
' Attente touche appuyee
Sleep

' Ferme le programme
End
%%

{{fbdoc item="diff"}}
	- ##//target//## nouveau pour FreeBASIC
	{{fbdoc item="see"}}

- ##[[KeyPgPoint Point]]## - lecture de pixels 
	- ##[[KeyPgPreset PReset]]##
	- ##[[KeyPgViewgraphics View (Graphique)]]##
	- ##[[KeyPgWindow Window]]##
	- ##[[KeyPgWindow Window]]##
	- ##[[GfxInternalFormats Internal pixel formats]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}
