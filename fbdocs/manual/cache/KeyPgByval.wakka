{{fbdoc item="title" value="BYVAL"}}----
Spécificateur de déclaration pour passer explicitement un paramètre par valeur

{{fbdoc item="syntax"}}##
	**Byval** //param// [[KeyPgAs as]] [[DataType datatype]]
##
{{fbdoc item="usage"}}##
	[ [[KeyPgDeclare declare]] ] { [[KeyPgSub sub]] | [[KeyPgFunction function]] } //proc_name// ( **Byval** //param// [[KeyPgAs as]] [[DataType datatype]]  )
##
{{fbdoc item="desc"}}
	##**ByVal**## dans une liste de paramètres d'une instruction de déclaration provoque une copie de la variable à passer par sa valeur à la procédure (par exemple, un sous-programme ou une fonction).

	Cela signifie que si la valeur de la variable //##x##// est passée, alors la variable d'origine //##x##// ne sera en aucune façon modifiée; toutefois, si la variable a été passée ##[[KeyPgByref Byref]]##, la valeur de la variable d'origine //##x##// peut être modifiée par la fonction appelée.

	Note: Pour arguments de chaîne, ##**ByVal**## a actuellement un sens différent: au lieu de passer une copie de la chaîne, il passe un pointeur ##[[KeyPgZstring zstring]]## vers la chaîne de données, alors que ##[[KeyPgByref Byref]]## passe un pointeur vers le descripteur de chaîne ""FreeBASIC"". Ce comportement permet de passer ##**ByVal**## ##[[KeyPgString String]]## directement aux procédures C. La chaîne passée de cette manière ne sera pas changée par ##[[KeyPgSub Sub]]##/##[[KeyPgFunction Function]]##, et le descripteur de chaîne ne sera pas mis à jour. La signification du passage d'une ##[[KeyPgString String]]## ##**ByVal**## pourrait changer dans le futur; par conséquent, passer ##[[KeyPgString String]]## ##**ByVal**## doit être évité.  ##[[KeyPgZstring Zstring]]## est plus adapté dans le but de passer des "chaînes terminées par zéro" (ZString) aux fonctions C.

	L'opposé de ##[[KeyPgByref ByRef]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/byval.bas"}}%%(freebasic)
Sub MySub(byval value as integer)
	value += 1
End Sub

Dim MyVar As Integer

MyVar = 1
Print "MyVar: "; MyVar 'output = 1
MySub MyVar
Print "MyVar: "; MyVar 'output = 1, because byval won't change the values passed into it globally.
Sleep
End
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang fb]]//, ##**ByVal**## est la convention de passage de paramètre par défaut pour tous les types intégrés à l'exception de ##[[KeyPgString String]]##; Chaîne (String) et les ##[[KeyPgType Type]]##s définis par l'utilisateur sont passés ##[[KeyPgByref Byref]]## par défaut.
	- Dans les dialectes //[[CompilerOptlang -lang qb]]// et //[[CompilerOptlang -lang fblite]]//, ##**ByRef**## est la convention de passage des paramètres.

{{fbdoc item="diff"}}
	- QB utilise seulement ##**ByVal**## dans les déclarations aux sous-routines non-Basic

{{fbdoc item="see"}}
	- [[ProPgPassingArguments Passer des arguments aux procédures]]
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgByref ByRef]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}