{{fbdoc item="title" value="FREEFILE"}}----
Retourne un num&eacute;ro de fichier libre

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Freefile** ( ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Freefile**
##
{{fbdoc item="section" value="Valeur retourn&eacute;e
	Le premier num&eacute;ro de fichier libre, s'il existe, sinon z&eacute;ro (##0##).

{{fbdoc item="desc"}}
	Retourne le num&eacute;ro de fichier libre suivant avec des valeurs valides de ##1## &agrave; ##255##, ou ##0## s'il y a d&eacute;j&agrave; 255 fichiers ouverts. Cette valeur est un argument obligatoire de ##[[KeyPgOpen Open]]## un fichier. ##**FreeFile**## est utile lors de l'ouverture de fichiers dans des programmes complexes o&ugrave; le programmeur ne peut pas garder une trace des num&eacute;ros de fichiers utilis&eacute;s.
	Assurez-vous de toujours fermer les fichiers lorsqu'ils ne sont plus n&eacute;cessaires, sinon vous aurez une perte de num&eacute;ros de fichiers, et vous ne serez pas en mesure d'ouvrir des fichiers d&egrave;s que 255 num&eacute;ros de fichiers seront utilis&eacute;s pendant le fonctionnement de votre programme.
	##**FreeFile**## retourne toujours le num&eacute;ro de fichier libre le plus prtit possible. Le num&eacute;ro de fichier retourn&eacute; par ##**FreeFile**## ne changera pas tant que le fichier correspondant reste ##[[KeyPgOpen ouvert  (Open)]]##, ou jusqu'&agrave; ce qu'un fichier de num&eacute;ros de fichier plus petit soit ##[[KeyPgClose ferm&eacute; (Close)]]##. Pour cette raison, il est sage d'utiliser ##** FreeFile**##, imm&eacute;diatement avant son ##[[KeyPgOpen Open]]## correspondant, afin de s'assurer que le num&eacute;ro de fichier retourn&eacute; n'a pas &eacute;t&eacute; ouvert ailleurs en premier.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/freefile.bas"}}%%(freebasic)
' Create a string and fill it.
Dim buffer As String, f as integer
buffer = "Hello World within a file."

' Find the first free file number.
f = Freefile

' Open the file "file.ext" for binary usage, using the file number "f".
Open "file.ext" For Binary As #f

' Place our string inside the file, using file number "f".
Put #f, , buffer

' Close the file.
Close #f

' End the program. (Check the file "file.ext" upon running to see the output.)
End
%%

	Lors de l'ouverture de plusieurs ##**FreeFile**##, ##**FreeFile**## doit &ecirc;tre utilis&eacute; imm&eacute;diatement avant ##[[KeyPgOpen Open]]##:
{{fbdoc item="filename" value="examples/manual/fileio/freefile-good.bas"}}%%(freebasic)
dim fr as integer, fs as integer
' The CORRECT way:
fr = FREEFILE
OPEN "File1" FOR INPUT AS #fr

fs = FREEFILE
OPEN "File2" FOR INPUT AS #fs
%%

	Par opposition &agrave;:
{{fbdoc item="filename" value="examples/manual/fileio/freefile-bad.bas"}}%%(freebasic)
dim fr as integer, fs as integer
' The WRONG way:
Open "file1" For Input As #fr
Open "file2" For Input As #fs '' error: file number already opened

OPEN "file1" FOR INPUT AS #fr
Open "file2" For Input As #fs
%%

{{fbdoc item="target"}}
	- Sous Windows, un num&eacute;ro de fichier utilis&eacute; dans une biblioth&egrave;que de liens dynamiques n'est pas identique &agrave; celui utilis&eacute; dans le programme principal.  Les num&eacute;ros de fichier ne peuvent &ecirc;tre pass&eacute;s ou renvoy&eacute;s, puis utilis&eacute;s entre une DLL et un fichier ex&eacute;cutable.
	- Outre la limite FreeBASIC de 255 fichiers ouverts en m&ecirc;me temps par le programme, il y a une limite OS du nombre total de fichiers ouverts, mais g&eacute;n&eacute;ralement vous n'aurez pas le modifier, sauf dans le DOS, o&ugrave; la limite peut &ecirc;tre tr&egrave;s basse (15 fichiers au total).

{{fbdoc item="diff"}}
	- Aucune

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgPutfileio Put (File I/O)]]##
	- ##[[KeyPgGetfileio Get (File I/O)]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}