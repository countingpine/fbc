{{fbdoc item="title" value="Variable Initializers"}}----
Les initialiseurs de variables sont servent &agrave; initialiser des tableaux, des variables et des types d&eacute;finis par l'utilisateur.

{{fbdoc item="syntax"}}##
		[[KeyPgDim Dim]] //scalar_symbol// [AS [[DataType DataType]]] = //expression//
		[[KeyPgDim Dim]] //array_symbol// ([//lbound// TO] //ubound//) [AS [[DataType DataType]]] => { //expression// [, ...] }
		[[KeyPgDim Dim]] //udt_symbol// AS [[DataType DataType]] = ( //expression// [, ...] )
##
{{fbdoc item="desc"}}
	Les tableaux, les variables et les types d&eacute;finis par l'utilisateur peuvent recevoir une valeur lors de leur d&eacute;claration en utilisant ##[[KeyPgDim Dim]]##, avec la syntaxe ci-dessus.  S'il vous pla&icirc;t, notez les diff&eacute;rences importantes entre les diff&eacute;rents types d'initialisation.  Les variables scalaires sont initialis&eacute;es comme dans une affectation normale, en utilisant un signe &eacute;gal.  Les types d&eacute;finis par l'utilisateur et les tableaux sont assign&eacute;s &agrave; l'aide d'un signe &eacute;gal suivi d'un signe plus grand que (=>).  Les valeurs d'un tableau sont donn&eacute;es par des valeurs s&eacute;par&eacute;es par des virgules d&eacute;limit&eacute;es par des accolades, et les valeurs des types d&eacute;finis par l'utilisateur sont indiqu&eacute;es par des valeurs s&eacute;par&eacute;es par des virgules d&eacute;limit&eacute;es par des parenth&egrave;ses.

	Ces m&eacute;thodes d'initialisation des variables peuvent &ecirc;tre imbriqu&eacute;es les unes dans les autres pour les t&acirc;ches complexes.  Par exemple, pour initialiser un tableau multi-dimensionnel:

{{fbdoc item="filename" value="examples/manual/proguide/init/array.bas"}}%%(freebasic)
DIM array(1 to 2, 1 to 5) as Integer => {{1, 2, 3, 4, 5}, {1, 2, 3, 4, 5}}
%%
	Dans cette d&eacute;claration, les valeurs pour la dimension la plus &agrave; gauche sont donn&eacute;es sous forme de tableaux d'index 5.  L'imbrication permet d'initialiser les tableaux de n'importe quelles dimensions.

	Les types d&eacute;finis par l'utilisateur et les tableaux peuvent aussi &ecirc;tre imbriqu&eacute;s les uns dans les autres.  Par exemple, le code suivant d&eacute;clare et initialise un tableau de types d&eacute;finis par l'utilisateur.

{{fbdoc item="filename" value="examples/manual/proguide/init/udtarray.bas"}}%%(freebasic)
Type mytype
	var1 As Double
	var2 As Integer
	var3 As ZString Ptr
End Type

Dim MyVar(2) As mytype => _
	{ _
		(1.0, 1, @"Hello"), _
		(2.0, 2, @"GoodBye") _
	}
%%
	Pour les variables statiques ou globales, au niveau module , les valeurs d'initialisation doivent &ecirc;tre des expressions constantes.  Autrement, FreeBasic signale une erreur de compilation.

{{fbdoc item="diff"}}
	- Les initialiseurs de variables sont nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgDim Dim]]##

{{fbdoc item="back" value="CatPgProgrammer|Programmer's Guide"}}