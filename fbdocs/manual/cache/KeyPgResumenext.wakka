{{fbdoc item="title" value="RESUME NEXT"}}----
Déclaration de gestion des erreurs pour reprendre l'exécution après un saut à un gestionnaire d'erreur

{{fbdoc item="syntax"}}##
	**Resume Next**
##
{{fbdoc item="desc"}}
	##**Resume Next**## est utilisé dans le mécanisme traditionnel de prise en charge des erreurs de QB du gestionnaire d'erreurs (appelé par ##[[KeyPgOnerror On Error]]##) pour reprendre l'exécution à la ligne après celle qui a provoqué l'erreur.  Habituellement, cela est utilisé pour éviter l'exécution de la même ligne et de provoquer à nouveau la même erreur.

	##**Resume Next**## réinitialise à ##0## la valeur de ##[[KeyPgErr Err]]##

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/error/resume-next.bas"}}%%(freebasic)
'' Compile with -lang fblite or qb

#lang "fblite"

Dim As Single i, j

On Error Goto ErrHandler

i = 0
j = 5
j = 1 / i ' this line causes a divide-by-zero error; execution jumps to ErrHandler label

Print "ending..."

End ' end the program so that execution does not fall through to the error handler again

ErrHandler:

Resume Next ' execution jumps to 'Print "ending..."' line, but j is now in an undefined state
%%

{{fbdoc item="lang"}}
	-  ON ERROR n'est pas supporté dans le dialecte //[[CompilerOptlang -lang fb]]//. Des déclarations peuvent être utilisées dans cette forme de fonction pour retourner un code d'erreur
{{fbdoc item="filename" value="examples/manual/check/KeyPgResumenext_1.bas"}}%%(freebasic)
If Open( "text" For Input As #1 ) <> 0 Then
  Print "Unable to open file"
End If
%% 

{{fbdoc item="diff"}}
	- Doit être compilé avec l'option //[[CompilerOptex -ex]]//

{{fbdoc item="see"}}
	- ##[[KeyPgErr Err]]##
	- ##[[KeyPgResumenext Resume]]##
	- [[ProPgErrorHandling Gestion des erreurs]]

{{fbdoc item="back" value="CatPgError|Error Handling Functions"}}