{{fbdoc item="title" value="RESUME NEXT"}}----
D&eacute;claration de gestion des erreurs pour reprendre l'ex&eacute;cution apr&egrave;s un saut &agrave; un gestionnaire d'erreur

{{fbdoc item="syntax"}}##
	**Resume Next**
##
{{fbdoc item="desc"}}
	##**Resume Next**## est utilis&eacute; dans le m&eacute;canisme traditionnel de prise en charge des erreurs de QB du gestionnaire d'erreurs (appel&eacute; par ##[[KeyPgOnerror On Error]]##) pour reprendre l'ex&eacute;cution &agrave; la ligne apr&egrave;s celle qui a provoqu&eacute; l'erreur.  Habituellement, cela est utilis&eacute; pour &eacute;viter l'ex&eacute;cution de la m&ecirc;me ligne et de provoquer &agrave; nouveau la m&ecirc;me erreur.

	##**Resume Next**## r&eacute;initialise &agrave; 0 la valeur de ##[[KeyPgErr Err]]##

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/error/resume-next.bas"}}%%(freebasic)
'' Compile with -lang fblite or qb

#lang "fblite"

Dim As Single i, j

On Error Goto ErrHandler

i = 0
j = 5
j = 1 / i ' this line causes a divide-by-zero error; execution jumps to ErrHandler label

Print "ending..."

End ' end the program so that execution does not fall through to the error handler again

ErrHandler:

Resume Next ' execution jumps to 'Print "ending..."' line, but j is now in an undefined state
%%

{{fbdoc item="lang"}}
	-  ON ERROR n'est pas support&eacute; dans le dialecte //[[CompilerOptlang -lang fb]]//. Des d&eacute;clarations peuvent &ecirc;tre utilis&eacute;es dans cette forme de fonction pour retourner un code d'erreur
{{fbdoc item="filename" value="examples/manual/check/KeyPgResumenext_1.bas"}}%%(freebasic)
If Open( "text" For Input As #1 ) <> 0 Then
  Print "Unable to open file"
End If
%%

{{fbdoc item="diff"}}
	- Doit &ecirc;tre compil&eacute; avec l'option //[[CompilerOptex -ex]]//

{{fbdoc item="see"}}
	- ##[[KeyPgErr Err]]##
	- ##[[KeyPgResumenext Resume]]##
	- [[ProPgErrorHandling Gestion des erreurs]]

{{fbdoc item="back" value="CatPgError|Error Handling Functions"}}