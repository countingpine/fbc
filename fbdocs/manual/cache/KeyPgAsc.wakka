{{fbdoc item="title" value="ASC"}}----
Retourne l'entier correspondant à la représentation ASCII ou Unicode d'un caractère

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Asc** [[KeyPgOverload overload]] ( [[KeyPgByref byref]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgString string]], [[KeyPgByval byval]] //position// [[KeyPgAs as]] [[KeyPgInteger integer]] = 1 ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Asc** ( [[KeyPgByval byval]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgZstring zstring]] [[KeyPgPtr ptr]], [[KeyPgByval byval]] //position// [[KeyPgAs as]] [[KeyPgInteger integer]] = 1 ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Asc** ( [[KeyPgByval byval]] //str// [[KeyPgAs as]] [[KeyPgConstQualifier const]] [[KeyPgWstring wstring]] [[KeyPgPtr ptr]], [[KeyPgByval byval]] //position// [[KeyPgAs as]] [[KeyPgInteger integer]] = 1 ) [[KeyPgAs as]] [[KeyPgUinteger uinteger]]
##
{{fbdoc item="usage"}}##
	//result// = **Asc**( //str// [, //position// ] )
##
{{fbdoc item="param"}}
	##//str//##
		La chaîne source.
	##//position//##
		La position d'un caractère dans une chaîne.

{{fbdoc item="ret"}}
	L'entier correspondant à la représentation ASCII ou Unicode d'un caractère situé à ##//position//## dans ##//str//##.

{{fbdoc item="desc"}}
	Si ##//str//## est une ##[[KeyPgString String]]## ou une ##[[KeyPgZstring ZString]]##, un code [[CptAscii ASCII]] est retourné.

	Si ##//str//## est une ##[[KeyPgWstring WString]]##, un code [[CptAscii Unicode]] est retourné.
	
	La fonction retourne zéro (0) si la chaîne a une longueur nulle, si ##//position//## est inférieure à (1), ou si ##//position//## est supérieure au nombre de caractères dans ##//str//##.
	
	##[[KeyPgChr Chr]]## exécute l'opération inverse pour les chaînes de caractères ASCII, alors que ##[[KeyPgWchr WChr]]## est l'opposé pour les chaînes Unicode, retournant une chaîne de caractères contenant le caractère représenté par le code passé en argument.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/asc.bas"}}%%(freebasic)
print "the ascii code of 'a' is:"; asc("a")
print "the ascii code of 'b' is:"; asc("abc", 2)
%%
	produira la sortie:

%%the ascii code of 'a' is: 97
the ascii code of 'b' is: 98
%%

Exemple Unicode (Note aux rédacteurs de documentation: ne mettez pas dans ""%%(qbasic)"" marqueurs ou le texte russe va disparaître!)

<<##dim a as wstring * 11
a = "&#1055;&#1088;&#1080;&#1074;&#1077;&#1090;, &#1084;&#1080;&#1088;"
print "the Unicode of the second char of " & a & " is: " & asc(a)
##<<::c::<<	produira la sortie:
<<##the Unicode of the second char of &#1055;&#1088;&#1080;&#1074;&#1077;&#1090;, &#1084;&#1080;&#1088; is: 1088
##<<::c::
{{fbdoc item="target"}}
	- DOS ne supporte pas la version chaîne avec larges caractères de ##**Asc**##.{{fbdoc item="diff"}}
	- L'argument optionnel ##//position//## est nouveau pour FreeBASIC.
	- QB ne supporte pas la version chaîne avec larges caractères de ##**Asc**##
{{fbdoc item="see"}}
	- [[CptAscii Codes ASCII des caractères]]
	- ##[[KeyPgChr Chr]]##
	- ##[[KeyPgStr Str]]##
	- ##[[KeyPgVal Val]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}

