{{fbdoc item="title" value="BYREF"}}----
Spécificateur de déclaration pour passer explicitement un paramètre par référence

{{fbdoc item="syntax"}}##
	**Byref** //param// [[KeyPgAs as]] [[DataType datatype]]
##
{{fbdoc item="usage"}}##
	[ [[KeyPgDeclare declare]] ] { [[KeyPgSub sub]] | [[KeyPgFunction function]] } //proc_name// ( **Byref** //param// [[KeyPgAs as]] [[DataType datatype]]  )
##
{{fbdoc item="desc"}}
	Passe une variable par référence, c'est à dire son adresse, à une sous-routine ou une fonction. Quand une variable est passée par référence, le contenu de la variable peut être modifié par la cible sous-routine ou fonction.
	
	Dans les dialectes //[[CompilerOptlang -lang qb]]// et //[[CompilerOptlang -lang fblite]]//, ##**ByRef**## est la convention de passage de paramètre par défaut, sauf si l'##[[KeyPgOptionbyval Option ByVal]]## est active.

	L'opposé de ##[[KeyPgByval ByVal]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/byref.bas"}}%%(freebasic)
dim MyVar as integer

sub ChangeVar(byref AVar as integer)
	AVar = AVar + 1
end sub

MyVar = 1
print "MyVar: "; MyVar 'output = 1
ChangeVar MyVar
print "MyVar: "; MyVar 'output = 2
sleep
end
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang fb]]//, ##**ByVal**## est la convention de passage de paramètre par défaut pour tous les types intégrés à l'exception de ##[[KeyPgString String]]##; Chaîne (String) et les ##[[KeyPgType Type]]##s définis par l'utilisateur sont passés ##[[KeyPgByref Byref]]## par défaut.
	- Dans les dialectes //[[CompilerOptlang -lang qb]]// et //[[CompilerOptlang -lang fblite]]//, ##**ByRef**## est la convention de passage des paramètres.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- [[ProPgPassingArguments Passer des arguments aux procédures]]
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgByval ByVal]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}

