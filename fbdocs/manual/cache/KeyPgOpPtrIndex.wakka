{{fbdoc item="title" value="Op&eacute;rateur [ ] (Pointeur d'indice)"}}----
Renvoie une référence au décalage mémoire par rapport à une adresse

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **[]** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] //T// [[KeyPgPointer pointer]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] //T//
##
~&//Notez que **##Operator [ ]## (Pointeur d'indice)** retourne une référence. Voir [[CompilerFAQ FAQ du Compilateur]].//

{{fbdoc item="usage"}}##
	//result// = //lhs// **[** //rhs// **]**
##
{{fbdoc item="param"}}
	##//lhs//##
		L'adresse de base.
	##//rhs//##
		Un décalage (offset) à partir de ##//lhs//##.
	##//T//##
		Tout type de donnée.

{{fbdoc item="desc"}}
	Cet opérateur renvoie une référence à une valeur à une certaine distance dans la mémoire par rapport à une adresse de base. Il s'agit essentiellement d'un raccourci pour "##[[KeyPgOpValueOf *]](//lhs// [[KeyPgOpAdd +]] //rhs//)##"; les deux font exactement la même chose. Comme un pointeur arithmétique, tout type de ##[[KeyPgPointer Pointeur]]## peut être indexé sauf pour un  ##[[KeyPgPointer Pointeur]]## ##[[KeyPgAny ANY]]##. Aussi, comme un pointeur arithmétique, c'est à l'utilisateur de s'assurer les données significatives sont accessibles.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/pointer-index.bas"}}%%(freebasic)
'' initialize a 5-element array
dim array(4) as integer = { 0, 1, 2, 3, 4 }

'' point to the first element
dim p as integer ptr = @array(0)

'' use pointer indexing to output array elements
for index as integer = 0 to 4
	print p[index]
next
%%

	Affichera,

%%0 1 2 3 4
%%

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgOpAdd Operator + (Addition)]]##
	- ##[[KeyPgOpSubtract Operator - (Soustraction)]]##
	- [[CatPgOpPoint Pointeur Opérateurs]]

{{fbdoc item="back" value="CatPgOpIndexing|Indexing Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}

