{{fbdoc item="title" value="PRINT"}}----
Ecrire du texte &agrave; l'&eacute;cran

{{fbdoc item="syntax"}}##
	**Print** [ //expressionlist// ] [ , | ; ]
##
{{fbdoc item="param"}}
	##//expressionlist//##
		liste des items &agrave; afficher

{{fbdoc item="desc"}}
	##**Print**## envoie une liste de valeurs &agrave; l'&eacute;cran. Les valeurs num&eacute;riques sont converties vers leur repr&eacute;sentation cha&icirc;ne, avec un remplissage &agrave; gauche pour le signe. Des objets de types d&eacute;finis par l'utilisateur doivent surcharger **Operator Cast () As String**.

	Les valeurs cons&eacute;cutives dans la liste d'expressions sont s&eacute;par&eacute;es par une virgule (##,##) ou point-virgule (##;##). Une virgule indique que l'affichage suivant devrait avoir lieu  14 colonnes plus loin, alors que point-virgule indique que toutes les valeurs sont affich&eacute;es &agrave; la suite sans espace entre elles.  Cela a le m&ecirc;me effet que la concat&eacute;nation d'expressions en utilisant ##[[KeyPgOpConcat +]]## ou ##[[KeyPgOpConcatConvert &]]##.

	##**Print**## supporte aussi les expressions sp&eacute;ciales, ##[[KeyPgSpc Spc]]()## et ##[[KeyPgTab Tab]]()##.  Celles-ci peuvent &ecirc;tre utilis&eacute;es pour espacer les expressions ou pour aligner l'affichage sur une colonne sp&eacute;cifique.

	Un caract&egrave;re "nouvelle ligne" est affich&eacute; apr&egrave;s les valeurs de la liste des expressions &agrave; moins que la liste des expressions ne soit termin&eacute;e par une virgule ou un point-virgule.  Un ##**Print**## sans aucune expression ou s&eacute;parateur, affichera seulement un caract&egrave;re "nouvelle ligne".

	    NOTE: ##**Print**## r&eacute;-initialise la valeur ##[[KeyPgErr Err]]## d&egrave;s chaque expression est imprim&eacute;e.
	    
	Pour plus de contr&ocirc;le sur le style des caract&egrave;res et la position du texte dans les modes graphiques, pensez &agrave; utiliser ##[[KeyPgDrawString Draw String]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/console/print.bas"}}%%(freebasic)
'' print "Hello World!", and a new-line
Print "Hello World!"

'' print several strings on one line, then print a new-line
Print "Hello";
Print "World"; "!";
Print

'' column separator
Print "Hello!", "World!"
%%
{{fbdoc item="filename" value="examples/manual/console/print2.bas"}}%%(freebasic)
'' printing variables/expressions
Dim As Double pi = Atn(1) * 4
Dim As String s = "FreeBASIC"

Print "3 * 4 ="; 3 * 4

Print "Pi is approximately"; pi
Print s; " is great!"
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, un espace suppl&eacute;mentaire est affich&eacute; apr&egrave;s les nombres.

{{fbdoc item="diff"}}
	- Aucune, si vous utilisez des types de variables QBASIC dans //[[CompilerOptlang -lang qb]]//.
	- Les nombres non-sign&eacute;s sont affich&eacute;s sans espace devant eux.
	- QB ne supporte pas le "casting" pour les types d&eacute;finis par l'utilisateur (UDT = User-Defined Type), alors on ne peut utiliser ##**Print**## avec eux.

{{fbdoc item="see"}}
	- ##[[KeyPgSpc Spc]]##
	- ##[[KeyPgTab Tab]]##
	- ##[[KeyPgPrintPp Print #]]##
	- ##[[KeyPgPrintusing Print Using]]##
	- ##[[KeyPgWrite Write]]##
	- ##[[KeyPgDrawString Draw String]]##
	- ##[[KeyPgInput Input]]##

{{fbdoc item="back" value="CatPgConsole|Console Functions"}}