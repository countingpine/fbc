{{fbdoc item="title" value="#UNDEF"}}----
Directive pr&eacute;processeur pour annuler la d&eacute;finition d'une macro

{{fbdoc item="syntax"}}##
	**#undef** //symbol//
##
{{fbdoc item="desc"}}
	Annule la d&eacute;finition d'un symbole d&eacute;fini pr&eacute;c&eacute;demment avec ##[[KeyPgPpdefine #define]]##.
	
	Peut &ecirc;tre utilis&eacute; pour veiller &agrave; ce qu'une macro ou un symbole ait une dur&eacute;e de vie limit&eacute;e et ne soit pas en conflit avec une d&eacute;finition de macro similaire qui pourrait &ecirc;tre d&eacute;finie ult&eacute;rieurement dans le code source.
	
	(Note: ###undef## ne devrait pas &ecirc;tre utilis&eacute; pour annuler la d&eacute;finition de noms de variables ou de fonction utilis&eacute;s dans la port&eacute;e de la fonction actuelle.  Ces noms sont n&eacute;cessaires au compilateur en interne et les enlever peut entra&icirc;ner des r&eacute;sultats &eacute;tranges et inattendus.)

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/prepro/undef.bas"}}%%(freebasic)
#DEFINE ADD2(a_, b_)  ((a_) + (b_))
Print ADD2(1, 2)
' Macro no longer needed so get rid of it ...
#UNDEF ADD2
%%

{{fbdoc item="diff"}}
	- Nouveau pour Freebasic

{{fbdoc item="see"}}
	- ##[[KeyPgPpdefine #define]]##
	- ##[[KeyPgPpmacro #macro]]##
	- ##[[KeyPgPpif #if]]##
	- ##[[KeyPgPpelse #else]]## 
	- ##[[KeyPgPpelseif #elseif]]## 
	- ##[[KeyPgPpendif #endif]]## 
	- ##[[KeyPgPpifdef #ifdef]]##
	- ##[[KeyPgPpifndef #ifndef]]##
	- ##[[KeyPgDefined defined]]##

{{fbdoc item="back" value="CatPgPreProcess|Preprocessor"}}