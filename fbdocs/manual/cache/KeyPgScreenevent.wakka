{{fbdoc item="title" value="SCREENEVENT"}}----
Recherche et r&eacute;cup&egrave;re les &eacute;v&eacute;nements du syst&egrave;me.

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare Declare]] [[KeyPgFunction Function]] **ScreenEvent** ( [[KeyPgByval ByVal]] event [[KeyPgAs As]] [[KeyPgAny Any]] [[KeyPgPtr Ptr]] = 0 ) [[KeyPgAs As]] [[KeyPgInteger Integer]]
##
{{fbdoc item="usage"}}##
	//result// = **ScreenEvent**( [ //event// ] )
##
{{fbdoc item="param"}}
	##//event//##
		Sp&eacute;cifie le tampon o&ugrave; la fonction stockera les donn&eacute;es &eacute;v&eacute;nements.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne ##-1## s'il existe des &eacute;v&eacute;nements en attente d'&ecirc;tre r&eacute;cup&eacute;r&eacute;s, ##0## autrement.

{{fbdoc item="desc"}}
	Cette fonction retourne le dernier &eacute;v&eacute;nement syst&egrave;me disponible dans la file d'attente interne des &eacute;v&eacute;nements GfxLib. Par "&eacute;v&eacute;nement" on d&eacute;signe une activit&eacute; clavier ou souris quelconque.

	Les donn&eacute;es &eacute;v&eacute;nement (si disponibles) seront copi&eacute;es dans le tampon point&eacute; par le param&egrave;tre "event" pointed et seront d&eacute;clar&eacute;es comme un ##[[KeyPgEvent Ev&eacute;nement]]##
	
	<u>Interrogation des &eacute;v&eacute;nements</u>
		La fonction retourne ##-1## s'il y a des &eacute;v&eacute;nements en attente de r&eacute;cup&eacute;ration, ##0## autrement. Si le param&egrave;tre ##//event//## est mis &agrave; ##0## (valeur par d&eacute;faut si omis) ##[[KeyPgScreenevent ScreenEvent]]## ne sera pas en mesure de copier les donn&eacute;es d'&eacute;v&eacute;nement et ne va pas les sortir de la file d'attente interne des &eacute;v&eacute;nements. L'appel de la fonction de cette fa&ccedil;on peut &ecirc;tre utile pour v&eacute;rifier s'il y a des &eacute;v&eacute;nements disponibles sans les aller chercher.

	<u>Note</u>
		Si vous recevez un &eacute;v&eacute;nement KEY_PRESS, KEY_RELEASE ou KEY_REPEAT, il n'effacera pas le tampon clavier.  Si vous d&eacute;sirez effacer le tampon clavier apr&egrave;s r&eacute;ception d'un &eacute;v&eacute;nement, vous devrez le faire manuellement.  Voir ##[[KeyPgInkey Inkey]]##.

		
{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/screenevent.bas"}}%%(freebasic)
'' include fbgfx.bi pour des definitions utiles
#include "fbgfx.bi"
#if __FB_LANG__ = "fb"
Using fb '' constantes et structures sont charg&eacute;es dans l'espace de nom FB en langue fb
#endif

dim e as EVENT

screenres 640, 480
do
	if (screenevent(@e)) then
		select case e.type
		case EVENT_KEY_PRESS
			if (e.scancode = SC_ESCAPE) then
				end
			end if
			if (e.ascii > 0) then
				print "'" & e.ascii & "'";
			else
				print "unknown key";
			end if
			print " was pressed (scancode " & e.scancode & ")"
		case EVENT_KEY_RELEASE
			if (e.ascii > 0) then
				print "'" & e.ascii & "'";
			else
				print "unknown key";
			end if
			print " was released (scancode " & e.scancode & ")"
		case EVENT_KEY_REPEAT
			if (e.ascii > 0) then
				print "'" & e.ascii & "'";
			else
				print "unknown key";
			end if
			print " is being repeated (scancode " & e.scancode & ")"
		case EVENT_MOUSE_MOVE
			print "mouse moved to " & e.x & "," & e.y & " (delta " & e.dx & "," & e.dy & ")"
		case EVENT_MOUSE_BUTTON_PRESS
			if (e.button = BUTTON_LEFT) then
				print "left";
			elseif (e.button = BUTTON_RIGHT) then
				print "right";
			else
				print "middle";
			end if
			print " button pressed"
		case EVENT_MOUSE_BUTTON_RELEASE
			if (e.button = BUTTON_LEFT) then
				print "left";
			elseif (e.button = BUTTON_RIGHT) then
				print "right";
			else
				print "middle";
			end if
			print " button released"
		Case EVENT_MOUSE_DOUBLE_CLICK
			If (e.button = BUTTON_LEFT) Then
				Print "left";
			Elseif (e.button = BUTTON_RIGHT) Then
				Print "right";
			Else
				Print "middle";
			End If
			Print " button double clicked"
		case EVENT_MOUSE_WHEEL
			print "mouse wheel moved to position " & e.z
		case EVENT_MOUSE_ENTER
			print "mouse moved into program window"
		case EVENT_MOUSE_EXIT
			print "mouse moved out of program window"
		case EVENT_WINDOW_GOT_FOCUS
			print "program window got focus"
		case EVENT_WINDOW_LOST_FOCUS
			print "program window lost focus"
		case EVENT_WINDOW_CLOSE
			end
		End Select
			End If
		Sleep 1
	Loop

	%%
{{fbdoc item="section" value="Diff&eacute;rences de plates-formes
- ##**ScreenEvent**## ne retourne pas les &eacute;v&eacute;nements li&eacute;s &agrave; la fen&ecirc;tre dans la version DOS, mais retourne les &eacute;v&eacute;nements d'entr&eacute;e.

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgEvent Event]]##

- ##[[KeyPgScreengraphics Screen (Graphics)]]##
	- ##[[KeyPgInkey Inkey]]##
	- ##[[KeyPgMultikey MultiKey]]##
	- ##[[KeyPgGetmouse GetMouse]]##
	- ##[[KeyPgMultikey Multikey]]##
	- ##[[KeyPgGetmouse Getmouse]]##

{{fbdoc item="back" value="CatPgGfxScreen|Screen Functions"}}