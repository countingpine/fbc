{{fbdoc item="title" value="SCOPE...END SCOPE"}}----
Déclaration pour commencer un nouveau bloc de portée pour les variables

{{fbdoc item="syntax"}}##
	**Scope**
		[//statements//]
	**End Scope**
##
{{fbdoc item="desc"}}
	Le bloc Scope permet aux variables d'être temporairement (re)définies et utilisées dans un programme.  Quand une variable est définie avec ##[[KeyPgDim Dim]]## au sein d'une "structure de portée", cette variable peut être utilisée jusqu'à la fin de cette "structure de portée".  Pendant ce temps, toutes les variables en dehors du champ d'application qui ont le même nom seront ignorées et ne seront pas accessibles par ce nom.

	Toutes les déclarations dans le "bloc de portée" avant la variable ne soit dimensionnée va utiliser la variable telle que définie à l'extérieur de la portée.

	##**Scope..End Scope**## n'est pas permis lors de la compilation en dialecte //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/variable/scope.bas"}}%%(freebasic)
Dim As Integer x = 5, y = 2
Print "x ="; x; ", "; "y ="; y
Scope
	dim x as integer = 3
	Print "x ="; x; ", "; "y ="; y
	Scope
	    Dim y As Integer = 4
	    Print "x ="; x; ", "; "y ="; y
	End Scope
End Scope
Print "x ="; x; ", "; "y ="; y
%%

{{fbdoc item="lang"}}
	- Des blocs explicites SCOPE..END SCOPE ne sont disponibles que dans les dialectes //[[CompilerOptlang -lang fb]]// et //[[CompilerOptlang -lang deprecated]]//.
	- Des blocs explicites SCOPE..END SCOPE ne sont pas disponibles dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang qb]]//.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgDim Dim]]##

{{fbdoc item="back" value="CatPgVariables|Variable Declarations"}}