{{fbdoc item="title" value="Vue d'ensemble des proc&eacute;dures"}}----
Vue d'ensemble des différents types de procédures FB.

	Les procédures sont des blocs de code qui peuvent être exécutés ou appelés, un certain nombre de fois, depuis n'importe quel endroit d'un programme. Le code qui est exécuté est appelé le corps de la procédure. Il existe deux types de procédures sous FreeBASIC: des procédures qui ne retournent pas de valeur et des procédures qui en retournent une.

{{fbdoc item="section" value="Les procédures Sub"}}
	Les //Sub// sont des procedures qui ne retournent aucune valeur. Eles sont déclarées en utilisant le mot-clef ##[[KeyPgDeclare Declare]]## et définies en utilisant le mot-clef ##[[KeyPgSub Sub]]##. Déclarer une de procédures introduit son nom afin qu'elle puisse être appelée et la définition de la procédure liste les instructions de code qui seront exécutées lorsqu'elle sera appelée. Une //sub// est  appelée simplement en utilisant son nom queque part dans le programme.

{{fbdoc item="filename" value="examples/manual/proguide/procs/subs.bas"}}%%(freebasic)
' introduces the sub 'MyProcedure'
declare sub MyProcedure

' calls the procedure 'MyProcedure'
MyProcedure

' defines the procedure body for 'MyProcedure'
sub MyProcedure
	print "the body of MyProcedure"
end sub
%%
	produira l'affichage:

%%
the body of MyProcedure
%%

	Notez que seule la déclaration est nécessaire pour appeler la procédure. La procédure peut être définie ultérieurement dans le code ou même dans un fichier source tout à fait différent.

{{fbdoc item="section" value="Les fonctions"}}
	Les //fonctions// sont des procédures qui retournent une valeur au point du code depuis lequel elles ont été appelées. Vous pouvez penser qu'un appel de //fonction// est comme l'évaluation d'une expression, tout comme une variable ou un objet. Elles sont déclarées en utilisant le mot-clef ##[[KeyPgDeclare Declare]]## et définies en utilisant le mot-clef ##[[KeyPgFunction Function]]##. Le type de valeur que la //fonction// retourne est spécifié à la fin de la déclaration.

{{fbdoc item="filename" value="examples/manual/proguide/procs/functions.bas"}}%%(freebasic)
' introduces and defines a procedure that returns an integer value
function MyProcedure as integer
	return 10
end function

' calls the procedure, and stores its return value in a variable
dim i as integer = MyProcedure
print i
%%
	produira l'affichage:

%%
10
%%
	Comme la définition est une déclaration, ainsi la procédure peut être appelée après qu'elle a été définie.

	Il s'agit d'une convention commune, lors de l'appel d'une procédure de placer des parenthèses ##'()'## après le nom de la procédure, pour signifier un appel de procédure. Cependant, ""FreeBASIC"" ne l'exige pas.

{{fbdoc item="see"}}
	- [[ProPgPassingArguments Passage d'arguments aux procédures]]
	- [[ProPgReturnValue Retourner une valeur]]
	- ##[[KeyPgDeclare Declare]]##
	- ##[[KeyPgSub Sub]]##
	- ##[[KeyPgFunction Function]]##

{{fbdoc item="back" value="CatPgProgrammer|Programmer's Guide"}}

