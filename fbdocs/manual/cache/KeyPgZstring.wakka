{{fbdoc item="title" value="ZSTRING"}}----
Type de donn&eacute;es standard : cha&icirc;ne de caract&egrave;res 8 bits

{{fbdoc item="syntax"}}##
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** * //size//
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** [[KeyPgPtr ptr]]
##
{{fbdoc item="desc"}}
	Une ##**ZString**## est un tableau C-style &agrave; taille fixe de caract&egrave;res qui n'a pas de descripteur donc plus rapide &agrave; passer comme argument d'une fonction. FreeBasic &eacute;vite tout d&eacute;bordement qui pourrait se produire, en tronquant le contenu.

	Un [[KeyPgPtr Ptr]] ##**ZString**## peut pointer sur une ##**ZString**## standard , peut &eacute;galement &ecirc;tre utilis&eacute; pour mettre en &oelig;uvre une ##**ZString**## "g&eacute;r&eacute;e par l'utilisateur", dans ce cas ##[[KeyPgAllocate Allocate]]##/##[[KeyPgReallocate Reallocate]]##/##[[KeyPgDeallocate Deallocate]]## doivent &ecirc;tre utilis&eacute;s pour la dimensionner/redimensionner/lib&eacute;rer et c'est &agrave; l'utilisateur de g&eacute;rer les d&eacute;bordements. 
	
	La fin de la cha&icirc;ne est marqu&eacute;e avec le caract&egrave;re ASCII 0, ceci est g&eacute;r&eacute; automatiquement par les fonctions FreeBASIC de gestion des cha&icirc;nes. Le caract&egrave;re ASCII 0 ne doit jamais faire partie du texte de la ##**ZString**## sinon il sera tronqu&eacute;, car il n'y a pas de descripteur. 
	
	Pour une ##**ZString**##, ##[[KeyPgLen Len]]## retourne la taille du contenu de la cha&icirc;ne et ##[[KeyPgSizeof SizeOf]]## retourne l'espace allou&eacute; &agrave; la ##**ZString**##.
	
	Ce type existe pour un interfa&ccedil;age plus ais&eacute; avec les biblioth&egrave;ques du langage C et aussi pour remplacer les cha&icirc;nes de longueur fixe, qui ne peuvent &ecirc;tre g&eacute;r&eacute;es par des pointeurs. Toutes les fonctions intrins&egrave;ques de cha&icirc;nes comme ##[[KeyPgLeft Left]]##, ainsi que tout op&eacute;rateur de cha&icirc;ne, fonctionnent aussi avec ##**ZString**##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/datatype/zstring.bas"}}%%(freebasic)
dim as zstring * 14 str1 => "hello, world"
print str1
print len(str1)    'returns 12, the size of the string it contains 
print sizeof(str1) 'returns 14, the size of the variable
%%

{{fbdoc item="filename" value="examples/manual/datatype/zstring2.bas"}}%%(freebasic)
dim as zstring ptr str2
str2 = allocate( 14 )
*str2 = "hello, world"
print *str2
print len(*str2)      'returns 12, the size of the string it contains 
print sizeof(*str2)  'returns len(zstring), the size of the variable
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Zstring**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgString String]]##
	- ##[[KeyPgWstring Wstring]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}{{fbdoc item="back" value="CatPgString|String Functions"}}