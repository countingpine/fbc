{{fbdoc item="title" value="ZSTRING"}}----
Type de données standard : chaîne de caractères 8 bits

{{fbdoc item="syntax"}}##
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** * //size//
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Zstring** [[KeyPgPtr ptr]]
##
{{fbdoc item="desc"}}
	Une ##**Zstring**## est un tableau C-style à taille fixe de caractères qui n'a pas de descripteur donc plus rapide à passer comme argument d'une fonction. ""FreeBASIC"" évite tout débordement qui pourrait se produire, en tronquant le contenu.

	Un ##**Zstring** [[KeyPgPtr ptr]]## peut pointer sur une ##**Zstring**## standard , peut également être utilisé pour mettre en œuvre une ##**ZString**## "gérée par l'utilisateur", dans ce cas ##[[KeyPgAllocate Allocate]]##/##[[KeyPgReallocate Reallocate]]##/##[[KeyPgDeallocate Deallocate]]## doivent être utilisés pour la dimensionner/redimensionner/libérer et c'est à l'utilisateur de gérer les débordements. 
	
	La fin de la chaîne est marquée avec le caractère ASCII 0, ceci est géré automatiquement par les fonctions ""FreeBASIC"" de gestion des chaînes. Le caractère ASCII 0 ne doit jamais faire partie du texte de la ##**ZString**## sinon il sera tronqué, car il n'y a pas de descripteur. 
	
	Pour une ##**Zstring**##, ##[[KeyPgLen Len]]## retourne la taille du contenu de la chaîne et ##[[KeyPgSizeof Sizeof]]## retourne l'espace alloué à la ##**ZString**##.
	
	Ce type existe pour un interfaçage plus aisé avec les bibliothèques du langage C et aussi pour remplacer les chaînes de longueur fixe, qui ne peuvent être gérées par des pointeurs. Toutes les fonctions intrinsèques de chaînes comme ##[[KeyPgLeft Left]]##, ainsi que tout opérateur de chaîne, fonctionnent aussi avec ##**Zstring**##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/datatype/zstring.bas"}}%%(freebasic)
dim as zstring * 14 str1 => "hello, world"
print str1
print len(str1)    'returns 12, the size of the string it contains 
print sizeof(str1) 'returns 14, the size of the variable
%%

{{fbdoc item="filename" value="examples/manual/datatype/zstring2.bas"}}%%(freebasic)
dim as zstring ptr str2
str2 = allocate( 14 )
*str2 = "hello, world"
print *str2
print len(*str2)      'returns 12, the size of the string it contains 
print sizeof(*str2)  'returns len(zstring), the size of the variable
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Zstring""**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgString String]]##
	- ##[[KeyPgWstring Wstring]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}{{fbdoc item="back" value="CatPgString|String Functions"}}

