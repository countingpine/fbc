{{fbdoc item="title" value="WSTRING"}}----
Type de donn&eacute;es standard : cha&icirc;nes de caract&egrave;res larges (2 octets)

{{fbdoc item="syntax"}}##
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Wstring** * //size//
	[[KeyPgDim dim]] //variable// [[KeyPgAs as]] **Wstring** [[KeyPgPtr ptr]]
##
{{fbdoc item="desc"}}
	Une ##**WString**## est un tableau &agrave; taille fixe de caract&egrave;res larges qui ne d&eacute;borde jamais si la taille est connue au moment de la compilation. Il n'y a pas de descripteur, et ne peut &ecirc;tre redimensionn&eacute; sauf si c'est un pointeur et que ##[[KeyPgAllocate Allocate]]##/##[[KeyPgReallocate Reallocate]]##/##[[KeyPgDeallocate Deallocate]]## sont utilis&eacute;s directement.

	La fin de la cha&icirc;ne est marqu&eacute;e avec le caract&egrave;re 0, donc ce caract&egrave;re ne doit jamais faire partie du contenu de ##**WString**## ou ce contenu sera tronqu&eacute;.

	Ce type existe pour supporter les alphabets avec une base non-Latin. Toutes les fonctions intrins&egrave;ques de cha&icirc;nes comme ##[[KeyPgLeft Left]]## , ainsi que tout op&eacute;rateur de cha&icirc;ne, fontionnent aussi avec ##**WString**##.

	En plus des fichiers ASCII avec des s&eacute;quences d'&eacute;chappement Unicode (\u), FreeBasic peut analyser les fichiers source UTF-8, UTF-16LE, UTF-16BE, UTF-32LE et UTF-32BE.

	Les fonctions de fichier texte de FreeBasic peuvent lire et &eacute;crire des fichiers Unicode dans des codages diff&eacute;rents, &agrave; condition que le codage = ##[[KeyPgEncoding Encoding]]## soit sp&eacute;cifi&eacute; lorsque le fichier est ouvert. Le texte est automatiquement converti dans le codage interne &agrave; la lecture et reconverti dans le codage du fichier lors de l'&eacute;criture. 
	
	##[[KeyPgSizeof SizeOf]]##( ##**WString**## ) retourne le nombre d'octets utilis&eacute;s par ##**WString**## dans la plate-forme courante.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/datatype/wstring.bas"}}%%(freebasic)
dim as wstring * 14 str1 => "hello, world"
print str1
print len(str1)    'returns 12, the length of the string it contains 
print sizeof(str1) 'returns 14 * sizeof(wstring), the number of bytes used by the variable
%%

{{fbdoc item="filename" value="examples/manual/datatype/wstring2.bas"}}%%(freebasic)
dim as wstring ptr str2
str2 = allocate( 14 * len(wstring) )
*str2 = "hello, world"
print *str2
print len(*str2)      'returns 12, the length of the string it points to
%%

{{fbdoc item="target"}}
	Support for wstrings relies in the C runtime library available in the platform and the internal format may vary.
		- Unicode n'est pas support&eacute; dans le portage DOS de FreeBASIC. Dans ce portage un caract&egrave;re vaut toujours 1 octet et ##[[KeyPgWstring Wstrings]]## va se comporter en tant que norme ASCII ##[[KeyPgZstring Zstrings]]##
		- Sous Win32 wstrings sont encod&eacute;es en UCS-2 (UTF-16 LE) et un caract&egrave;re vaut 2 octets.
		- Sous Linux wstrings sont encod&eacute;es en UCS-4 et un caract&egrave;re vaut 4 octets.

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si r&eacute;f&eacute;renc&eacute; avec l'alias ##**__Wstring**##.

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC

{{fbdoc item="see"}}
	- ##[[KeyPgString String]]## (data type)
	- ##[[KeyPgZstring Zstring]]## (data type)
	- ##[[KeyPgWstring Wstring]]## (data type)
	- ##[[KeyPgStringFunction String]]## (function)
	- ##[[KeyPgWstringFunction Wstring]]## (function)
	- ##[[KeyPgWspace Wspace]]##
	- ##[[KeyPgWstr Wstr]]##
	- ##[[KeyPgWchr Wchr]]##
	- ##[[KeyPgWbin Wbin]]##
	- ##[[KeyPgWhex Whex]]##
	- ##[[KeyPgWoct Woct]]##
	- ##[[KeyPgWinput Winput()]]##

{{fbdoc item="back" value="CatPgStdDataTypes|Standard Data Types"}}{{fbdoc item="back" value="CatPgString|String Functions"}}