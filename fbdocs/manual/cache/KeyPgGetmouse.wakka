{{fbdoc item="title" value="GETMOUSE"}}----
Récupère l'état du dispositif de pointage de la souris

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Getmouse** ( [[KeyPgByref byref]] //x// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //y// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //wheel// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0, [[KeyPgByref byref]] //buttons// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0, [[KeyPgByref byref]] //clip// [[KeyPgAs as]] [[KeyPgInteger integer]] = 0 ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Getmouse** (//x//, //y// [, [ //wheel// ] [, [ //buttons// ] [, [ //clip// ]]]])
##
{{fbdoc item="param"}}
	##//x//##
		valeur de la coordonnée x
	##//y//##
		valeur de la coordonnée y
	##//wheel//##
		valeur de la molette
	##//buttons//##
		état des boutons
	##//clip//##
		état "clip"

{{fbdoc item="ret"}}
	##0## si succès ou ##1## si échec.

{{fbdoc item="desc"}}
	##**GetMouse**## détermine la position de la souris et l'état des boutons; l'information est retournée dans les variables passées par référence à la fonction. Si aucune souris n'est disponible, toutes les variables contiendront la valeur ##-1##. 
	
	En mode console, les coordonnées ##//x//## et ##//y//## sont les coordonnées de la cellule caractère où se trouve la souris; le coin en haut à gauche de l'écran  a les coordonnées ##0,0##.. Si la souris sort de la fenêtre console, ##**GetMouse**## renvoie les dernières coordonnées lorsque la souris était encore sur la fenêtre. 
	
	En mode graphique, ##//x//## et ##//y//## retournent toujours les coordonnées en pixels relatives au coin en haut à gauche de l'écran, qui lui a les coordonnées 0,0; un système de coordonnées personnel établi via ##[[KeyPgViewgraphics View]]## ou ##[[KeyPgWindow Window]]## n'affectera pas les coordonnées retournées par ##**GetMouse**##. Si la souris sort de la fenêtre, toutes les valeurs seront mises à ##-1##.
	
	##//Wheel//## est le compteur de la molette souris; actionner la molette vers l'avant augmentera la valeur du compteur, une rotation vers l'arrière diminuera la valeur du compteur. Au départ du programme ou quand un nouveau mode graphique est validé via ##[[KeyPgScreengraphics Screen]]##, la position de la molette est remise à 0. ""FreeBASIC"" ne gère pas toujours la molette pour certaines plates-formes, dans ce cas une valeur 0 est toujours renvoyée.
	
	##//Buttons//## stocke l'état des boutons sous la forme d'un masque de bits: le bit 0 est valide (à 1) si le bouton gauche est appuyé; le bit 1 est valide si le bouton droit est appuyé; le bit 2 est valide si le bouton central / molette est appuyé.

	##//Clip//## stocke l'état de "clipping"; si à ##1##, la souris est "clippée" à la fenêtre graphique; si à ##0##, la souris n'est pas "clippée".

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/input/getmouse.bas"}}%%(freebasic)

DIM AS INTEGER x, y, buttons, res 
' Set video mode and enter loop
SCREENRES 640, 480, 8
DO
	' Recupere x, y souris et boutons. Discard wheel position.
	res = GETMOUSE (x, y, , buttons)
	LOCATE 1, 1
	IF res <> 0 THEN '' Failure

#IFDEF __FB_DOS__
		PRINT "Mouse or mouse driver not available"
#ELSE
		PRINT "Mouse not available or not on window"
#ENDIF

	ELSE
		PRINT USING "Mouse position: ###:###  Buttons: "; x; y;
		IF buttons AND 1 THEN PRINT "L";
		IF buttons AND 2 THEN PRINT "R";
		IF buttons AND 4 THEN PRINT "M";
		PRINT "   "
	END IF
LOOP WHILE INKEY = ""
END
%%
{{fbdoc item="filename" value="examples/manual/input/getmouse2.bas"}}%%(freebasic)
'Example 2: type-union-type structure
type mouse
	as integer res
	as integer x, y, wheel, clip
	union
	    buttons as integer
	    type
	        left:1 as integer
	        right:1 as integer
	        middle:1 as integer
	    end type
	end union
end type
 
screen 11
dim as mouse m

do
	m.res = getmouse( m.x, m.y, m.wheel, m.buttons, m.clip )
	cls
	print using "res = #"; m.res
	print using "x = ###; y = ###; wheel = +###; clip = ##"; m.x; m.y; m.wheel; m.clip
	print using "buttons = ##; left = #; middle = #; right = #"; m.buttons; m.left; m.middle; m.right
	sleep 10, 1
loop while inkey = ""
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Getmouse""**##.  Les variables passées doivent aussi être du type ##[[KeyPgLong Long]]## au lieu de ##[[KeyPgInteger Integer (Entier)]]##.

{{fbdoc item="target"}}
	- On ""Win32"", scroll wheel changes are not guaranteed to be detected in full-screen console mode. 
	- In DOS, the "clip" value has no relevance.  Additionally the wheel and middle button will not work unless supported and enabled by the mouse driver. See also [[FaqDOS]].

{{fbdoc item="diff"}}
	- Nouveau pour FreeBASIC 

{{fbdoc item="see"}}
	- ##[[KeyPgScreenres ScreenRes]]## valide le mode graphique par résolution
	- ##[[KeyPgScreengraphics Screen (Graphiques)]]## valide le mode graphique méthode QB
	- ##[[KeyPgSetmouse Setmouse]]##
	- ##[[KeyPgMultikey Multikey]]##
	- ##[[KeyPgGetjoystick Getjoystick]]##

{{fbdoc item="back" value="CatPgGfxInput|User Input Functions"}}