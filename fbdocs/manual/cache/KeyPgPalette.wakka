{{fbdoc item="title" value="PALETTE"}}----
Personnalise les couleurs dans les modes de couleurs palettis&eacute;es

{{fbdoc item="syntax"}}##
	**Palette** [Get] [//index//, //color//]
	**Palette** [Get] [//index//, //r//, //g//, //b//]
	**Palette** [Get] Using //arrayname(idx)//
##
{{fbdoc item="param"}}
	##Get##
		indique une demande d'information et non une validation d'information palette
	##Using##
		indique l'utilisation d'un tableau de valeurs de couleur
	##//index//##
		indice de la palette
	##//color//##
		attribut couleur
	##//r//##
		composante rouge de couleur
	##//g//##
		composante vert de couleur
	##//b//##
		composante bleu de couleur
	##//arrayname(idx)//##
		tableau et indice pour obtenir/valider les attributs de couleur

{{fbdoc item="desc"}}
	##**Palette**## est utilis&eacute; pour r&eacute;cup&eacute;rer ou &eacute;tablir la palette courante pour les modes graphiques avec une profondeur de couleur jusqu'&agrave; 8bpp (8 bits par pixel); l'utilisation de ##**Palette**## quand on est dans un mode de profondeur de couleur sup&eacute;rieur n'a aucun effet. Appeler ##**Palette**## sans argument restaure la palette par d&eacute;faut pour le mode graphique courant, comme le fait ##[[KeyPgScreengraphics Screen (Graphique)]]##.
	La GfxLib valide une [[GfxDefPalettes palette par d&eacute;faut]] quand un mode [[KeyPgScreengraphics Screen]] est initialis&eacute;.
	
	**Premi&egrave;re forme**
		Si vous sp&eacute;cifiez ##//index//## et ##//color//##, ceux-ci d&eacute;pendent du mode courant:
		{{table columns="" cellpadding="2" cells="<table>Mode &eacutecran;##//index//##;##//color//##;1;0-3;0-15;2;0-1;0-15;7,8;0-15;0-15;9;0-15;0-63;11;0-1;voir ci-dessous;12;0-15;voir ci-dessous;13 &agrave 21;0-255;voir ci-dessous;</table>
		Dans les modes &eacute;cran 1, 2, 7, 8 et 9 vous assignez &agrave; chaque indice de couleur une des couleurs disponible dans la plage. Dans les autres modes &eacute;cran, la couleur doit &ecirc;tre sp&eacute;cifi&eacute;e dans la forme &hBBVVRR, o&ugrave; BB, VV et RR sont les composantes bleu, vert et rouge dans la plage &h0-&h3F en hexad&eacute;cimal (0-63 en d&eacute;cimal). Si vous n'aimez pas la forme hexad&eacute;cimale, vous pouvez utiliser la formule ci-dessous pour calculer la valeur enti&egrave;re &agrave; passer &agrave; ce param&egrave;tre:
		##color = red [[KeyPgOpOr or]] (green [[KeyPgOpShiftLeft shl]] 8) [[KeyPgOpOr or]] (blue [[KeyPgOpShiftLeft shl]] 16)##
		O&ugrave; 'red' (rouge), 'green' (vert) et 'blue' (bleu) sont dans la plage 0-63. Notez SVP que les valeurs de couleur accept&eacute;es par ##**Palette**## **ne** sont **pas** de la m&ecirc;me forme que celles retourn&eacute;es par la macro ##[[KeyPgRgb RGB]]## (les champs rouge et bleu sont intervertis, et la plage est diff&eacute;rente); c'est une question de compatibilit&eacute; avec QB.

	**Seconde forme**
		Dans la seconde forme, vous pr&eacute;cisez les composantes rouge, vert et bleu directement pour une palette, en appelant ##**Palette**## avec 4 param&egrave;tres. Dans ce cas ##//r//##, ##//g//## et ##//b//## doivent &ecirc;tre dans la plage ##0##-##255##.
	
	**Troisi&egrave;me forme**
		Appeler ##**Palette Using**## permet d'&eacute;tablir en une seule fois une liste de valeurs de couleur; vous devrez passer un tableau ayant autant d'&eacute;l&eacute;ments que les indices de couleur disponibles pour la profondeur de couleur de votre mode graphique courant (2 pour 1bpp, 4 pour 2bpp, 16 pour 4bpp ou 256 pour 8bpp). Les &eacute;l&eacute;ments du tableau doivent &ecirc;tre des valeurs enti&egrave;res de couleur comme d&eacute;crit pr&eacute;c&eacute;demment. Les couleurs stock&eacute;es dans ##//arrayname//## d&eacute;butent avec l'indice donn&eacute; par ##//idx//## puis sont assign&eacute;es &agrave; chaque indice de la palette, en commen&ccedil;ant par 0.
	
	Les formes 1 et 3 sont pour la compatibilit&eacute; descendante avec QB; la forme 2 facilite la prise en charge de la palette. Chaque modification de la palette est imm&eacute;diatement suivi d'effet &agrave; l'&eacute;cran.

	Si l'option ##**Get**## est sp&eacute;cifi&eacute;e, ##**Palette**## r&eacute;cup&egrave;re au lieu de valider les valeurs de la palette courante. Les param&egrave;tres ont la m&ecirc;me signification pour chaque forme utilis&eacute;e, mais dans ce cas ##//color//##, ##//r//##, ##//g//## et ##//b//## sont des variables pass&eacute;es par r&eacute;f&eacute;rence qui contiendront les valeurs de couleur RVB &agrave; la sortie de la fonction.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/gfx/palette.bas"}}%%(freebasic)
' Valide une seule couleur, forme 1.
screen 15
locate 1,1: color 15
print "Press any key to change my color!"
sleep
' Maintenant change couleur 15 teintes vers lumineux red
palette 15, &h00003F
sleep
%%

{{fbdoc item="filename" value="examples/manual/gfx/palette2.bas"}}%%(freebasic)
' Obtient une seule couleur, forme 2.
dim as integer r, g, b
screen 13
palette get 32, r, g, b
print "Color 32 hues:"
print using "Red:### Green:### Blue:###"; r; g; b
sleep
%%

{{fbdoc item="filename" value="examples/manual/gfx/palette3.bas"}}%%(freebasic)
' Obtient palette entiere, forme 3.
dim pal(1 to 256) as integer
dim i as integer
screen 13
palette get using pal
for i = 1 to 16
	print "Color"; i; " ="; hex(pal(i))
next i
sleep
%%

{{fbdoc item="diff"}}
	- La version QB ne prend pas en charge la r&eacute;cup&eacute;ration de la palette.

{{fbdoc item="see"}}
	- ##[[KeyPgScreengraphics Screen (Graphique)]]##
	- ##[[KeyPgColor Color]]##
	- ##[[KeyPgUsing Using]]##
	- ##[[GfxInternalFormats Formats graphiques internes]]##

{{fbdoc item="back" value="CatPgGfx2D|2D Drawing Functions"}}