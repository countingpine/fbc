{{fbdoc item="title" value="Calling Conventions"}}----
Précise la façon dont les procédures sont appelées.

Les conventions d'appel déterminent comment le code appelant interagit avec les procédures quand elles sont appelées. Elles précisent les règles sur la façon dont les paramètres sont chargés sur la pile des appels, comment les valeurs sont retournées et quand la pile des appels est nettoyée. Cette information est utile lors de l'interaction avec du code écrit dans d'autres langages, en particulier le langage d'assemblage. Dans certains cas, les conventions d'appel appliquent également une sorte de "décoration" de nom pour les noms de procédure.

FreeBASIC supporte 3 conventions d'appel: **stdcall**, **cdecl** et **pascal**, spécifiées respectivement avec ##[[KeyPgStdcall Stdcall]]##, ##[[KeyPgCdecl Cdecl]]## et ##[[KeyPgPascal Pascal]]##. La Convention d'appel peut être spécifiée soit dans une déclaration de procédure soit dans la définition qui suit immédiatement le nom de la procédure. La déclaration d'une procédure doit avoir la même convention de nommage que la définition. La convention par défaut est **stdcall** lorsqu'elle n'est pas spécifiée ou dans les blocs ##[[KeyPgExternBlock Extern "Windows"]]## et ##[[KeyPgExternBlock Extern "Windows-MS"]]## blocks.

Dans tous les conventions d'appel, l'intégralité des valeurs de retour de procédure est retournée dans le(s) registre(s) ##EAX##(, ##EDX##) et les valeurs de retour à virgule flottante sont stockées dans le registre ##ST(0)## (le haut de la pile en virgule flottante). Les valeurs de types définis par l'utilisateur sont retournées dans le(s) registre(s) ##EAX##(, ##EDX##) si elles ont une taille de huit (8) octets ou moins, sinon, elles sont retournées en mémoire avec leur adresse poussée sur la pile des appels après les paramètres.

{{fbdoc item="section" value="stdcall"}}	
	Dans la convention **stdcall**, les paramètres de procédure sont chargés sur la pile des appels dans l'ordre opposé à celui de leur déclaration, c'est à dire, de la droite vers la gauche. La procédure est chargée d'extraire tous les paramètres de la pile des appels.

	**stdcall** est la convention d'appel par défaut pour toutes les procédures FreeBASIC et celles dans les blocs ##[[KeyPgExternBlock Extern "Windows"]]## et ##[[KeyPgExternBlock Extern "Windows-MS"]]##. C'est également la convention par défaut utilisée dans l'API Windows.

	{{fbdoc item="target"}}
	- Dans les plates-formes DOS et Windows, le nom de procédure est "décoré" d'un suffixe "##@//N//##", où ##//N//## est la taille totale, en octets, de tous les paramètres transmis.

{{fbdoc item="section" value="cdecl"}}
	Dans la convention **cdecl**, les paramètres de procédure sont chargés sur la pile des appels dans l'ordre opposé à celui de leur déclaration, c'est à dire, de la droite vers la gauche. Le code appelant est chargé d'extraire tous les paramètres de la pile des appels.

	**cdecl** est la convention d'appel par défaut pour les procédures des blocs ##[[KeyPgExternBlock Extern "C"]]## et ##[[KeyPgExternBlock Extern "C""++"""]]##. C'est également la convention par défaut utilisée par la plupart des compilateurs C et C++.

{{fbdoc item="section" value="pascal"}}
	Dans la convention **pascal**, les paramètres de procédure sont chargés sur la pile des appels dans l'ordre de leur déclaration, c'est à dire, de la gauche vers la droite. La procédure est chargée d'extraire tous les paramètres de la pile des appels.

	**pascal** est la convention par défaut utilisée par Pascal et la série des compilateurs Microsoft QuickBASIC.

Le tableau suivant résume les différences entre les différentes conventions d'appel:

	{{table columns="3" cellpadding="2" cells="Convention d'appel ; Les paramètres de procédure sont chargés sur la pile des appels ; Les paramètres sont extraits de la pile des appels par ; stdcall ; de la droite vers la gauche ; la procédure ; cdecl ; de la droite vers la gauche ; le code appelant ; pascal ; de la gauche vers la droite ; la procédure"}}

{{fbdoc item="target"}}
	- Sous DOS et Windows, toutes les conventions d'appel décorent les noms de procédure avec le préfixe ("_") trait de soulignement.

{{fbdoc item="see"}}
	- ##[[KeyPgDeclare Declare]]##, ##[[KeyPgSub Sub]]##, ##[[KeyPgFunction Function]]##
	- ##[[KeyPgStdcall Stdcall]]##, ##[[KeyPgCdecl Cdecl]]##, ##[[KeyPgPascal Pascal]]##
	- ##[[KeyPgExternBlock Extern..End Extern]]##

{{fbdoc item="back" value="CatPgProgrammer|Programmer's Guide"}}