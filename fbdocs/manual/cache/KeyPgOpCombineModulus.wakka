{{fbdoc item="title" value="Op&eacute;rateur Mod= (Modulo et Affectation)"}}----
Divise une valeur et assigne le reste à une variable

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgOperator operator]] **Mod=** ( [[KeyPgByref byref]] //lhs// [[KeyPgAs as]] [[KeyPgInteger integer]], [[KeyPgByref byref]] //rhs// [[KeyPgAs as]] [[KeyPgInteger integer]] )
##
{{fbdoc item="usage"}}##
	//lhs// **Mod=** //rhs//
##
{{fbdoc item="param"}}
	##//lhs//##
		La variable à affecter.
	##//rhs//##
		La valeur pour diviser##//lhs//##.

{{fbdoc item="desc"}}
	Cet opérateur divise deux valeurs de type ##[[KeyPgInteger Integer]]## et attribue le reste à la variable de son côté gauche (##//lhs//##). C'est fonctionnellement équivalent à:
##
		//lhs// = //lhs// [[KeyPgOpModulus Mod]] //rhs//
##
	Cet opérateur élève à la puissance et attribue une valeur à une variable. Il est fonctionnellement équivalent à:

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/operator/mod-assign.bas"}}%%(freebasic)
DIM n AS INTEGER
n = 11
n mod= 3
'' The result is 2
PRINT n
SLEEP
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, cet opérateur ne peut pas être surchargé.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgOpModulus Operator + (Modulo)]]##
	- [[CatPgMath Fonctions mathématiques]]

{{fbdoc item="back" value="CatPgOpAssignment|Assignment Operators"}}{{fbdoc item="back" value="CatPgOperators|Operators"}}

