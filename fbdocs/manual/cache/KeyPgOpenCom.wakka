{{fbdoc item="title" value="OPEN COM"}}----
Ouvre un port s&eacute;rie en entr&eacute;e et sortie

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Open Com** ( byref //options// [[KeyPgAs as]] [[KeyPgString string]], **AS** //filenum// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Open Com**( //options//, **AS**[#] //filenum// )
##
{{fbdoc item="param"}}
	##//options//##
		A [[KeyPgString String]] contenant les options de contr&ocirc;le du port.
	##//filenum//##
		Le num&eacute;ro de fichier &agrave; associer au port.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne z&eacute;ro (0) si succ&egrave;s et autrement un code d'erreur diff&eacute;rent de z&eacute;ro.

{{fbdoc item="desc"}}
	Cette commande ouvre un port s&eacute;rie du PC, ce qui permet d'envoyer et de recevoir des donn&eacute;es en utilisant les commandes de fichiers normales comme PRINT #, INPUT #, GET #,...

	Le param&egrave;tre principal est une [[KeyPgString String]] qui d&eacute;crit, &agrave; tout le moins, le port de communication &agrave; ouvrir. Elle a le format:

		##"**COM**//n//**:** [ //baudrate// ][ , [ //parity// ][ , [ //data_bits// ][ , [ //stop_bits// ][ , [ //extended_options// ]]]]]"##

	o&ugrave;,
	##//n//##
		Port Com &agrave; ouvrir. "1", "2", "3", "4", etc.  Certaines plates-formes ont plus de ports s&eacute;rie selon la fa&ccedil;on dont le syst&egrave;me d'exploitation est configur&eacute;.  Si ##//n//## est absent, "COM:" sera "COM1:", sauf sous Linux o&ugrave; "COM:" sera "/dev/modem"
	##//baudrate//##
		"300" (par d&eacute;faut), "1200", ..., etc.
	##//parity//##
		"N" (none=aucune), "E" (even=paire, par d&eacute;faut), "O" (odd=impaire), "S" (space=espace), "M" (mark=marque), "PE" (QB-quirk: checked, even parity)
	##//data_bits//##
		"5", "6", "7" (par d&eacute;faut) or "8".
	##//stop_bits//##
		"1", "1.5" or "2". //(la valeur par d&eacute;faut d&eacute;pend de "baud rate" et "data bits", voir table ci-dessous)//

			{{table columns="" cellpadding="2" cells="<table>Condition;Nombre de bits d'arr&ecirct par d&eacutefaut;baud rate &lt= 110 et data bits = 5;1.5;baud rate &lt= 110 et data bits &gt= 6;2;baud rate &gt 110;1;</table>
	##//extended_options//##
		Options diverses. //(Voir table ci-dessous)//

			{{table columns="" cellpadding="2" cells="<table>Option;Action;'CSn';&Eacutetablit la dur&eacutee de CTS (en ms) (n&gt=0), 0 = arr&ecircter, par d&eacutefaut = 1000;'DSn';&Eacutetablit la dur&eacutee de DSR (en ms) (n&gt=0), 0 = arr&ecircter, par d&eacutefaut = 1000;'CDn';&Eacutetablit la dur&eacutee de Carrier Detect (en ms) (n&gt=0), 0 = arr&ecircter;'OPn';&Eacutetablit 'Open Timeout' (en ms) (n&gt=0), 0 = arr&ecircter;'TBn';&Eacutetablit la taille de 'Transmit Buffer' (n&gt=0), 0 = par d&eacutefaut, d&eacutepend de la plate-forme ;'RBn';&Eacutetablit la taille de 'Receive Buffer' (n&gt=0), 0 = par d&eacutefaut, d&eacutepend de la plate-forme;'RS';Supprime la d&eacutetection de RTS;'LF';Communique en mode ASCII (ajoute LF &agrave chaque CR) - Win32 ne permet pas;'ASC';comme 'LF';'BIN';L'oppos&eacute de LF et fonctionnera toujours;'PE';Valide recherche de 'Parity';'DT';Conserve DTR valide apr&egraves CLOSE;'FE';Rejeter caract&egravere non valide en cas d'erreur;'ME';Ignorer toutes les erreurs;'IRn';num&eacutero d'IRQ pour COM (support&eacute seulement (?) sous DOS);</table>

	Tous les items sont facultatifs, sauf pour le port COM. L'ordre de ##//baudrate//##, ##//parity//##, ##//data_bits//##, ##//stop_bits//## est fix&eacute;. Tout &eacute;l&eacute;ment fixe saut&eacute; ( ##//baudrate//##, etc...) doit &ecirc;tre vide.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/opencom1.bas"}}%%(freebasic)
OPEN COM "COM1:9600,N,,2" as 1
%%
	Ouvre COM1 avec 9600 baud, no parity, 7 data bits et 2 stop bits.

{{fbdoc item="filename" value="examples/manual/fileio/opencom2.bas"}}%%(freebasic)
OPEN COM "COM1:115200" as 1
%%
	Ouvre COM1 avec 115200 baud, "even" parity, 7 data bits et 1 stop bits. 

{{fbdoc item="section" value="Diff&eacute;rences de plates-formes
	- Sur les plates-formes Windows ##"COM:"## est ##"COM1:"##
	- Sur les plates-formes Linux
		##"COM:"## est ##"/dev/modem"##
		##"COM1:"## est ##"/dev/ttyS0"##
		##"COM2:"## est ##"/dev/ttyS1"##, etc 
		##"/dev/xyz:"## est ##"/dev/xyz"##, etc
	<li>Le pilote s&eacute;rie DOS est exp&eacute;rimental et peut acc&eacute;der aux ports COM 1 &agrave; 4 
		Il utilise la base suivante I/O et IRQ par d&eacute;faut: 
		COM1 - &h3f8 - IRQ4 
		COM2 - &h2f8 - IRQ3 
		COM3 - &h3e8 - IRQ4 
		COM4 - &h2e8 - IRQ3 
		Depuis fbc-0.18.4, une alternative IRQ peut &ecirc;tre sp&eacute;cifi&eacute;e en utilisant l'option du "IRn" protocole o&ugrave; "n" va de 3 &agrave; 7.
		&Aacute; l'heure actuelle pas pris en charge: IRQ sur le PIC esclave, base alternative adresses I / O, D&eacute;lais d'attente et la plupart des erreurs d&eacute;tect&eacute;es dans QB, contr&ocirc;le de flux mat&eacute;riel, FIFO.
		##"COM:"## est ##"COM1:"##
{{fbdoc item="lang"}}
	- dans le dialecte //[[CompilerOptlang -lang qb]]// l'ancienne syntaxe ##OPEN "COMx:...## est admise. 

{{fbdoc item="diff"}}
	<li>Dans la syntaxe QB il y avait ##OPEN  "COMx:[baudrate] [,parity, [data_bits, [stop_bits, [extended_options]]]]"  FOR INPUT|OUTPUT|RANDOM AS [#] n##
	- Dans QB, seulement ##"COM1:"## et ##"COM2:"## sont support&eacute;s.  Dans FreeBASIC, tout port s&eacute;rie correctement configur&eacute; peut &ecirc;tre utilis&eacute;.

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}