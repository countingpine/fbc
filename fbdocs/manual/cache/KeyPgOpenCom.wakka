{{fbdoc item="title" value="OPEN COM"}}----
Ouvre un port série en entrée et sortie

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Open Com** ( byref //options// [[KeyPgAs as]] [[KeyPgString string]], **AS** //filenum// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgInteger integer]]
##
{{fbdoc item="usage"}}##
	//result// = **Open Com**( //options//, **AS**[#] //filenum// )
##
{{fbdoc item="param"}}
	##//options//##
		A [[KeyPgString string]] contenant les options de contrôle du port.
	##//filenum//##
		Le numéro de fichier à associer au port.

{{fbdoc item="ret"}}
	Retourne zéro (0) si succès et autrement un code d'erreur différent de zéro.

{{fbdoc item="desc"}}
	Cette commande ouvre un port série du PC, ce qui permet d'envoyer et de recevoir des données en utilisant les commandes de fichiers normales comme PRINT #, INPUT #, GET #,...

	Le paramètre principal est une [[KeyPgString string]] qui décrit, à tout le moins, le port de communication à ouvrir. Elle a le format:

		##"**COM**//n//**:** [ //baudrate// ][ , [ //parity// ][ , [ //data_bits// ][ , [ //stop_bits// ][ , [ //extended_options// ]]]]]"##

	où,
	##//n//##
		Port Com à ouvrir. "1", "2", "3", "4", etc.  Certaines plates-formes ont plus de ports série selon la façon dont le système d'exploitation est configuré.  Si ##//n//## est absent, "COM:" sera "COM1:", sauf sous Linux où "COM:" sera "/dev/modem"
	##//baudrate//##
		"300" (par défaut), "1200", ..., etc.
	##//parity//##
		"N" (none=aucune), "E" (even=paire, par défaut), "O" (odd=impaire), "S" (space=espace), "M" (mark=marque), "PE" (QB-quirk: checked, even parity)
	##//data_bits//##
		"5", "6", "7" (par défaut) or "8".
	##//stop_bits//##
		"1", "1.5" or "2". //(la valeur par défaut dépend de "baud rate" et "data bits", voir table ci-dessous)//

			{{table columns="2" cellpadding="2" cells="Condition;Nombre de bits d'arrêt par défaut;baud rate <= 110 et data bits = 5;1.5;baud rate >= 110 et data bits >= 6;2;baud rate > 110;1"}}
	##//extended_options//##
		Options diverses. //(Voir table ci-dessous)//

			{{table columns="2" cellpadding="2" cells="Option;Action;'CSn';Établit la durée de CTS (en ms) (n&gt=0), 0 = arrêter, par défaut = 1000;'DSn';Établit la durée de DSR (en ms) (n&gt=0), 0 = arrêter, par défaut = 1000;'CDn';Établit la durée de Carrier Detect (en ms) (n&gt=0), 0 = arrêter;'OPn';Établit 'Open Timeout' (en ms) (n&gt=0), 0 = arrêter;'TBn';Établit la taille de 'Transmit Buffer' (n&gt=0), 0 = par défaut, dépend de la plate-forme ;'RBn';Établit la taille de 'Receive Buffer' (n&gt=0), 0 = par défaut, dépend de la plate-forme;'RS';Supprime la détection de RTS;'LF';Communique en mode ASCII (ajoute LF à chaque CR) - Win32 ne permet pas;'ASC';comme 'LF';'BIN';L'opposé de LF et fonctionnera toujours;'PE';Valide recherche de 'Parity';'DT';Conserve DTR valide après CLOSE;'FE';Rejeter caractère non valide en cas d'erreur;'ME';Ignorer toutes les erreurs;'IRn';numéro d'IRQ pour COM (supporté seulement (?) sous DOS)"}}

	Tous les items sont facultatifs, sauf pour le port COM. L'ordre de ##//baudrate//##, ##//parity//##, ##//data_bits//##, ##//stop_bits//## est fixé. Tout élément fixe sauté ( ##//baudrate//##, etc...) doit être vide.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/opencom1.bas"}}%%(freebasic)
OPEN COM "COM1:9600,N,,2" as 1
%%
	Ouvre COM1 avec 9600 baud, no parity, 7 data bits et 2 stop bits.

{{fbdoc item="filename" value="examples/manual/fileio/opencom2.bas"}}%%(freebasic)
OPEN COM "COM1:115200" as 1
%%
	Ouvre COM1 avec 115200 baud, "even" parity, 7 data bits et 1 stop bits. 

{{fbdoc item="target"}}
	- Sur les plates-formes Windows ##"COM:"## est ##"COM1:"##
	- Sur les plates-formes Linux
		##"COM:"## est ##"/dev/modem"##
		##"COM1:"## est ##"/dev/ttyS0"##
		##"COM2:"## est ##"/dev/ttyS1"##, etc 
		##"/dev/xyz:"## est ##"/dev/xyz"##, etc
	- Le pilote série DOS est expérimental et peut accéder aux ports COM 1 à 4 
		Il utilise la base suivante I/O et IRQ par défaut: 
		COM1 - &h3f8 - IRQ4 
		COM2 - &h2f8 - IRQ3 
		COM3 - &h3e8 - IRQ4 
		COM4 - &h2e8 - IRQ3 
		Depuis fbc-0.18.4, une alternative IRQ peut être spécifiée en utilisant l'option du "IRn" protocole où "n" va de 3 à 7.
		Á l'heure actuelle pas pris en charge: IRQ sur le PIC esclave, base alternative adresses I / O, Délais d'attente et la plupart des erreurs détectées dans QB, contrôle de flux matériel, FIFO.
		##"COM:"## est ##"COM1:"##
{{fbdoc item="lang"}}
	- dans le dialecte //[[CompilerOptlang -lang qb]]// l'ancienne syntaxe ##OPEN "COMx:...## est admise. 

{{fbdoc item="diff"}}
	- Dans la syntaxe QB il y avait ##OPEN  "COMx:[baudrate] [,parity, [data_bits, [stop_bits, [extended_options]]]]"  FOR INPUT|OUTPUT|RANDOM AS [#] n##
	- Dans QB, seulement ##"COM1:"## et ##"COM2:"## sont supportés.  Dans FreeBASIC, tout port série correctement configuré peut être utilisé.

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}

