{{fbdoc item="title" value="LOCK"}}----
Limite l'accès en lecture/écriture sur un fichier ou une partie d'un fichier

{{fbdoc item="syntax"}}##
	**Lock** #//filenum//, //record//
	**Lock** #//filenum//, //start// To //end//
##
{{fbdoc item="param"}}
	##//filenum//##
		Le numéro du fichier pour ##[[KeyPgOpen Open (=ouvrir)]]## le fichier.
	##//record//##
		L'enregistrement (fichiers ##[[KeyPgRandom Random]]##) à verrouiller.
	##//start//##
		La position du premier octet (##[[KeyPgBinary Binary]]## files) à partir duquel verrouiller.
	##//end//##
		La position du dernier octet (##[[KeyPgBinary Binary]]## files) jusqu'où verrouiller.

{{fbdoc item="desc"}}
	##**Lock**## restreint temporairement l'accès par d'autres ##//threads//## ou programmes dans un fichier, ou une partie d'un fichier, généralement pour permettre une écriture sécurisée dans ce fichier (ou partie de...).

	Après avoir modifié les données, un ##[[KeyPgUnlock Unlock]]## avec les mêmes paramètres que ##**Lock**## doit être effectué.

	**Note: Cette commande ne fonctionne toujours pas, ni comme documentée, ni comme prévu. Elle semble être "cassée" pour le moment.**

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/fileio/lock.bas"}}%%(freebasic)
'' e.g. locking a file, reading 100 bytes, and unlocking it. 
'' To run, make sure there exists a file called 'file.ext' 
'' in the current directory that is at least 100 bytes.

dim array(1 to 100) as integer
dim f as integer, i as integer
f = freefile
open "file.ext" for binary as #f
lock #f, 1 to 100
for i = 1 to 100
	get #f, i, array(i)
next
unlock #f, 1 to 100
close #f
%%

{{fbdoc item="diff"}}
	- Actuellement, FB ne peut pas verrouiller implicitement tout le fichier.
	- En mode ##[[KeyPgRandom Random]]##, FB ne peut pas verrouiller une plage d'enregistrements.

{{fbdoc item="see"}}
	- ##[[KeyPgOpen Open]]##
	- ##[[KeyPgUnlock Unlock]]##
	- ##[[KeyPgScreenLock ScreenLock]]##

{{fbdoc item="back" value="CatPgFile|File I/O Functions"}}

