{{fbdoc item="title" value="VA_ARG"}}----
Retourne l'argument courant à partir d'une liste variable d'arguments.

{{fbdoc item="syntax"}}##
	//variable// = **va_arg** ( //argument_list//, [[DataType datatype]] )
##
{{fbdoc item="desc"}}
	La macro ##**va_arg**## permet l'utilisation d'un nombre variable d'arguments dans une fonction. ##**va_arg**## retourne l'argument en cours dans la liste, ##//argument_list//##, avec un type de données attendu ##//datatype//##. Avant que ##**va_arg**## puisse être utilisé, il doit être initialisé ##[[KeyPgVaFirst va_first]]##. Contrairement à la macro C ayant le même nom, ##**va_arg**## n'incrémente pas automatiquement ##//argument_list//## sur l'argument suivant dans la liste. La commande ##[[KeyPgVaNext va_next]]## doit être utilisée pour cela.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/procs/va_arg.bas"}}%%(freebasic)

' Note that CDECL is used here --> it must be used with an ellipsis argument (...).
FUNCTION Avg cdecl (Count as INTEGER, ... ) AS DOUBLE
	DIM ARG AS ANY PTR 
	DIM SUM AS DOUBLE = 0
	DIM i AS INTEGER
	
	ARG = VA_FIRST()

	FOR i = 1 TO COUNT
	    SUM += VA_ARG(ARG, DOUBLE)
	    ARG = VA_NEXT(ARG,DOUBLE)
	NEXT i
	RETURN SUM/COUNT
end function

PRINT AVG (4, 3.4,5.0,3.2,4.1)
PRINT AVG (2, 65.2,454.65481)

SLEEP
%%

Le résultat devrait ressembler à:
%%
3.925
259.927405
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__va_arg""**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgDots ... (Ellipse - suggestion)]]##
	- ##[[KeyPgVaFirst va_first]]##
	- ##[[KeyPgVaNext va_next]]##

{{fbdoc item="back" value="CatPgProcedures|Procedures"}}{{fbdoc item="back" value="CatPgVarArg|Variable Argument list"}}

