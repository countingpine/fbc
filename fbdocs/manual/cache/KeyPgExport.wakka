{{fbdoc item="title" value="EXPORT"}}----
Spécificateur de déclaration qui indique qu'une procédure dans une DLL doit être visible à partir d'autres programmes

{{fbdoc item="syntax"}}##
	{ [[KeyPgSub sub]] | [[KeyPgFunction function]] } //proc_name// ( //argumentlist// ) [ [[KeyPgAs as]] [[DataType datatype]] ] **Export**
##
{{fbdoc item="desc"}}
	Si une fonction est déclarée avec cette clause dans une DLL, elle est ajoutée à la table des exportations publiques, afin que les programmes externes puissent être liés dynamiquement à elle en utilisant [[KeyPgDylibsymbol Dylibsymbol]].

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/module/mydll.bas"}}%%(freebasic)
'' mydll.dll

'' in the DLL the function must be declared as export

Function AddNumbers Alias "AddNumbers" _
  ( _
	ByVal operand1 As Integer, ByVal operand2 As Integer _
  ) As Integer Export

   AddNumbers = operand1 + operand2

End Function
%%

{{fbdoc item="filename" value="examples/manual/module/export.bas"}}%%(freebasic)
'' create a function pointer, arguments must be the same type
'' as in the original function

Dim AddNumbers As Function ( ByVal As Integer, ByVal As Integer ) As Integer
Dim hndl As Any Ptr

hndl=DyLibLoad("mydll.dll")

'' find the proc address (case matters!)
AddNumbers = DyLibSymbol( hndl, "AddNumbers" )

'' then call it ...
Print "1 + 2 = " & AddNumbers( 1, 2 )

Sleep
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Export""**##.

{{fbdoc item="target"}}
	- Les bibliothèques de liens dynamiques ne sont pas disponibles sous DOS, car l'OS ne les supporte pas.

{{fbdoc item="diff"}}
	- Nouveau pour Freebasic

{{fbdoc item="see"}}
	- ##[[KeyPgDylibload Dylibload]]##
	- ##[[KeyPgDylibsymbol Dylibsymbol]]##
	- ##[[KeyPgAlias Alias]]##

{{fbdoc item="back" value="CatPgModularizing|Modularizing"}}{{fbdoc item="back" value="CatPgProcedures|Procedures"}}