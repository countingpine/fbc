{{fbdoc item="title" value="MKI"}}----
Copie binaire d'une variable ##[[KeyPgInteger Integer (enti&egrave;re)]]## en une ##[[KeyPgString String (cha&icirc;ne)]]##, r&eacute;glage de sa longueur &agrave; 4 octets

{{fbdoc item="syntax"}}##
	[[KeyPgDeclare declare]] [[KeyPgFunction function]] **Mki** ( [[KeyPgByval byval]] //number// [[KeyPgAs as]] [[KeyPgInteger integer]] ) [[KeyPgAs as]] [[KeyPgString string]]
##
{{fbdoc item="usage"}}##
	//result// = **Mki**[$]( //number// )
##
{{fbdoc item="param"}}
	##//number//##
		Une variable ##[[KeyPgInteger Integer (enti&egrave;re)]]## dont on fait une copie binaire vers une ##[[KeyPgString String (cha&icirc;ne)]]##.

{{fbdoc item="section" value="Valeur retourn&eacute;e
	Retourne une ##[[KeyPgString String (cha&icirc;ne)]]## copie binaire d'un nombre ##[[KeyPgInteger Integer (entier)]]##.

{{fbdoc item="desc"}}
	Ex&eacute;cute une copie binaire d'une variable ##[[KeyPgInteger Integer (enti&egrave;re)]]## vers une ##[[KeyPgString String (cha&icirc;ne)]]## dont la longueur est de 4 octets. La cha&icirc;ne r&eacute;sultat peut &ecirc;tre lue &agrave; nouveau comme un ##[[KeyPgInteger Integer (entier)]]## par ##[[KeyPgCvi CVI]]##

	Cette fonction est utile pour &eacute;crire une valeur num&eacute;rique dans un tampon sans utiliser de d&eacute;finition de ##[[KeyPgType Type]]##.

{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/strings/mki.bas"}}%%(freebasic)
dim a as integer, b as string
a=4534
b=mki(a)
print a, cvi(b)
sleep
%%

{{fbdoc item="lang"}}
	- Dans le dialecte //[[CompilerOptlang -lang qb]]//, ##**MKI**## retourne une cha&icirc;ne de 2 octets, car un entier QB n'a que 16 bits.
	- Le suffixe de type de cha&icirc;ne "$" est obligatoire dans le dialecte //[[CompilerOptlang -lang qb]]//.
	- Le suffixe de type de cha&icirc;ne "$" est facultatif dans les dialectes //[[CompilerOptlang -lang fblite]]// et //[[CompilerOptlang -lang fb]]//.

{{fbdoc item="see"}}
	- ##[[KeyPgCvi Cvi]]##

{{fbdoc item="back" value="CatPgString|String Functions"}}