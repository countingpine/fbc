{{fbdoc item="title" value="CAST"}}----
Convertit une expression dans un type de données spécifié

{{fbdoc item="syntax"}}##
	Cast( [[DataType datatype]], //expression// )
##
{{fbdoc item="desc"}}
	Convertit ##//expression//## dans un ##[[DataType datatype]]## différent. Utile pour être utilisé dans les macros lorsque ##[[DataType datatype]]## est inconnu et aussi lors de la conversion à [[KeyPgTypeAlias Type Alias]].

	Note: Il s'agit d'une forme générale des opérateurs de conversion tels que ##[[KeyPgCint Cint]]## ou ##[[KeyPgCdbl Cdbl]]##.  Ils sont plus souples, car ils peuvent être utilisés sur des types qui ont un opérateur ##[[KeyPgOpCast Cast]]##, mais n'ont pas de mot-clé intégré. Par exemple, ##**Cast**( //my_type//, //expr//)##.  Ils sont également appropriés pour une utilisation dans les cas où le type d'une variable n'est pas fixé dans le code - par exemple, il pourrait être ##[[KeyPgPpdefine Define]]## plus tôt, ou être le ##[[KeyPgTypeof Type of]]## d'une variable ou expression différente.

	Note: Si vous voulez utiliser un opérateur en particulier pour la conversion à différents types de ##[[KeyPgPointer Pointer]]##s, pensez plutôt à utiliser ##[[KeyPgCptr Cptr]]##.
  
{{fbdoc item="ex"}}
{{fbdoc item="filename" value="examples/manual/casting/cast.bas"}}%%(freebasic)
'' will print -128 because the integer literal will be converted to a signed Byte
'' (this Casting operation is equivalent to using CByte)
print cast( byte, &h0080 )

'' will print 3 because the floating-point value will be converted to an Integer
'' (this Casting operator is equivalent to using CInt)
print cast( integer, 3.1 )
%%

{{fbdoc item="lang"}}
	- Non disponible dans le dialecte //[[CompilerOptlang -lang qb]]// sauf si référencé avec l'alias ##**""__Cast""**##.

{{fbdoc item="diff"}}
	- Nouveau pour ""FreeBASIC""

{{fbdoc item="see"}}
	- ##[[KeyPgCptr Cptr]]##
	- ##[[KeyPgCint Cint]]##
	- ##[[KeyPgTypeof Typeof]]##

{{fbdoc item="back" value="CatPgCasting|Converting Data Types"}}

